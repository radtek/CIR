//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cir.Azure.MobileApp.Service.CirSyncService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvanceSearchModel", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.AdvanceSearch")]
    [System.SerializableAttribute()]
    public partial class AdvanceSearchModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.InputFields[] InputFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isPublicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.InputFields[] InputFields {
            get {
                return this.InputFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.InputFieldsField, value) != true)) {
                    this.InputFieldsField = value;
                    this.RaisePropertyChanged("InputFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseString {
            get {
                return this.ResponseStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseStringField, value) != true)) {
                    this.ResponseStringField = value;
                    this.RaisePropertyChanged("ResponseString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPublic {
            get {
                return this.isPublicField;
            }
            set {
                if ((this.isPublicField.Equals(value) != true)) {
                    this.isPublicField = value;
                    this.RaisePropertyChanged("isPublic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputFields", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.AdvanceSearch")]
    [System.SerializableAttribute()]
    public partial class InputFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputId {
            get {
                return this.InputIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InputIdField, value) != true)) {
                    this.InputIdField = value;
                    this.RaisePropertyChanged("InputId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputType {
            get {
                return this.InputTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InputTypeField, value) != true)) {
                    this.InputTypeField = value;
                    this.RaisePropertyChanged("InputType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TurbineProperties", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class TurbineProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountryIsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalTurbineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NominelPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NominelPowerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PowerRegulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RotorDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmallGeneratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemperatureVariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineMatrixIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoltageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountryIsoId {
            get {
                return this.CountryIsoIdField;
            }
            set {
                if ((this.CountryIsoIdField.Equals(value) != true)) {
                    this.CountryIsoIdField = value;
                    this.RaisePropertyChanged("CountryIsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalTurbineId {
            get {
                return this.LocalTurbineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalTurbineIdField, value) != true)) {
                    this.LocalTurbineIdField = value;
                    this.RaisePropertyChanged("LocalTurbineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkVersion {
            get {
                return this.MarkVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkVersionField, value) != true)) {
                    this.MarkVersionField = value;
                    this.RaisePropertyChanged("MarkVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NominelPower {
            get {
                return this.NominelPowerField;
            }
            set {
                if ((this.NominelPowerField.Equals(value) != true)) {
                    this.NominelPowerField = value;
                    this.RaisePropertyChanged("NominelPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NominelPowerId {
            get {
                return this.NominelPowerIdField;
            }
            set {
                if ((this.NominelPowerIdField.Equals(value) != true)) {
                    this.NominelPowerIdField = value;
                    this.RaisePropertyChanged("NominelPowerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Placement {
            get {
                return this.PlacementField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacementField, value) != true)) {
                    this.PlacementField = value;
                    this.RaisePropertyChanged("Placement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PowerRegulation {
            get {
                return this.PowerRegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerRegulationField, value) != true)) {
                    this.PowerRegulationField = value;
                    this.RaisePropertyChanged("PowerRegulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RotorDiameter {
            get {
                return this.RotorDiameterField;
            }
            set {
                if ((this.RotorDiameterField.Equals(value) != true)) {
                    this.RotorDiameterField = value;
                    this.RaisePropertyChanged("RotorDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmallGenerator {
            get {
                return this.SmallGeneratorField;
            }
            set {
                if ((this.SmallGeneratorField.Equals(value) != true)) {
                    this.SmallGeneratorField = value;
                    this.RaisePropertyChanged("SmallGenerator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemperatureVariant {
            get {
                return this.TemperatureVariantField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureVariantField, value) != true)) {
                    this.TemperatureVariantField = value;
                    this.RaisePropertyChanged("TemperatureVariant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Turbine {
            get {
                return this.TurbineField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineField, value) != true)) {
                    this.TurbineField = value;
                    this.RaisePropertyChanged("Turbine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineMatrixId {
            get {
                return this.TurbineMatrixIdField;
            }
            set {
                if ((this.TurbineMatrixIdField.Equals(value) != true)) {
                    this.TurbineMatrixIdField = value;
                    this.RaisePropertyChanged("TurbineMatrixId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Voltage {
            get {
                return this.VoltageField;
            }
            set {
                if ((this.VoltageField.Equals(value) != true)) {
                    this.VoltageField = value;
                    this.RaisePropertyChanged("Voltage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirStateResponse", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class CirStateResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CIRIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CIRStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirDataLocalIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CIRId {
            get {
                return this.CIRIdField;
            }
            set {
                if ((this.CIRIdField.Equals(value) != true)) {
                    this.CIRIdField = value;
                    this.RaisePropertyChanged("CIRId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CIRState {
            get {
                return this.CIRStateField;
            }
            set {
                if ((this.CIRStateField.Equals(value) != true)) {
                    this.CIRStateField = value;
                    this.RaisePropertyChanged("CIRState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirDataLocalID {
            get {
                return this.CirDataLocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CirDataLocalIDField, value) != true)) {
                    this.CirDataLocalIDField = value;
                    this.RaisePropertyChanged("CirDataLocalID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manufacturer", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Manufacturer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cc {
            get {
                return this.CcField;
            }
            set {
                if ((object.ReferenceEquals(this.CcField, value) != true)) {
                    this.CcField = value;
                    this.RaisePropertyChanged("Cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerType {
            get {
                return this.ManufacturerTypeField;
            }
            set {
                if ((this.ManufacturerTypeField.Equals(value) != true)) {
                    this.ManufacturerTypeField = value;
                    this.RaisePropertyChanged("ManufacturerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManufacturerList", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ManufacturerList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer[] ManufacturersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerType {
            get {
                return this.ManufacturerTypeField;
            }
            set {
                if ((this.ManufacturerTypeField.Equals(value) != true)) {
                    this.ManufacturerTypeField = value;
                    this.RaisePropertyChanged("ManufacturerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer[] Manufacturers {
            get {
                return this.ManufacturersField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturersField, value) != true)) {
                    this.ManufacturersField = value;
                    this.RaisePropertyChanged("Manufacturers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hotlist", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Hotlist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HotItemDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HotItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasItemNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cc {
            get {
                return this.CcField;
            }
            set {
                if ((object.ReferenceEquals(this.CcField, value) != true)) {
                    this.CcField = value;
                    this.RaisePropertyChanged("Cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HotItemDisplay {
            get {
                return this.HotItemDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.HotItemDisplayField, value) != true)) {
                    this.HotItemDisplayField = value;
                    this.RaisePropertyChanged("HotItemDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HotItemId {
            get {
                return this.HotItemIdField;
            }
            set {
                if ((this.HotItemIdField.Equals(value) != true)) {
                    this.HotItemIdField = value;
                    this.RaisePropertyChanged("HotItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerName {
            get {
                return this.ManufacturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerNameField, value) != true)) {
                    this.ManufacturerNameField = value;
                    this.RaisePropertyChanged("ManufacturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ReportTypeId {
            get {
                return this.ReportTypeIdField;
            }
            set {
                if ((this.ReportTypeIdField.Equals(value) != true)) {
                    this.ReportTypeIdField = value;
                    this.RaisePropertyChanged("ReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasItemName {
            get {
                return this.VestasItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasItemNameField, value) != true)) {
                    this.VestasItemNameField = value;
                    this.RaisePropertyChanged("VestasItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasItemNumber {
            get {
                return this.VestasItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasItemNumberField, value) != true)) {
                    this.VestasItemNumberField = value;
                    this.RaisePropertyChanged("VestasItemNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirDefectCategorization", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirDefectCategorization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long cirdataidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ciridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int componenttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filedataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string initialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long cirdataid {
            get {
                return this.cirdataidField;
            }
            set {
                if ((this.cirdataidField.Equals(value) != true)) {
                    this.cirdataidField = value;
                    this.RaisePropertyChanged("cirdataid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long cirid {
            get {
                return this.ciridField;
            }
            set {
                if ((this.ciridField.Equals(value) != true)) {
                    this.ciridField = value;
                    this.RaisePropertyChanged("cirid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int componenttype {
            get {
                return this.componenttypeField;
            }
            set {
                if ((this.componenttypeField.Equals(value) != true)) {
                    this.componenttypeField = value;
                    this.RaisePropertyChanged("componenttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filedata {
            get {
                return this.filedataField;
            }
            set {
                if ((object.ReferenceEquals(this.filedataField, value) != true)) {
                    this.filedataField = value;
                    this.RaisePropertyChanged("filedata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                if ((object.ReferenceEquals(this.filenameField, value) != true)) {
                    this.filenameField = value;
                    this.RaisePropertyChanged("filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string initials {
            get {
                return this.initialsField;
            }
            set {
                if ((object.ReferenceEquals(this.initialsField, value) != true)) {
                    this.initialsField = value;
                    this.RaisePropertyChanged("initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string path {
            get {
                return this.pathField;
            }
            set {
                if ((object.ReferenceEquals(this.pathField, value) != true)) {
                    this.pathField = value;
                    this.RaisePropertyChanged("path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirAttachments", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirAttachments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirAttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirAttachmentId {
            get {
                return this.CirAttachmentIdField;
            }
            set {
                if ((this.CirAttachmentIdField.Equals(value) != true)) {
                    this.CirAttachmentIdField = value;
                    this.RaisePropertyChanged("CirAttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedField, value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringData {
            get {
                return this.StringDataField;
            }
            set {
                if ((object.ReferenceEquals(this.StringDataField, value) != true)) {
                    this.StringDataField = value;
                    this.RaisePropertyChanged("StringData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MigrationStepLogging", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MigrationStepLogging : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirType {
            get {
                return this.CirTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CirTypeField, value) != true)) {
                    this.CirTypeField = value;
                    this.RaisePropertyChanged("CirType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogId {
            get {
                return this.LogIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LogIdField, value) != true)) {
                    this.LogIdField = value;
                    this.RaisePropertyChanged("LogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((this.LogTypeField.Equals(value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bir", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Bir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BirDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeSerialNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport ComponentInspectionReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] ComponentInspectionReportDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsAndRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.BirFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawMaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepairingSolutionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes SearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TurbineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirCode {
            get {
                return this.BirCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BirCodeField, value) != true)) {
                    this.BirCodeField = value;
                    this.RaisePropertyChanged("BirCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BirDataID {
            get {
                return this.BirDataIDField;
            }
            set {
                if ((this.BirDataIDField.Equals(value) != true)) {
                    this.BirDataIDField = value;
                    this.RaisePropertyChanged("BirDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeSerialNos {
            get {
                return this.BladeSerialNosField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeSerialNosField, value) != true)) {
                    this.BladeSerialNosField = value;
                    this.RaisePropertyChanged("BladeSerialNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirIDs {
            get {
                return this.CirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIDsField, value) != true)) {
                    this.CirIDsField = value;
                    this.RaisePropertyChanged("CirIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport ComponentInspectionReport {
            get {
                return this.ComponentInspectionReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportField, value) != true)) {
                    this.ComponentInspectionReportField = value;
                    this.RaisePropertyChanged("ComponentInspectionReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] ComponentInspectionReportDetails {
            get {
                return this.ComponentInspectionReportDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportDetailsField, value) != true)) {
                    this.ComponentInspectionReportDetailsField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionsAndRecommendations {
            get {
                return this.ConclusionsAndRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsAndRecommendationsField, value) != true)) {
                    this.ConclusionsAndRecommendationsField = value;
                    this.RaisePropertyChanged("ConclusionsAndRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.BirFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawMaterials {
            get {
                return this.RawMaterialsField;
            }
            set {
                if ((object.ReferenceEquals(this.RawMaterialsField, value) != true)) {
                    this.RawMaterialsField = value;
                    this.RaisePropertyChanged("RawMaterials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepairingSolutions {
            get {
                return this.RepairingSolutionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RepairingSolutionsField, value) != true)) {
                    this.RepairingSolutionsField = value;
                    this.RaisePropertyChanged("RepairingSolutions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes Search {
            get {
                return this.SearchField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchField, value) != true)) {
                    this.SearchField = value;
                    this.RaisePropertyChanged("Search");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TurbineID {
            get {
                return this.TurbineIDField;
            }
            set {
                if ((this.TurbineIDField.Equals(value) != true)) {
                    this.TurbineIDField = value;
                    this.RaisePropertyChanged("TurbineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCreated {
            get {
                return this.strCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.strCreatedField, value) != true)) {
                    this.strCreatedField = value;
                    this.RaisePropertyChanged("strCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReport", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AfterInspectionTurbineRunStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmLogNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BeforeInspectionTurbineRunStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportBlade BladeDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CIMCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CIRIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIRTemplateGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CommisioningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentInspectionReportNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentInspectionReportVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ComponentUpTowerSolutionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConductedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountryISOIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionConsquentialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.DyanamicDecision[] DyanamicDecisionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.DynamicTable DynamicTableInputsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FailureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlangDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIOGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportGearbox GearboxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CommonInspectionGeneral GeneralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportGenerator GeneratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Generator1HrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> Generator2HrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HideLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HideProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HideTemplateVerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtmlStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ImageData[] ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ImageDataInfo ImageDataInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InspectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalTurbineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportMainBearing MainBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MountedOnMainComponentBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutSideSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonForServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReconstructionBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RunHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SBUIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBUNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBURecomendationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SecondGeneratorBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceEngineerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceReportNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceReportNumberTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportSkiiP SkiipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalAcceptedRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalProductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRejectedRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalUnApprovedRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportTransformer TransformerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.TurbineProperties TurbineDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineMatrixIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSimplifiedCirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCommisioningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strFailureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strInspectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strInstallationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalComments {
            get {
                return this.AdditionalCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalCommentsField, value) != true)) {
                    this.AdditionalCommentsField = value;
                    this.RaisePropertyChanged("AdditionalComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AfterInspectionTurbineRunStatusId {
            get {
                return this.AfterInspectionTurbineRunStatusIdField;
            }
            set {
                if ((this.AfterInspectionTurbineRunStatusIdField.Equals(value) != true)) {
                    this.AfterInspectionTurbineRunStatusIdField = value;
                    this.RaisePropertyChanged("AfterInspectionTurbineRunStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmLogNumber {
            get {
                return this.AlarmLogNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmLogNumberField, value) != true)) {
                    this.AlarmLogNumberField = value;
                    this.RaisePropertyChanged("AlarmLogNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BeforeInspectionTurbineRunStatusId {
            get {
                return this.BeforeInspectionTurbineRunStatusIdField;
            }
            set {
                if ((this.BeforeInspectionTurbineRunStatusIdField.Equals(value) != true)) {
                    this.BeforeInspectionTurbineRunStatusIdField = value;
                    this.RaisePropertyChanged("BeforeInspectionTurbineRunStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportBlade BladeData {
            get {
                return this.BladeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeDataField, value) != true)) {
                    this.BladeDataField = value;
                    this.RaisePropertyChanged("BladeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CIMCaseNumber {
            get {
                return this.CIMCaseNumberField;
            }
            set {
                if ((this.CIMCaseNumberField.Equals(value) != true)) {
                    this.CIMCaseNumberField = value;
                    this.RaisePropertyChanged("CIMCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CIRID {
            get {
                return this.CIRIDField;
            }
            set {
                if ((this.CIRIDField.Equals(value) != true)) {
                    this.CIRIDField = value;
                    this.RaisePropertyChanged("CIRID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIRTemplateGUID {
            get {
                return this.CIRTemplateGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CIRTemplateGUIDField, value) != true)) {
                    this.CIRTemplateGUIDField = value;
                    this.RaisePropertyChanged("CIRTemplateGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataID {
            get {
                return this.CirDataIDField;
            }
            set {
                if ((this.CirDataIDField.Equals(value) != true)) {
                    this.CirDataIDField = value;
                    this.RaisePropertyChanged("CirDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirName {
            get {
                return this.CirNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CirNameField, value) != true)) {
                    this.CirNameField = value;
                    this.RaisePropertyChanged("CirName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CommisioningDate {
            get {
                return this.CommisioningDateField;
            }
            set {
                if ((this.CommisioningDateField.Equals(value) != true)) {
                    this.CommisioningDateField = value;
                    this.RaisePropertyChanged("CommisioningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentInspectionReportName {
            get {
                return this.ComponentInspectionReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportNameField, value) != true)) {
                    this.ComponentInspectionReportNameField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportStateId {
            get {
                return this.ComponentInspectionReportStateIdField;
            }
            set {
                if ((this.ComponentInspectionReportStateIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportStateIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportTypeId {
            get {
                return this.ComponentInspectionReportTypeIdField;
            }
            set {
                if ((this.ComponentInspectionReportTypeIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportTypeIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentInspectionReportVersion {
            get {
                return this.ComponentInspectionReportVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportVersionField, value) != true)) {
                    this.ComponentInspectionReportVersionField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ComponentUpTowerSolutionID {
            get {
                return this.ComponentUpTowerSolutionIDField;
            }
            set {
                if ((this.ComponentUpTowerSolutionIDField.Equals(value) != true)) {
                    this.ComponentUpTowerSolutionIDField = value;
                    this.RaisePropertyChanged("ComponentUpTowerSolutionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConductedBy {
            get {
                return this.ConductedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ConductedByField, value) != true)) {
                    this.ConductedByField = value;
                    this.RaisePropertyChanged("ConductedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountryISOId {
            get {
                return this.CountryISOIdField;
            }
            set {
                if ((this.CountryISOIdField.Equals(value) != true)) {
                    this.CountryISOIdField = value;
                    this.RaisePropertyChanged("CountryISOId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentUser {
            get {
                return this.CurrentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUserField, value) != true)) {
                    this.CurrentUserField = value;
                    this.RaisePropertyChanged("CurrentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedByField, value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionConsquential {
            get {
                return this.DescriptionConsquentialField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionConsquentialField, value) != true)) {
                    this.DescriptionConsquentialField = value;
                    this.RaisePropertyChanged("DescriptionConsquential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.DyanamicDecision[] DyanamicDecisionData {
            get {
                return this.DyanamicDecisionDataField;
            }
            set {
                if ((object.ReferenceEquals(this.DyanamicDecisionDataField, value) != true)) {
                    this.DyanamicDecisionDataField = value;
                    this.RaisePropertyChanged("DyanamicDecisionData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.DynamicTable DynamicTableInputs {
            get {
                return this.DynamicTableInputsField;
            }
            set {
                if ((object.ReferenceEquals(this.DynamicTableInputsField, value) != true)) {
                    this.DynamicTableInputsField = value;
                    this.RaisePropertyChanged("DynamicTableInputs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FailureDate {
            get {
                return this.FailureDateField;
            }
            set {
                if ((this.FailureDateField.Equals(value) != true)) {
                    this.FailureDateField = value;
                    this.RaisePropertyChanged("FailureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlangDesc {
            get {
                return this.FlangDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FlangDescField, value) != true)) {
                    this.FlangDescField = value;
                    this.RaisePropertyChanged("FlangDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormIOGUID {
            get {
                return this.FormIOGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIOGUIDField, value) != true)) {
                    this.FormIOGUIDField = value;
                    this.RaisePropertyChanged("FormIOGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportGearbox Gearbox {
            get {
                return this.GearboxField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxField, value) != true)) {
                    this.GearboxField = value;
                    this.RaisePropertyChanged("Gearbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CommonInspectionGeneral General {
            get {
                return this.GeneralField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralField, value) != true)) {
                    this.GeneralField = value;
                    this.RaisePropertyChanged("General");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportGenerator Generator {
            get {
                return this.GeneratorField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneratorField, value) != true)) {
                    this.GeneratorField = value;
                    this.RaisePropertyChanged("Generator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Generator1Hrs {
            get {
                return this.Generator1HrsField;
            }
            set {
                if ((this.Generator1HrsField.Equals(value) != true)) {
                    this.Generator1HrsField = value;
                    this.RaisePropertyChanged("Generator1Hrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Generator2Hrs {
            get {
                return this.Generator2HrsField;
            }
            set {
                if ((this.Generator2HrsField.Equals(value) != true)) {
                    this.Generator2HrsField = value;
                    this.RaisePropertyChanged("Generator2Hrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HideLock {
            get {
                return this.HideLockField;
            }
            set {
                if ((object.ReferenceEquals(this.HideLockField, value) != true)) {
                    this.HideLockField = value;
                    this.RaisePropertyChanged("HideLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HideProgress {
            get {
                return this.HideProgressField;
            }
            set {
                if ((this.HideProgressField.Equals(value) != true)) {
                    this.HideProgressField = value;
                    this.RaisePropertyChanged("HideProgress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HideTemplateVer {
            get {
                return this.HideTemplateVerField;
            }
            set {
                if ((object.ReferenceEquals(this.HideTemplateVerField, value) != true)) {
                    this.HideTemplateVerField = value;
                    this.RaisePropertyChanged("HideTemplateVer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtmlStr {
            get {
                return this.HtmlStrField;
            }
            set {
                if ((object.ReferenceEquals(this.HtmlStrField, value) != true)) {
                    this.HtmlStrField = value;
                    this.RaisePropertyChanged("HtmlStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ImageData[] ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ImageDataInfo ImageDataInfo {
            get {
                return this.ImageDataInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataInfoField, value) != true)) {
                    this.ImageDataInfoField = value;
                    this.RaisePropertyChanged("ImageDataInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InspectionDate {
            get {
                return this.InspectionDateField;
            }
            set {
                if ((this.InspectionDateField.Equals(value) != true)) {
                    this.InspectionDateField = value;
                    this.RaisePropertyChanged("InspectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallationDate {
            get {
                return this.InstallationDateField;
            }
            set {
                if ((this.InstallationDateField.Equals(value) != true)) {
                    this.InstallationDateField = value;
                    this.RaisePropertyChanged("InstallationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalComments {
            get {
                return this.InternalCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalCommentsField, value) != true)) {
                    this.InternalCommentsField = value;
                    this.RaisePropertyChanged("InternalComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalTurbineId {
            get {
                return this.LocalTurbineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalTurbineIdField, value) != true)) {
                    this.LocalTurbineIdField = value;
                    this.RaisePropertyChanged("LocalTurbineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationTypeId {
            get {
                return this.LocationTypeIdField;
            }
            set {
                if ((this.LocationTypeIdField.Equals(value) != true)) {
                    this.LocationTypeIdField = value;
                    this.RaisePropertyChanged("LocationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportMainBearing MainBearing {
            get {
                return this.MainBearingField;
            }
            set {
                if ((object.ReferenceEquals(this.MainBearingField, value) != true)) {
                    this.MainBearingField = value;
                    this.RaisePropertyChanged("MainBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MountedOnMainComponentBooleanAnswerId {
            get {
                return this.MountedOnMainComponentBooleanAnswerIdField;
            }
            set {
                if ((this.MountedOnMainComponentBooleanAnswerIdField.Equals(value) != true)) {
                    this.MountedOnMainComponentBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("MountedOnMainComponentBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationNumber {
            get {
                return this.NotificationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationNumberField, value) != true)) {
                    this.NotificationNumberField = value;
                    this.RaisePropertyChanged("NotificationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutSideSign {
            get {
                return this.OutSideSignField;
            }
            set {
                if ((this.OutSideSignField.Equals(value) != true)) {
                    this.OutSideSignField = value;
                    this.RaisePropertyChanged("OutSideSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonForService {
            get {
                return this.ReasonForServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonForServiceField, value) != true)) {
                    this.ReasonForServiceField = value;
                    this.RaisePropertyChanged("ReasonForService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReconstructionBooleanAnswerId {
            get {
                return this.ReconstructionBooleanAnswerIdField;
            }
            set {
                if ((this.ReconstructionBooleanAnswerIdField.Equals(value) != true)) {
                    this.ReconstructionBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("ReconstructionBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReportTypeId {
            get {
                return this.ReportTypeIdField;
            }
            set {
                if ((this.ReportTypeIdField.Equals(value) != true)) {
                    this.ReportTypeIdField = value;
                    this.RaisePropertyChanged("ReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RunHours {
            get {
                return this.RunHoursField;
            }
            set {
                if ((this.RunHoursField.Equals(value) != true)) {
                    this.RunHoursField = value;
                    this.RaisePropertyChanged("RunHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SBUId {
            get {
                return this.SBUIdField;
            }
            set {
                if ((this.SBUIdField.Equals(value) != true)) {
                    this.SBUIdField = value;
                    this.RaisePropertyChanged("SBUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBUName {
            get {
                return this.SBUNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SBUNameField, value) != true)) {
                    this.SBUNameField = value;
                    this.RaisePropertyChanged("SBUName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBURecomendation {
            get {
                return this.SBURecomendationField;
            }
            set {
                if ((object.ReferenceEquals(this.SBURecomendationField, value) != true)) {
                    this.SBURecomendationField = value;
                    this.RaisePropertyChanged("SBURecomendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SecondGeneratorBooleanAnswerId {
            get {
                return this.SecondGeneratorBooleanAnswerIdField;
            }
            set {
                if ((this.SecondGeneratorBooleanAnswerIdField.Equals(value) != true)) {
                    this.SecondGeneratorBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SecondGeneratorBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceEngineer {
            get {
                return this.ServiceEngineerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceEngineerField, value) != true)) {
                    this.ServiceEngineerField = value;
                    this.RaisePropertyChanged("ServiceEngineer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceReportNumber {
            get {
                return this.ServiceReportNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReportNumberField, value) != true)) {
                    this.ServiceReportNumberField = value;
                    this.RaisePropertyChanged("ServiceReportNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceReportNumberTypeId {
            get {
                return this.ServiceReportNumberTypeIdField;
            }
            set {
                if ((this.ServiceReportNumberTypeIdField.Equals(value) != true)) {
                    this.ServiceReportNumberTypeIdField = value;
                    this.RaisePropertyChanged("ServiceReportNumberTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportSkiiP Skiip {
            get {
                return this.SkiipField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiipField, value) != true)) {
                    this.SkiipField = value;
                    this.RaisePropertyChanged("Skiip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateVersion {
            get {
                return this.TemplateVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateVersionField, value) != true)) {
                    this.TemplateVersionField = value;
                    this.RaisePropertyChanged("TemplateVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAcceptedRecords {
            get {
                return this.TotalAcceptedRecordsField;
            }
            set {
                if ((this.TotalAcceptedRecordsField.Equals(value) != true)) {
                    this.TotalAcceptedRecordsField = value;
                    this.RaisePropertyChanged("TotalAcceptedRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalProduction {
            get {
                return this.TotalProductionField;
            }
            set {
                if ((this.TotalProductionField.Equals(value) != true)) {
                    this.TotalProductionField = value;
                    this.RaisePropertyChanged("TotalProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRejectedRecords {
            get {
                return this.TotalRejectedRecordsField;
            }
            set {
                if ((this.TotalRejectedRecordsField.Equals(value) != true)) {
                    this.TotalRejectedRecordsField = value;
                    this.RaisePropertyChanged("TotalRejectedRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalUnApprovedRecords {
            get {
                return this.TotalUnApprovedRecordsField;
            }
            set {
                if ((this.TotalUnApprovedRecordsField.Equals(value) != true)) {
                    this.TotalUnApprovedRecordsField = value;
                    this.RaisePropertyChanged("TotalUnApprovedRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportTransformer Transformer {
            get {
                return this.TransformerField;
            }
            set {
                if ((object.ReferenceEquals(this.TransformerField, value) != true)) {
                    this.TransformerField = value;
                    this.RaisePropertyChanged("Transformer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.TurbineProperties TurbineData {
            get {
                return this.TurbineDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineDataField, value) != true)) {
                    this.TurbineDataField = value;
                    this.RaisePropertyChanged("TurbineData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineMatrixId {
            get {
                return this.TurbineMatrixIdField;
            }
            set {
                if ((this.TurbineMatrixIdField.Equals(value) != true)) {
                    this.TurbineMatrixIdField = value;
                    this.RaisePropertyChanged("TurbineMatrixId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((this.TurbineNumberField.Equals(value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineType {
            get {
                return this.TurbineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineTypeField, value) != true)) {
                    this.TurbineTypeField = value;
                    this.RaisePropertyChanged("TurbineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasItemNumber {
            get {
                return this.VestasItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasItemNumberField, value) != true)) {
                    this.VestasItemNumberField = value;
                    this.RaisePropertyChanged("VestasItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSimplifiedCir {
            get {
                return this.isSimplifiedCirField;
            }
            set {
                if ((this.isSimplifiedCirField.Equals(value) != true)) {
                    this.isSimplifiedCirField = value;
                    this.RaisePropertyChanged("isSimplifiedCir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCommisioningDate {
            get {
                return this.strCommisioningDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strCommisioningDateField, value) != true)) {
                    this.strCommisioningDateField = value;
                    this.RaisePropertyChanged("strCommisioningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strFailureDate {
            get {
                return this.strFailureDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strFailureDateField, value) != true)) {
                    this.strFailureDateField = value;
                    this.RaisePropertyChanged("strFailureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strInspectionDate {
            get {
                return this.strInspectionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strInspectionDateField, value) != true)) {
                    this.strInspectionDateField = value;
                    this.RaisePropertyChanged("strInspectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strInstallationDate {
            get {
                return this.strInstallationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strInstallationDateField, value) != true)) {
                    this.strInstallationDateField = value;
                    this.RaisePropertyChanged("strInstallationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BirFile", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class BirFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUrl {
            get {
                return this.DownloadUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUrlField, value) != true)) {
                    this.DownloadUrlField = value;
                    this.RaisePropertyChanged("DownloadUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileStatus {
            get {
                return this.FileStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FileStatusField, value) != true)) {
                    this.FileStatusField = value;
                    this.RaisePropertyChanged("FileStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchAttributes", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SearchAttributes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordsPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortColumnIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPageNumber {
            get {
                return this.CurrentPageNumberField;
            }
            set {
                if ((this.CurrentPageNumberField.Equals(value) != true)) {
                    this.CurrentPageNumberField = value;
                    this.RaisePropertyChanged("CurrentPageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordsPerPage {
            get {
                return this.RecordsPerPageField;
            }
            set {
                if ((this.RecordsPerPageField.Equals(value) != true)) {
                    this.RecordsPerPageField = value;
                    this.RaisePropertyChanged("RecordsPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortColumnIndex {
            get {
                return this.SortColumnIndexField;
            }
            set {
                if ((this.SortColumnIndexField.Equals(value) != true)) {
                    this.SortColumnIndexField = value;
                    this.RaisePropertyChanged("SortColumnIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordCount {
            get {
                return this.TotalRecordCountField;
            }
            set {
                if ((this.TotalRecordCountField.Equals(value) != true)) {
                    this.TotalRecordCountField = value;
                    this.RaisePropertyChanged("TotalRecordCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportBlade", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportBlade : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeColorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BladeDamageIdentifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeFaultCodeAreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeFaultCodeCauseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeFaultCodeClassificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeFaultCodeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeInspectionReportDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeLengthIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BladeLsCalibrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepair8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePostRepairTipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepair8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsLeewardSidePreRepairTipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeLsVtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepair8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePostRepairTipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepair8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeLsWindwardSidePreRepairTipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BladeManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeOtherSerialNumber1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeOtherSerialNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladePicturesIncludedBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportBladeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportBladeDamage[] DamageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportBladeRepairRecord RepairRecordDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasUniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strBladeLsCalibrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeClaimRelevantBooleanAnswerId {
            get {
                return this.BladeClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.BladeClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.BladeClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("BladeClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeColorId {
            get {
                return this.BladeColorIdField;
            }
            set {
                if ((this.BladeColorIdField.Equals(value) != true)) {
                    this.BladeColorIdField = value;
                    this.RaisePropertyChanged("BladeColorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BladeDamageIdentified {
            get {
                return this.BladeDamageIdentifiedField;
            }
            set {
                if ((this.BladeDamageIdentifiedField.Equals(value) != true)) {
                    this.BladeDamageIdentifiedField = value;
                    this.RaisePropertyChanged("BladeDamageIdentified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeFaultCodeAreaId {
            get {
                return this.BladeFaultCodeAreaIdField;
            }
            set {
                if ((this.BladeFaultCodeAreaIdField.Equals(value) != true)) {
                    this.BladeFaultCodeAreaIdField = value;
                    this.RaisePropertyChanged("BladeFaultCodeAreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeFaultCodeCauseId {
            get {
                return this.BladeFaultCodeCauseIdField;
            }
            set {
                if ((this.BladeFaultCodeCauseIdField.Equals(value) != true)) {
                    this.BladeFaultCodeCauseIdField = value;
                    this.RaisePropertyChanged("BladeFaultCodeCauseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeFaultCodeClassificationId {
            get {
                return this.BladeFaultCodeClassificationIdField;
            }
            set {
                if ((this.BladeFaultCodeClassificationIdField.Equals(value) != true)) {
                    this.BladeFaultCodeClassificationIdField = value;
                    this.RaisePropertyChanged("BladeFaultCodeClassificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeFaultCodeTypeId {
            get {
                return this.BladeFaultCodeTypeIdField;
            }
            set {
                if ((this.BladeFaultCodeTypeIdField.Equals(value) != true)) {
                    this.BladeFaultCodeTypeIdField = value;
                    this.RaisePropertyChanged("BladeFaultCodeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeInspectionReportDescription {
            get {
                return this.BladeInspectionReportDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeInspectionReportDescriptionField, value) != true)) {
                    this.BladeInspectionReportDescriptionField = value;
                    this.RaisePropertyChanged("BladeInspectionReportDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeLengthId {
            get {
                return this.BladeLengthIdField;
            }
            set {
                if ((this.BladeLengthIdField.Equals(value) != true)) {
                    this.BladeLengthIdField = value;
                    this.RaisePropertyChanged("BladeLengthId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BladeLsCalibrationDate {
            get {
                return this.BladeLsCalibrationDateField;
            }
            set {
                if ((this.BladeLsCalibrationDateField.Equals(value) != true)) {
                    this.BladeLsCalibrationDateField = value;
                    this.RaisePropertyChanged("BladeLsCalibrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair2 {
            get {
                return this.BladeLsLeewardSidePostRepair2Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair2Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair2Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair3 {
            get {
                return this.BladeLsLeewardSidePostRepair3Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair3Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair3Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair4 {
            get {
                return this.BladeLsLeewardSidePostRepair4Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair4Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair4Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair5 {
            get {
                return this.BladeLsLeewardSidePostRepair5Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair5Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair5Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair6 {
            get {
                return this.BladeLsLeewardSidePostRepair6Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair6Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair6Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair7 {
            get {
                return this.BladeLsLeewardSidePostRepair7Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair7Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair7Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepair8 {
            get {
                return this.BladeLsLeewardSidePostRepair8Field;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepair8Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepair8Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepair8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePostRepairTip {
            get {
                return this.BladeLsLeewardSidePostRepairTipField;
            }
            set {
                if ((this.BladeLsLeewardSidePostRepairTipField.Equals(value) != true)) {
                    this.BladeLsLeewardSidePostRepairTipField = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePostRepairTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair2 {
            get {
                return this.BladeLsLeewardSidePreRepair2Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair2Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair2Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair3 {
            get {
                return this.BladeLsLeewardSidePreRepair3Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair3Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair3Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair4 {
            get {
                return this.BladeLsLeewardSidePreRepair4Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair4Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair4Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair5 {
            get {
                return this.BladeLsLeewardSidePreRepair5Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair5Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair5Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair6 {
            get {
                return this.BladeLsLeewardSidePreRepair6Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair6Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair6Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair7 {
            get {
                return this.BladeLsLeewardSidePreRepair7Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair7Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair7Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepair8 {
            get {
                return this.BladeLsLeewardSidePreRepair8Field;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepair8Field.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepair8Field = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepair8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsLeewardSidePreRepairTip {
            get {
                return this.BladeLsLeewardSidePreRepairTipField;
            }
            set {
                if ((this.BladeLsLeewardSidePreRepairTipField.Equals(value) != true)) {
                    this.BladeLsLeewardSidePreRepairTipField = value;
                    this.RaisePropertyChanged("BladeLsLeewardSidePreRepairTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeLsVtNumber {
            get {
                return this.BladeLsVtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeLsVtNumberField, value) != true)) {
                    this.BladeLsVtNumberField = value;
                    this.RaisePropertyChanged("BladeLsVtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair2 {
            get {
                return this.BladeLsWindwardSidePostRepair2Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair2Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair2Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair3 {
            get {
                return this.BladeLsWindwardSidePostRepair3Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair3Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair3Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair4 {
            get {
                return this.BladeLsWindwardSidePostRepair4Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair4Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair4Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair5 {
            get {
                return this.BladeLsWindwardSidePostRepair5Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair5Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair5Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair6 {
            get {
                return this.BladeLsWindwardSidePostRepair6Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair6Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair6Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair7 {
            get {
                return this.BladeLsWindwardSidePostRepair7Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair7Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair7Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepair8 {
            get {
                return this.BladeLsWindwardSidePostRepair8Field;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepair8Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepair8Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepair8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePostRepairTip {
            get {
                return this.BladeLsWindwardSidePostRepairTipField;
            }
            set {
                if ((this.BladeLsWindwardSidePostRepairTipField.Equals(value) != true)) {
                    this.BladeLsWindwardSidePostRepairTipField = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePostRepairTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair2 {
            get {
                return this.BladeLsWindwardSidePreRepair2Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair2Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair2Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair3 {
            get {
                return this.BladeLsWindwardSidePreRepair3Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair3Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair3Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair4 {
            get {
                return this.BladeLsWindwardSidePreRepair4Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair4Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair4Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair5 {
            get {
                return this.BladeLsWindwardSidePreRepair5Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair5Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair5Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair6 {
            get {
                return this.BladeLsWindwardSidePreRepair6Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair6Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair6Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair7 {
            get {
                return this.BladeLsWindwardSidePreRepair7Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair7Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair7Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepair8 {
            get {
                return this.BladeLsWindwardSidePreRepair8Field;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepair8Field.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepair8Field = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepair8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeLsWindwardSidePreRepairTip {
            get {
                return this.BladeLsWindwardSidePreRepairTipField;
            }
            set {
                if ((this.BladeLsWindwardSidePreRepairTipField.Equals(value) != true)) {
                    this.BladeLsWindwardSidePreRepairTipField = value;
                    this.RaisePropertyChanged("BladeLsWindwardSidePreRepairTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BladeManufacturerId {
            get {
                return this.BladeManufacturerIdField;
            }
            set {
                if ((this.BladeManufacturerIdField.Equals(value) != true)) {
                    this.BladeManufacturerIdField = value;
                    this.RaisePropertyChanged("BladeManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeOtherSerialNumber1 {
            get {
                return this.BladeOtherSerialNumber1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BladeOtherSerialNumber1Field, value) != true)) {
                    this.BladeOtherSerialNumber1Field = value;
                    this.RaisePropertyChanged("BladeOtherSerialNumber1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeOtherSerialNumber2 {
            get {
                return this.BladeOtherSerialNumber2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BladeOtherSerialNumber2Field, value) != true)) {
                    this.BladeOtherSerialNumber2Field = value;
                    this.RaisePropertyChanged("BladeOtherSerialNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladePicturesIncludedBooleanAnswerId {
            get {
                return this.BladePicturesIncludedBooleanAnswerIdField;
            }
            set {
                if ((this.BladePicturesIncludedBooleanAnswerIdField.Equals(value) != true)) {
                    this.BladePicturesIncludedBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("BladePicturesIncludedBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeSerialNumber {
            get {
                return this.BladeSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeSerialNumberField, value) != true)) {
                    this.BladeSerialNumberField = value;
                    this.RaisePropertyChanged("BladeSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportBladeId {
            get {
                return this.ComponentInspectionReportBladeIdField;
            }
            set {
                if ((this.ComponentInspectionReportBladeIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportBladeIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportBladeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportBladeDamage[] DamageData {
            get {
                return this.DamageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.DamageDataField, value) != true)) {
                    this.DamageDataField = value;
                    this.RaisePropertyChanged("DamageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportBladeRepairRecord RepairRecordData {
            get {
                return this.RepairRecordDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RepairRecordDataField, value) != true)) {
                    this.RepairRecordDataField = value;
                    this.RaisePropertyChanged("RepairRecordData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasUniqueIdentifier {
            get {
                return this.VestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasUniqueIdentifierField, value) != true)) {
                    this.VestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("VestasUniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strBladeLsCalibrationDate {
            get {
                return this.strBladeLsCalibrationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strBladeLsCalibrationDateField, value) != true)) {
                    this.strBladeLsCalibrationDateField = value;
                    this.RaisePropertyChanged("strBladeLsCalibrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicTable", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class DynamicTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row10Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row10Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row10Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row10Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row10Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row10Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row11Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row11Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row11Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row11Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row11Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row11Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row12Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row12Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row12Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row12Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row12Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row12Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row13Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row13Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row13Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row13Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row13Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row13Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row14Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row14Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row14Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row14Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row14Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row14Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row1Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row1Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row1Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row1Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row1Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row1Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row2Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row2Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row2Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row2Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row2Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row2Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row3Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row3Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row3Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row3Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row3Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row3Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row4Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row4Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row4Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row4Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row4Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row4Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row5Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row5Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row5Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row5Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row5Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row5Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row6Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row6Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row6Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row6Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row6Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row6Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row7Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row7Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row7Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row7Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row7Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row7Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row8Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row8Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row8Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row8Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row8Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row8Col6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row9Col1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row9Col2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row9Col3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row9Col4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row9Col5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Row9Col6Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIdField, value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row10Col1 {
            get {
                return this.Row10Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row10Col1Field, value) != true)) {
                    this.Row10Col1Field = value;
                    this.RaisePropertyChanged("Row10Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row10Col2 {
            get {
                return this.Row10Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row10Col2Field, value) != true)) {
                    this.Row10Col2Field = value;
                    this.RaisePropertyChanged("Row10Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row10Col3 {
            get {
                return this.Row10Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row10Col3Field, value) != true)) {
                    this.Row10Col3Field = value;
                    this.RaisePropertyChanged("Row10Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row10Col4 {
            get {
                return this.Row10Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row10Col4Field, value) != true)) {
                    this.Row10Col4Field = value;
                    this.RaisePropertyChanged("Row10Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row10Col5 {
            get {
                return this.Row10Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row10Col5Field, value) != true)) {
                    this.Row10Col5Field = value;
                    this.RaisePropertyChanged("Row10Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row10Col6 {
            get {
                return this.Row10Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row10Col6Field, value) != true)) {
                    this.Row10Col6Field = value;
                    this.RaisePropertyChanged("Row10Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row11Col1 {
            get {
                return this.Row11Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row11Col1Field, value) != true)) {
                    this.Row11Col1Field = value;
                    this.RaisePropertyChanged("Row11Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row11Col2 {
            get {
                return this.Row11Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row11Col2Field, value) != true)) {
                    this.Row11Col2Field = value;
                    this.RaisePropertyChanged("Row11Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row11Col3 {
            get {
                return this.Row11Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row11Col3Field, value) != true)) {
                    this.Row11Col3Field = value;
                    this.RaisePropertyChanged("Row11Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row11Col4 {
            get {
                return this.Row11Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row11Col4Field, value) != true)) {
                    this.Row11Col4Field = value;
                    this.RaisePropertyChanged("Row11Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row11Col5 {
            get {
                return this.Row11Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row11Col5Field, value) != true)) {
                    this.Row11Col5Field = value;
                    this.RaisePropertyChanged("Row11Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row11Col6 {
            get {
                return this.Row11Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row11Col6Field, value) != true)) {
                    this.Row11Col6Field = value;
                    this.RaisePropertyChanged("Row11Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row12Col1 {
            get {
                return this.Row12Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row12Col1Field, value) != true)) {
                    this.Row12Col1Field = value;
                    this.RaisePropertyChanged("Row12Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row12Col2 {
            get {
                return this.Row12Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row12Col2Field, value) != true)) {
                    this.Row12Col2Field = value;
                    this.RaisePropertyChanged("Row12Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row12Col3 {
            get {
                return this.Row12Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row12Col3Field, value) != true)) {
                    this.Row12Col3Field = value;
                    this.RaisePropertyChanged("Row12Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row12Col4 {
            get {
                return this.Row12Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row12Col4Field, value) != true)) {
                    this.Row12Col4Field = value;
                    this.RaisePropertyChanged("Row12Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row12Col5 {
            get {
                return this.Row12Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row12Col5Field, value) != true)) {
                    this.Row12Col5Field = value;
                    this.RaisePropertyChanged("Row12Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row12Col6 {
            get {
                return this.Row12Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row12Col6Field, value) != true)) {
                    this.Row12Col6Field = value;
                    this.RaisePropertyChanged("Row12Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row13Col1 {
            get {
                return this.Row13Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row13Col1Field, value) != true)) {
                    this.Row13Col1Field = value;
                    this.RaisePropertyChanged("Row13Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row13Col2 {
            get {
                return this.Row13Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row13Col2Field, value) != true)) {
                    this.Row13Col2Field = value;
                    this.RaisePropertyChanged("Row13Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row13Col3 {
            get {
                return this.Row13Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row13Col3Field, value) != true)) {
                    this.Row13Col3Field = value;
                    this.RaisePropertyChanged("Row13Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row13Col4 {
            get {
                return this.Row13Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row13Col4Field, value) != true)) {
                    this.Row13Col4Field = value;
                    this.RaisePropertyChanged("Row13Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row13Col5 {
            get {
                return this.Row13Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row13Col5Field, value) != true)) {
                    this.Row13Col5Field = value;
                    this.RaisePropertyChanged("Row13Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row13Col6 {
            get {
                return this.Row13Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row13Col6Field, value) != true)) {
                    this.Row13Col6Field = value;
                    this.RaisePropertyChanged("Row13Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row14Col1 {
            get {
                return this.Row14Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row14Col1Field, value) != true)) {
                    this.Row14Col1Field = value;
                    this.RaisePropertyChanged("Row14Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row14Col2 {
            get {
                return this.Row14Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row14Col2Field, value) != true)) {
                    this.Row14Col2Field = value;
                    this.RaisePropertyChanged("Row14Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row14Col3 {
            get {
                return this.Row14Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row14Col3Field, value) != true)) {
                    this.Row14Col3Field = value;
                    this.RaisePropertyChanged("Row14Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row14Col4 {
            get {
                return this.Row14Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row14Col4Field, value) != true)) {
                    this.Row14Col4Field = value;
                    this.RaisePropertyChanged("Row14Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row14Col5 {
            get {
                return this.Row14Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row14Col5Field, value) != true)) {
                    this.Row14Col5Field = value;
                    this.RaisePropertyChanged("Row14Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row14Col6 {
            get {
                return this.Row14Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row14Col6Field, value) != true)) {
                    this.Row14Col6Field = value;
                    this.RaisePropertyChanged("Row14Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row1Col1 {
            get {
                return this.Row1Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row1Col1Field, value) != true)) {
                    this.Row1Col1Field = value;
                    this.RaisePropertyChanged("Row1Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row1Col2 {
            get {
                return this.Row1Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row1Col2Field, value) != true)) {
                    this.Row1Col2Field = value;
                    this.RaisePropertyChanged("Row1Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row1Col3 {
            get {
                return this.Row1Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row1Col3Field, value) != true)) {
                    this.Row1Col3Field = value;
                    this.RaisePropertyChanged("Row1Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row1Col4 {
            get {
                return this.Row1Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row1Col4Field, value) != true)) {
                    this.Row1Col4Field = value;
                    this.RaisePropertyChanged("Row1Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row1Col5 {
            get {
                return this.Row1Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row1Col5Field, value) != true)) {
                    this.Row1Col5Field = value;
                    this.RaisePropertyChanged("Row1Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row1Col6 {
            get {
                return this.Row1Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row1Col6Field, value) != true)) {
                    this.Row1Col6Field = value;
                    this.RaisePropertyChanged("Row1Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row2Col1 {
            get {
                return this.Row2Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row2Col1Field, value) != true)) {
                    this.Row2Col1Field = value;
                    this.RaisePropertyChanged("Row2Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row2Col2 {
            get {
                return this.Row2Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row2Col2Field, value) != true)) {
                    this.Row2Col2Field = value;
                    this.RaisePropertyChanged("Row2Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row2Col3 {
            get {
                return this.Row2Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row2Col3Field, value) != true)) {
                    this.Row2Col3Field = value;
                    this.RaisePropertyChanged("Row2Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row2Col4 {
            get {
                return this.Row2Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row2Col4Field, value) != true)) {
                    this.Row2Col4Field = value;
                    this.RaisePropertyChanged("Row2Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row2Col5 {
            get {
                return this.Row2Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row2Col5Field, value) != true)) {
                    this.Row2Col5Field = value;
                    this.RaisePropertyChanged("Row2Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row2Col6 {
            get {
                return this.Row2Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row2Col6Field, value) != true)) {
                    this.Row2Col6Field = value;
                    this.RaisePropertyChanged("Row2Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row3Col1 {
            get {
                return this.Row3Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row3Col1Field, value) != true)) {
                    this.Row3Col1Field = value;
                    this.RaisePropertyChanged("Row3Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row3Col2 {
            get {
                return this.Row3Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row3Col2Field, value) != true)) {
                    this.Row3Col2Field = value;
                    this.RaisePropertyChanged("Row3Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row3Col3 {
            get {
                return this.Row3Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row3Col3Field, value) != true)) {
                    this.Row3Col3Field = value;
                    this.RaisePropertyChanged("Row3Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row3Col4 {
            get {
                return this.Row3Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row3Col4Field, value) != true)) {
                    this.Row3Col4Field = value;
                    this.RaisePropertyChanged("Row3Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row3Col5 {
            get {
                return this.Row3Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row3Col5Field, value) != true)) {
                    this.Row3Col5Field = value;
                    this.RaisePropertyChanged("Row3Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row3Col6 {
            get {
                return this.Row3Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row3Col6Field, value) != true)) {
                    this.Row3Col6Field = value;
                    this.RaisePropertyChanged("Row3Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row4Col1 {
            get {
                return this.Row4Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row4Col1Field, value) != true)) {
                    this.Row4Col1Field = value;
                    this.RaisePropertyChanged("Row4Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row4Col2 {
            get {
                return this.Row4Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row4Col2Field, value) != true)) {
                    this.Row4Col2Field = value;
                    this.RaisePropertyChanged("Row4Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row4Col3 {
            get {
                return this.Row4Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row4Col3Field, value) != true)) {
                    this.Row4Col3Field = value;
                    this.RaisePropertyChanged("Row4Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row4Col4 {
            get {
                return this.Row4Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row4Col4Field, value) != true)) {
                    this.Row4Col4Field = value;
                    this.RaisePropertyChanged("Row4Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row4Col5 {
            get {
                return this.Row4Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row4Col5Field, value) != true)) {
                    this.Row4Col5Field = value;
                    this.RaisePropertyChanged("Row4Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row4Col6 {
            get {
                return this.Row4Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row4Col6Field, value) != true)) {
                    this.Row4Col6Field = value;
                    this.RaisePropertyChanged("Row4Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row5Col1 {
            get {
                return this.Row5Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row5Col1Field, value) != true)) {
                    this.Row5Col1Field = value;
                    this.RaisePropertyChanged("Row5Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row5Col2 {
            get {
                return this.Row5Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row5Col2Field, value) != true)) {
                    this.Row5Col2Field = value;
                    this.RaisePropertyChanged("Row5Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row5Col3 {
            get {
                return this.Row5Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row5Col3Field, value) != true)) {
                    this.Row5Col3Field = value;
                    this.RaisePropertyChanged("Row5Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row5Col4 {
            get {
                return this.Row5Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row5Col4Field, value) != true)) {
                    this.Row5Col4Field = value;
                    this.RaisePropertyChanged("Row5Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row5Col5 {
            get {
                return this.Row5Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row5Col5Field, value) != true)) {
                    this.Row5Col5Field = value;
                    this.RaisePropertyChanged("Row5Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row5Col6 {
            get {
                return this.Row5Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row5Col6Field, value) != true)) {
                    this.Row5Col6Field = value;
                    this.RaisePropertyChanged("Row5Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row6Col1 {
            get {
                return this.Row6Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row6Col1Field, value) != true)) {
                    this.Row6Col1Field = value;
                    this.RaisePropertyChanged("Row6Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row6Col2 {
            get {
                return this.Row6Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row6Col2Field, value) != true)) {
                    this.Row6Col2Field = value;
                    this.RaisePropertyChanged("Row6Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row6Col3 {
            get {
                return this.Row6Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row6Col3Field, value) != true)) {
                    this.Row6Col3Field = value;
                    this.RaisePropertyChanged("Row6Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row6Col4 {
            get {
                return this.Row6Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row6Col4Field, value) != true)) {
                    this.Row6Col4Field = value;
                    this.RaisePropertyChanged("Row6Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row6Col5 {
            get {
                return this.Row6Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row6Col5Field, value) != true)) {
                    this.Row6Col5Field = value;
                    this.RaisePropertyChanged("Row6Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row6Col6 {
            get {
                return this.Row6Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row6Col6Field, value) != true)) {
                    this.Row6Col6Field = value;
                    this.RaisePropertyChanged("Row6Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row7Col1 {
            get {
                return this.Row7Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row7Col1Field, value) != true)) {
                    this.Row7Col1Field = value;
                    this.RaisePropertyChanged("Row7Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row7Col2 {
            get {
                return this.Row7Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row7Col2Field, value) != true)) {
                    this.Row7Col2Field = value;
                    this.RaisePropertyChanged("Row7Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row7Col3 {
            get {
                return this.Row7Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row7Col3Field, value) != true)) {
                    this.Row7Col3Field = value;
                    this.RaisePropertyChanged("Row7Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row7Col4 {
            get {
                return this.Row7Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row7Col4Field, value) != true)) {
                    this.Row7Col4Field = value;
                    this.RaisePropertyChanged("Row7Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row7Col5 {
            get {
                return this.Row7Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row7Col5Field, value) != true)) {
                    this.Row7Col5Field = value;
                    this.RaisePropertyChanged("Row7Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row7Col6 {
            get {
                return this.Row7Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row7Col6Field, value) != true)) {
                    this.Row7Col6Field = value;
                    this.RaisePropertyChanged("Row7Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row8Col1 {
            get {
                return this.Row8Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row8Col1Field, value) != true)) {
                    this.Row8Col1Field = value;
                    this.RaisePropertyChanged("Row8Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row8Col2 {
            get {
                return this.Row8Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row8Col2Field, value) != true)) {
                    this.Row8Col2Field = value;
                    this.RaisePropertyChanged("Row8Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row8Col3 {
            get {
                return this.Row8Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row8Col3Field, value) != true)) {
                    this.Row8Col3Field = value;
                    this.RaisePropertyChanged("Row8Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row8Col4 {
            get {
                return this.Row8Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row8Col4Field, value) != true)) {
                    this.Row8Col4Field = value;
                    this.RaisePropertyChanged("Row8Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row8Col5 {
            get {
                return this.Row8Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row8Col5Field, value) != true)) {
                    this.Row8Col5Field = value;
                    this.RaisePropertyChanged("Row8Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row8Col6 {
            get {
                return this.Row8Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row8Col6Field, value) != true)) {
                    this.Row8Col6Field = value;
                    this.RaisePropertyChanged("Row8Col6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row9Col1 {
            get {
                return this.Row9Col1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row9Col1Field, value) != true)) {
                    this.Row9Col1Field = value;
                    this.RaisePropertyChanged("Row9Col1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row9Col2 {
            get {
                return this.Row9Col2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row9Col2Field, value) != true)) {
                    this.Row9Col2Field = value;
                    this.RaisePropertyChanged("Row9Col2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row9Col3 {
            get {
                return this.Row9Col3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row9Col3Field, value) != true)) {
                    this.Row9Col3Field = value;
                    this.RaisePropertyChanged("Row9Col3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row9Col4 {
            get {
                return this.Row9Col4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row9Col4Field, value) != true)) {
                    this.Row9Col4Field = value;
                    this.RaisePropertyChanged("Row9Col4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row9Col5 {
            get {
                return this.Row9Col5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row9Col5Field, value) != true)) {
                    this.Row9Col5Field = value;
                    this.RaisePropertyChanged("Row9Col5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row9Col6 {
            get {
                return this.Row9Col6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Row9Col6Field, value) != true)) {
                    this.Row9Col6Field = value;
                    this.RaisePropertyChanged("Row9Col6");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportGearbox", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportGearbox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportGearboxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxActionToBeTakenOnGearboxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxAirBreatherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxAuxEquipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxAuxStageHousingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxBearingDecision1DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxBearingDecision2DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxBearingDecision3DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxBearingDecision4DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxBearingDecision5DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxBearingDecision6DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsDamage1BearingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsDamage2BearingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsDamage3BearingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsDamage4BearingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsDamage5BearingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsDamage6BearingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsLocation1BearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsLocation2BearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsLocation3BearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsLocation4BearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsLocation5BearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsLocation6BearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsPosition1BearingPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsPosition2BearingPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsPosition3BearingPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsPosition4BearingPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsPosition5BearingPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxBearingsPosition6BearingPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxBrokenBoltsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxChipDetectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxCouplingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxCrackedTorqueArmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxDebrisGearBoxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxDebrisOnMagnetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxDebrisStagesMagnetPosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxDefectCategorizationScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxDefectDamperElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxDrainValveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxElectricalPumpIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation10GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation11GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation12GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation13GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation14GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation15GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation1GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation2GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation3GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation4GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation5GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation6GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation7GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation8GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxExactLocation9GearTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxFilterBlockTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxFilterIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxFrontPlateHousingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass10DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass11DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass12DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass13DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass14DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass15DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass1DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass2DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass3DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass4DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass5DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass6DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass7DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass8DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GearboxGearDamageClass9DamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision10DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision11DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision12DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision13DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision14DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision15DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision1DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision2DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision3DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision4DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision5DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision6DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision7DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision8DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGearDecision9DamageDecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGeneratorManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxGeneratorManufacturerId2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxHSSNRendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxHSSPTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxHSSRendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxHSStageHousingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxHelicalStageHousingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxHoseAndPipingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxIMSNRendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxIMSRendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxImmersionHeaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxInLineFilterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxInputShaftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxLSSNRendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GearboxLastOilChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxLooseBoltsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GearboxMaxTempResetDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxMechanicalOilPumpIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxNeedsToBeAlignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxNoiseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxOffLineFilterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxOilLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxOilLevelSensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxOilPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GearboxOilTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxOilTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxOtherManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxOverallGearboxConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxPT100Bearing1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxPT100Bearing2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxPT100Bearing3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxPT100OilSumpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxPitchTubeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxPlanetStage1HousingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxPlanetStage2HousingErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxProductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxRevisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxRunHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsExactLocation1ShaftTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsExactLocation2ShaftTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsExactLocation3ShaftTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsExactLocation4ShaftTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsTypeofDamage1ShaftErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsTypeofDamage2ShaftErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsTypeofDamage3ShaftErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShaftsTypeofDamage4ShaftErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxShrinkElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxShrinkElementSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxSightGlassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxSoftwareReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxSplitLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GearboxTempBearing1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GearboxTempBearing2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GearboxTempBearing3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GearboxTempOilSumpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GearboxTooMuchClearanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage10GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage11GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage12GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage13GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage14GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage15GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage1GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage2GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage3GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage4GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage5GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage6GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage7GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage8GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GearboxTypeofDamage9GearErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GearboxVibrationsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherGearboxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasUniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strGearboxLastOilChangeDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportGearboxId {
            get {
                return this.ComponentInspectionReportGearboxIdField;
            }
            set {
                if ((this.ComponentInspectionReportGearboxIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportGearboxIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportGearboxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxActionToBeTakenOnGearboxId {
            get {
                return this.GearboxActionToBeTakenOnGearboxIdField;
            }
            set {
                if ((this.GearboxActionToBeTakenOnGearboxIdField.Equals(value) != true)) {
                    this.GearboxActionToBeTakenOnGearboxIdField = value;
                    this.RaisePropertyChanged("GearboxActionToBeTakenOnGearboxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxAirBreather {
            get {
                return this.GearboxAirBreatherField;
            }
            set {
                if ((this.GearboxAirBreatherField.Equals(value) != true)) {
                    this.GearboxAirBreatherField = value;
                    this.RaisePropertyChanged("GearboxAirBreather");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxAuxEquipmentId {
            get {
                return this.GearboxAuxEquipmentIdField;
            }
            set {
                if ((this.GearboxAuxEquipmentIdField.Equals(value) != true)) {
                    this.GearboxAuxEquipmentIdField = value;
                    this.RaisePropertyChanged("GearboxAuxEquipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxAuxStageHousingErrorId {
            get {
                return this.GearboxAuxStageHousingErrorIdField;
            }
            set {
                if ((this.GearboxAuxStageHousingErrorIdField.Equals(value) != true)) {
                    this.GearboxAuxStageHousingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxAuxStageHousingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxBearingDecision1DamageDecisionId {
            get {
                return this.GearboxBearingDecision1DamageDecisionIdField;
            }
            set {
                if ((this.GearboxBearingDecision1DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxBearingDecision1DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxBearingDecision1DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxBearingDecision2DamageDecisionId {
            get {
                return this.GearboxBearingDecision2DamageDecisionIdField;
            }
            set {
                if ((this.GearboxBearingDecision2DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxBearingDecision2DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxBearingDecision2DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxBearingDecision3DamageDecisionId {
            get {
                return this.GearboxBearingDecision3DamageDecisionIdField;
            }
            set {
                if ((this.GearboxBearingDecision3DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxBearingDecision3DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxBearingDecision3DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxBearingDecision4DamageDecisionId {
            get {
                return this.GearboxBearingDecision4DamageDecisionIdField;
            }
            set {
                if ((this.GearboxBearingDecision4DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxBearingDecision4DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxBearingDecision4DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxBearingDecision5DamageDecisionId {
            get {
                return this.GearboxBearingDecision5DamageDecisionIdField;
            }
            set {
                if ((this.GearboxBearingDecision5DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxBearingDecision5DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxBearingDecision5DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxBearingDecision6DamageDecisionId {
            get {
                return this.GearboxBearingDecision6DamageDecisionIdField;
            }
            set {
                if ((this.GearboxBearingDecision6DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxBearingDecision6DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxBearingDecision6DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsDamage1BearingErrorId {
            get {
                return this.GearboxBearingsDamage1BearingErrorIdField;
            }
            set {
                if ((this.GearboxBearingsDamage1BearingErrorIdField.Equals(value) != true)) {
                    this.GearboxBearingsDamage1BearingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsDamage1BearingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsDamage2BearingErrorId {
            get {
                return this.GearboxBearingsDamage2BearingErrorIdField;
            }
            set {
                if ((this.GearboxBearingsDamage2BearingErrorIdField.Equals(value) != true)) {
                    this.GearboxBearingsDamage2BearingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsDamage2BearingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsDamage3BearingErrorId {
            get {
                return this.GearboxBearingsDamage3BearingErrorIdField;
            }
            set {
                if ((this.GearboxBearingsDamage3BearingErrorIdField.Equals(value) != true)) {
                    this.GearboxBearingsDamage3BearingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsDamage3BearingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsDamage4BearingErrorId {
            get {
                return this.GearboxBearingsDamage4BearingErrorIdField;
            }
            set {
                if ((this.GearboxBearingsDamage4BearingErrorIdField.Equals(value) != true)) {
                    this.GearboxBearingsDamage4BearingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsDamage4BearingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsDamage5BearingErrorId {
            get {
                return this.GearboxBearingsDamage5BearingErrorIdField;
            }
            set {
                if ((this.GearboxBearingsDamage5BearingErrorIdField.Equals(value) != true)) {
                    this.GearboxBearingsDamage5BearingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsDamage5BearingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsDamage6BearingErrorId {
            get {
                return this.GearboxBearingsDamage6BearingErrorIdField;
            }
            set {
                if ((this.GearboxBearingsDamage6BearingErrorIdField.Equals(value) != true)) {
                    this.GearboxBearingsDamage6BearingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsDamage6BearingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsLocation1BearingTypeId {
            get {
                return this.GearboxBearingsLocation1BearingTypeIdField;
            }
            set {
                if ((this.GearboxBearingsLocation1BearingTypeIdField.Equals(value) != true)) {
                    this.GearboxBearingsLocation1BearingTypeIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsLocation1BearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsLocation2BearingTypeId {
            get {
                return this.GearboxBearingsLocation2BearingTypeIdField;
            }
            set {
                if ((this.GearboxBearingsLocation2BearingTypeIdField.Equals(value) != true)) {
                    this.GearboxBearingsLocation2BearingTypeIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsLocation2BearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsLocation3BearingTypeId {
            get {
                return this.GearboxBearingsLocation3BearingTypeIdField;
            }
            set {
                if ((this.GearboxBearingsLocation3BearingTypeIdField.Equals(value) != true)) {
                    this.GearboxBearingsLocation3BearingTypeIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsLocation3BearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsLocation4BearingTypeId {
            get {
                return this.GearboxBearingsLocation4BearingTypeIdField;
            }
            set {
                if ((this.GearboxBearingsLocation4BearingTypeIdField.Equals(value) != true)) {
                    this.GearboxBearingsLocation4BearingTypeIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsLocation4BearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsLocation5BearingTypeId {
            get {
                return this.GearboxBearingsLocation5BearingTypeIdField;
            }
            set {
                if ((this.GearboxBearingsLocation5BearingTypeIdField.Equals(value) != true)) {
                    this.GearboxBearingsLocation5BearingTypeIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsLocation5BearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsLocation6BearingTypeId {
            get {
                return this.GearboxBearingsLocation6BearingTypeIdField;
            }
            set {
                if ((this.GearboxBearingsLocation6BearingTypeIdField.Equals(value) != true)) {
                    this.GearboxBearingsLocation6BearingTypeIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsLocation6BearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsPosition1BearingPosId {
            get {
                return this.GearboxBearingsPosition1BearingPosIdField;
            }
            set {
                if ((this.GearboxBearingsPosition1BearingPosIdField.Equals(value) != true)) {
                    this.GearboxBearingsPosition1BearingPosIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsPosition1BearingPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsPosition2BearingPosId {
            get {
                return this.GearboxBearingsPosition2BearingPosIdField;
            }
            set {
                if ((this.GearboxBearingsPosition2BearingPosIdField.Equals(value) != true)) {
                    this.GearboxBearingsPosition2BearingPosIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsPosition2BearingPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsPosition3BearingPosId {
            get {
                return this.GearboxBearingsPosition3BearingPosIdField;
            }
            set {
                if ((this.GearboxBearingsPosition3BearingPosIdField.Equals(value) != true)) {
                    this.GearboxBearingsPosition3BearingPosIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsPosition3BearingPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsPosition4BearingPosId {
            get {
                return this.GearboxBearingsPosition4BearingPosIdField;
            }
            set {
                if ((this.GearboxBearingsPosition4BearingPosIdField.Equals(value) != true)) {
                    this.GearboxBearingsPosition4BearingPosIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsPosition4BearingPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsPosition5BearingPosId {
            get {
                return this.GearboxBearingsPosition5BearingPosIdField;
            }
            set {
                if ((this.GearboxBearingsPosition5BearingPosIdField.Equals(value) != true)) {
                    this.GearboxBearingsPosition5BearingPosIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsPosition5BearingPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxBearingsPosition6BearingPosId {
            get {
                return this.GearboxBearingsPosition6BearingPosIdField;
            }
            set {
                if ((this.GearboxBearingsPosition6BearingPosIdField.Equals(value) != true)) {
                    this.GearboxBearingsPosition6BearingPosIdField = value;
                    this.RaisePropertyChanged("GearboxBearingsPosition6BearingPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxBrokenBolts {
            get {
                return this.GearboxBrokenBoltsField;
            }
            set {
                if ((this.GearboxBrokenBoltsField.Equals(value) != true)) {
                    this.GearboxBrokenBoltsField = value;
                    this.RaisePropertyChanged("GearboxBrokenBolts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxChipDetector {
            get {
                return this.GearboxChipDetectorField;
            }
            set {
                if ((this.GearboxChipDetectorField.Equals(value) != true)) {
                    this.GearboxChipDetectorField = value;
                    this.RaisePropertyChanged("GearboxChipDetector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxClaimRelevantBooleanAnswerId {
            get {
                return this.GearboxClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.GearboxClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.GearboxClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("GearboxClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxCouplingId {
            get {
                return this.GearboxCouplingIdField;
            }
            set {
                if ((this.GearboxCouplingIdField.Equals(value) != true)) {
                    this.GearboxCouplingIdField = value;
                    this.RaisePropertyChanged("GearboxCouplingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxCrackedTorqueArm {
            get {
                return this.GearboxCrackedTorqueArmField;
            }
            set {
                if ((this.GearboxCrackedTorqueArmField.Equals(value) != true)) {
                    this.GearboxCrackedTorqueArmField = value;
                    this.RaisePropertyChanged("GearboxCrackedTorqueArm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxDebrisGearBoxId {
            get {
                return this.GearboxDebrisGearBoxIdField;
            }
            set {
                if ((this.GearboxDebrisGearBoxIdField.Equals(value) != true)) {
                    this.GearboxDebrisGearBoxIdField = value;
                    this.RaisePropertyChanged("GearboxDebrisGearBoxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxDebrisOnMagnetId {
            get {
                return this.GearboxDebrisOnMagnetIdField;
            }
            set {
                if ((this.GearboxDebrisOnMagnetIdField.Equals(value) != true)) {
                    this.GearboxDebrisOnMagnetIdField = value;
                    this.RaisePropertyChanged("GearboxDebrisOnMagnetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxDebrisStagesMagnetPosId {
            get {
                return this.GearboxDebrisStagesMagnetPosIdField;
            }
            set {
                if ((this.GearboxDebrisStagesMagnetPosIdField.Equals(value) != true)) {
                    this.GearboxDebrisStagesMagnetPosIdField = value;
                    this.RaisePropertyChanged("GearboxDebrisStagesMagnetPosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxDefectCategorizationScore {
            get {
                return this.GearboxDefectCategorizationScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxDefectCategorizationScoreField, value) != true)) {
                    this.GearboxDefectCategorizationScoreField = value;
                    this.RaisePropertyChanged("GearboxDefectCategorizationScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxDefectDamperElements {
            get {
                return this.GearboxDefectDamperElementsField;
            }
            set {
                if ((this.GearboxDefectDamperElementsField.Equals(value) != true)) {
                    this.GearboxDefectDamperElementsField = value;
                    this.RaisePropertyChanged("GearboxDefectDamperElements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxDrainValve {
            get {
                return this.GearboxDrainValveField;
            }
            set {
                if ((this.GearboxDrainValveField.Equals(value) != true)) {
                    this.GearboxDrainValveField = value;
                    this.RaisePropertyChanged("GearboxDrainValve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxElectricalPumpId {
            get {
                return this.GearboxElectricalPumpIdField;
            }
            set {
                if ((this.GearboxElectricalPumpIdField.Equals(value) != true)) {
                    this.GearboxElectricalPumpIdField = value;
                    this.RaisePropertyChanged("GearboxElectricalPumpId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation10GearTypeId {
            get {
                return this.GearboxExactLocation10GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation10GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation10GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation10GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation11GearTypeId {
            get {
                return this.GearboxExactLocation11GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation11GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation11GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation11GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation12GearTypeId {
            get {
                return this.GearboxExactLocation12GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation12GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation12GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation12GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation13GearTypeId {
            get {
                return this.GearboxExactLocation13GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation13GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation13GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation13GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation14GearTypeId {
            get {
                return this.GearboxExactLocation14GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation14GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation14GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation14GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation15GearTypeId {
            get {
                return this.GearboxExactLocation15GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation15GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation15GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation15GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation1GearTypeId {
            get {
                return this.GearboxExactLocation1GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation1GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation1GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation1GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation2GearTypeId {
            get {
                return this.GearboxExactLocation2GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation2GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation2GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation2GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation3GearTypeId {
            get {
                return this.GearboxExactLocation3GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation3GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation3GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation3GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation4GearTypeId {
            get {
                return this.GearboxExactLocation4GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation4GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation4GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation4GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation5GearTypeId {
            get {
                return this.GearboxExactLocation5GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation5GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation5GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation5GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation6GearTypeId {
            get {
                return this.GearboxExactLocation6GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation6GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation6GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation6GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation7GearTypeId {
            get {
                return this.GearboxExactLocation7GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation7GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation7GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation7GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation8GearTypeId {
            get {
                return this.GearboxExactLocation8GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation8GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation8GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation8GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxExactLocation9GearTypeId {
            get {
                return this.GearboxExactLocation9GearTypeIdField;
            }
            set {
                if ((this.GearboxExactLocation9GearTypeIdField.Equals(value) != true)) {
                    this.GearboxExactLocation9GearTypeIdField = value;
                    this.RaisePropertyChanged("GearboxExactLocation9GearTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxFilterBlockTypeId {
            get {
                return this.GearboxFilterBlockTypeIdField;
            }
            set {
                if ((this.GearboxFilterBlockTypeIdField.Equals(value) != true)) {
                    this.GearboxFilterBlockTypeIdField = value;
                    this.RaisePropertyChanged("GearboxFilterBlockTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxFilterIndicator {
            get {
                return this.GearboxFilterIndicatorField;
            }
            set {
                if ((this.GearboxFilterIndicatorField.Equals(value) != true)) {
                    this.GearboxFilterIndicatorField = value;
                    this.RaisePropertyChanged("GearboxFilterIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxFrontPlateHousingErrorId {
            get {
                return this.GearboxFrontPlateHousingErrorIdField;
            }
            set {
                if ((this.GearboxFrontPlateHousingErrorIdField.Equals(value) != true)) {
                    this.GearboxFrontPlateHousingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxFrontPlateHousingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass10DamageId {
            get {
                return this.GearboxGearDamageClass10DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass10DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass10DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass10DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass11DamageId {
            get {
                return this.GearboxGearDamageClass11DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass11DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass11DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass11DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass12DamageId {
            get {
                return this.GearboxGearDamageClass12DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass12DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass12DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass12DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass13DamageId {
            get {
                return this.GearboxGearDamageClass13DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass13DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass13DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass13DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass14DamageId {
            get {
                return this.GearboxGearDamageClass14DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass14DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass14DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass14DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass15DamageId {
            get {
                return this.GearboxGearDamageClass15DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass15DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass15DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass15DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass1DamageId {
            get {
                return this.GearboxGearDamageClass1DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass1DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass1DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass1DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass2DamageId {
            get {
                return this.GearboxGearDamageClass2DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass2DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass2DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass2DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass3DamageId {
            get {
                return this.GearboxGearDamageClass3DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass3DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass3DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass3DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass4DamageId {
            get {
                return this.GearboxGearDamageClass4DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass4DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass4DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass4DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass5DamageId {
            get {
                return this.GearboxGearDamageClass5DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass5DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass5DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass5DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass6DamageId {
            get {
                return this.GearboxGearDamageClass6DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass6DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass6DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass6DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass7DamageId {
            get {
                return this.GearboxGearDamageClass7DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass7DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass7DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass7DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass8DamageId {
            get {
                return this.GearboxGearDamageClass8DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass8DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass8DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass8DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GearboxGearDamageClass9DamageId {
            get {
                return this.GearboxGearDamageClass9DamageIdField;
            }
            set {
                if ((this.GearboxGearDamageClass9DamageIdField.Equals(value) != true)) {
                    this.GearboxGearDamageClass9DamageIdField = value;
                    this.RaisePropertyChanged("GearboxGearDamageClass9DamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision10DamageDecisionId {
            get {
                return this.GearboxGearDecision10DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision10DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision10DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision10DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision11DamageDecisionId {
            get {
                return this.GearboxGearDecision11DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision11DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision11DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision11DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision12DamageDecisionId {
            get {
                return this.GearboxGearDecision12DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision12DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision12DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision12DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision13DamageDecisionId {
            get {
                return this.GearboxGearDecision13DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision13DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision13DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision13DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision14DamageDecisionId {
            get {
                return this.GearboxGearDecision14DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision14DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision14DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision14DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision15DamageDecisionId {
            get {
                return this.GearboxGearDecision15DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision15DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision15DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision15DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision1DamageDecisionId {
            get {
                return this.GearboxGearDecision1DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision1DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision1DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision1DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision2DamageDecisionId {
            get {
                return this.GearboxGearDecision2DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision2DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision2DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision2DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision3DamageDecisionId {
            get {
                return this.GearboxGearDecision3DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision3DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision3DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision3DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision4DamageDecisionId {
            get {
                return this.GearboxGearDecision4DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision4DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision4DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision4DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision5DamageDecisionId {
            get {
                return this.GearboxGearDecision5DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision5DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision5DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision5DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision6DamageDecisionId {
            get {
                return this.GearboxGearDecision6DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision6DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision6DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision6DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision7DamageDecisionId {
            get {
                return this.GearboxGearDecision7DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision7DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision7DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision7DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision8DamageDecisionId {
            get {
                return this.GearboxGearDecision8DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision8DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision8DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision8DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGearDecision9DamageDecisionId {
            get {
                return this.GearboxGearDecision9DamageDecisionIdField;
            }
            set {
                if ((this.GearboxGearDecision9DamageDecisionIdField.Equals(value) != true)) {
                    this.GearboxGearDecision9DamageDecisionIdField = value;
                    this.RaisePropertyChanged("GearboxGearDecision9DamageDecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGeneratorManufacturerId {
            get {
                return this.GearboxGeneratorManufacturerIdField;
            }
            set {
                if ((this.GearboxGeneratorManufacturerIdField.Equals(value) != true)) {
                    this.GearboxGeneratorManufacturerIdField = value;
                    this.RaisePropertyChanged("GearboxGeneratorManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxGeneratorManufacturerId2 {
            get {
                return this.GearboxGeneratorManufacturerId2Field;
            }
            set {
                if ((this.GearboxGeneratorManufacturerId2Field.Equals(value) != true)) {
                    this.GearboxGeneratorManufacturerId2Field = value;
                    this.RaisePropertyChanged("GearboxGeneratorManufacturerId2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxHSSNRend {
            get {
                return this.GearboxHSSNRendField;
            }
            set {
                if ((this.GearboxHSSNRendField.Equals(value) != true)) {
                    this.GearboxHSSNRendField = value;
                    this.RaisePropertyChanged("GearboxHSSNRend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxHSSPTO {
            get {
                return this.GearboxHSSPTOField;
            }
            set {
                if ((this.GearboxHSSPTOField.Equals(value) != true)) {
                    this.GearboxHSSPTOField = value;
                    this.RaisePropertyChanged("GearboxHSSPTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxHSSRend {
            get {
                return this.GearboxHSSRendField;
            }
            set {
                if ((this.GearboxHSSRendField.Equals(value) != true)) {
                    this.GearboxHSSRendField = value;
                    this.RaisePropertyChanged("GearboxHSSRend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxHSStageHousingErrorId {
            get {
                return this.GearboxHSStageHousingErrorIdField;
            }
            set {
                if ((this.GearboxHSStageHousingErrorIdField.Equals(value) != true)) {
                    this.GearboxHSStageHousingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxHSStageHousingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxHelicalStageHousingErrorId {
            get {
                return this.GearboxHelicalStageHousingErrorIdField;
            }
            set {
                if ((this.GearboxHelicalStageHousingErrorIdField.Equals(value) != true)) {
                    this.GearboxHelicalStageHousingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxHelicalStageHousingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxHoseAndPiping {
            get {
                return this.GearboxHoseAndPipingField;
            }
            set {
                if ((this.GearboxHoseAndPipingField.Equals(value) != true)) {
                    this.GearboxHoseAndPipingField = value;
                    this.RaisePropertyChanged("GearboxHoseAndPiping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxIMSNRend {
            get {
                return this.GearboxIMSNRendField;
            }
            set {
                if ((this.GearboxIMSNRendField.Equals(value) != true)) {
                    this.GearboxIMSNRendField = value;
                    this.RaisePropertyChanged("GearboxIMSNRend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxIMSRend {
            get {
                return this.GearboxIMSRendField;
            }
            set {
                if ((this.GearboxIMSRendField.Equals(value) != true)) {
                    this.GearboxIMSRendField = value;
                    this.RaisePropertyChanged("GearboxIMSRend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxImmersionHeater {
            get {
                return this.GearboxImmersionHeaterField;
            }
            set {
                if ((this.GearboxImmersionHeaterField.Equals(value) != true)) {
                    this.GearboxImmersionHeaterField = value;
                    this.RaisePropertyChanged("GearboxImmersionHeater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxInLineFilterId {
            get {
                return this.GearboxInLineFilterIdField;
            }
            set {
                if ((this.GearboxInLineFilterIdField.Equals(value) != true)) {
                    this.GearboxInLineFilterIdField = value;
                    this.RaisePropertyChanged("GearboxInLineFilterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxInputShaft {
            get {
                return this.GearboxInputShaftField;
            }
            set {
                if ((this.GearboxInputShaftField.Equals(value) != true)) {
                    this.GearboxInputShaftField = value;
                    this.RaisePropertyChanged("GearboxInputShaft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxLSSNRend {
            get {
                return this.GearboxLSSNRendField;
            }
            set {
                if ((this.GearboxLSSNRendField.Equals(value) != true)) {
                    this.GearboxLSSNRendField = value;
                    this.RaisePropertyChanged("GearboxLSSNRend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GearboxLastOilChangeDate {
            get {
                return this.GearboxLastOilChangeDateField;
            }
            set {
                if ((this.GearboxLastOilChangeDateField.Equals(value) != true)) {
                    this.GearboxLastOilChangeDateField = value;
                    this.RaisePropertyChanged("GearboxLastOilChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxLooseBolts {
            get {
                return this.GearboxLooseBoltsField;
            }
            set {
                if ((this.GearboxLooseBoltsField.Equals(value) != true)) {
                    this.GearboxLooseBoltsField = value;
                    this.RaisePropertyChanged("GearboxLooseBolts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxManufacturerId {
            get {
                return this.GearboxManufacturerIdField;
            }
            set {
                if ((this.GearboxManufacturerIdField.Equals(value) != true)) {
                    this.GearboxManufacturerIdField = value;
                    this.RaisePropertyChanged("GearboxManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GearboxMaxTempResetDate {
            get {
                return this.GearboxMaxTempResetDateField;
            }
            set {
                if ((this.GearboxMaxTempResetDateField.Equals(value) != true)) {
                    this.GearboxMaxTempResetDateField = value;
                    this.RaisePropertyChanged("GearboxMaxTempResetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxMechanicalOilPumpId {
            get {
                return this.GearboxMechanicalOilPumpIdField;
            }
            set {
                if ((this.GearboxMechanicalOilPumpIdField.Equals(value) != true)) {
                    this.GearboxMechanicalOilPumpIdField = value;
                    this.RaisePropertyChanged("GearboxMechanicalOilPumpId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxNeedsToBeAligned {
            get {
                return this.GearboxNeedsToBeAlignedField;
            }
            set {
                if ((this.GearboxNeedsToBeAlignedField.Equals(value) != true)) {
                    this.GearboxNeedsToBeAlignedField = value;
                    this.RaisePropertyChanged("GearboxNeedsToBeAligned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxNoiseId {
            get {
                return this.GearboxNoiseIdField;
            }
            set {
                if ((this.GearboxNoiseIdField.Equals(value) != true)) {
                    this.GearboxNoiseIdField = value;
                    this.RaisePropertyChanged("GearboxNoiseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxOffLineFilterId {
            get {
                return this.GearboxOffLineFilterIdField;
            }
            set {
                if ((this.GearboxOffLineFilterIdField.Equals(value) != true)) {
                    this.GearboxOffLineFilterIdField = value;
                    this.RaisePropertyChanged("GearboxOffLineFilterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxOilLevelId {
            get {
                return this.GearboxOilLevelIdField;
            }
            set {
                if ((this.GearboxOilLevelIdField.Equals(value) != true)) {
                    this.GearboxOilLevelIdField = value;
                    this.RaisePropertyChanged("GearboxOilLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxOilLevelSensor {
            get {
                return this.GearboxOilLevelSensorField;
            }
            set {
                if ((this.GearboxOilLevelSensorField.Equals(value) != true)) {
                    this.GearboxOilLevelSensorField = value;
                    this.RaisePropertyChanged("GearboxOilLevelSensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxOilPressure {
            get {
                return this.GearboxOilPressureField;
            }
            set {
                if ((this.GearboxOilPressureField.Equals(value) != true)) {
                    this.GearboxOilPressureField = value;
                    this.RaisePropertyChanged("GearboxOilPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GearboxOilTemperature {
            get {
                return this.GearboxOilTemperatureField;
            }
            set {
                if ((this.GearboxOilTemperatureField.Equals(value) != true)) {
                    this.GearboxOilTemperatureField = value;
                    this.RaisePropertyChanged("GearboxOilTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxOilTypeId {
            get {
                return this.GearboxOilTypeIdField;
            }
            set {
                if ((this.GearboxOilTypeIdField.Equals(value) != true)) {
                    this.GearboxOilTypeIdField = value;
                    this.RaisePropertyChanged("GearboxOilTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxOtherManufacturer {
            get {
                return this.GearboxOtherManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxOtherManufacturerField, value) != true)) {
                    this.GearboxOtherManufacturerField = value;
                    this.RaisePropertyChanged("GearboxOtherManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxOverallGearboxConditionId {
            get {
                return this.GearboxOverallGearboxConditionIdField;
            }
            set {
                if ((this.GearboxOverallGearboxConditionIdField.Equals(value) != true)) {
                    this.GearboxOverallGearboxConditionIdField = value;
                    this.RaisePropertyChanged("GearboxOverallGearboxConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxPT100Bearing1 {
            get {
                return this.GearboxPT100Bearing1Field;
            }
            set {
                if ((this.GearboxPT100Bearing1Field.Equals(value) != true)) {
                    this.GearboxPT100Bearing1Field = value;
                    this.RaisePropertyChanged("GearboxPT100Bearing1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxPT100Bearing2 {
            get {
                return this.GearboxPT100Bearing2Field;
            }
            set {
                if ((this.GearboxPT100Bearing2Field.Equals(value) != true)) {
                    this.GearboxPT100Bearing2Field = value;
                    this.RaisePropertyChanged("GearboxPT100Bearing2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxPT100Bearing3 {
            get {
                return this.GearboxPT100Bearing3Field;
            }
            set {
                if ((this.GearboxPT100Bearing3Field.Equals(value) != true)) {
                    this.GearboxPT100Bearing3Field = value;
                    this.RaisePropertyChanged("GearboxPT100Bearing3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxPT100OilSump {
            get {
                return this.GearboxPT100OilSumpField;
            }
            set {
                if ((this.GearboxPT100OilSumpField.Equals(value) != true)) {
                    this.GearboxPT100OilSumpField = value;
                    this.RaisePropertyChanged("GearboxPT100OilSump");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxPitchTube {
            get {
                return this.GearboxPitchTubeField;
            }
            set {
                if ((this.GearboxPitchTubeField.Equals(value) != true)) {
                    this.GearboxPitchTubeField = value;
                    this.RaisePropertyChanged("GearboxPitchTube");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxPlanetStage1HousingErrorId {
            get {
                return this.GearboxPlanetStage1HousingErrorIdField;
            }
            set {
                if ((this.GearboxPlanetStage1HousingErrorIdField.Equals(value) != true)) {
                    this.GearboxPlanetStage1HousingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxPlanetStage1HousingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxPlanetStage2HousingErrorId {
            get {
                return this.GearboxPlanetStage2HousingErrorIdField;
            }
            set {
                if ((this.GearboxPlanetStage2HousingErrorIdField.Equals(value) != true)) {
                    this.GearboxPlanetStage2HousingErrorIdField = value;
                    this.RaisePropertyChanged("GearboxPlanetStage2HousingErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxProduction {
            get {
                return this.GearboxProductionField;
            }
            set {
                if ((this.GearboxProductionField.Equals(value) != true)) {
                    this.GearboxProductionField = value;
                    this.RaisePropertyChanged("GearboxProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxRevisionId {
            get {
                return this.GearboxRevisionIdField;
            }
            set {
                if ((this.GearboxRevisionIdField.Equals(value) != true)) {
                    this.GearboxRevisionIdField = value;
                    this.RaisePropertyChanged("GearboxRevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxRunHours {
            get {
                return this.GearboxRunHoursField;
            }
            set {
                if ((this.GearboxRunHoursField.Equals(value) != true)) {
                    this.GearboxRunHoursField = value;
                    this.RaisePropertyChanged("GearboxRunHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxSerialNumber {
            get {
                return this.GearboxSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxSerialNumberField, value) != true)) {
                    this.GearboxSerialNumberField = value;
                    this.RaisePropertyChanged("GearboxSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsExactLocation1ShaftTypeId {
            get {
                return this.GearboxShaftsExactLocation1ShaftTypeIdField;
            }
            set {
                if ((this.GearboxShaftsExactLocation1ShaftTypeIdField.Equals(value) != true)) {
                    this.GearboxShaftsExactLocation1ShaftTypeIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsExactLocation1ShaftTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsExactLocation2ShaftTypeId {
            get {
                return this.GearboxShaftsExactLocation2ShaftTypeIdField;
            }
            set {
                if ((this.GearboxShaftsExactLocation2ShaftTypeIdField.Equals(value) != true)) {
                    this.GearboxShaftsExactLocation2ShaftTypeIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsExactLocation2ShaftTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsExactLocation3ShaftTypeId {
            get {
                return this.GearboxShaftsExactLocation3ShaftTypeIdField;
            }
            set {
                if ((this.GearboxShaftsExactLocation3ShaftTypeIdField.Equals(value) != true)) {
                    this.GearboxShaftsExactLocation3ShaftTypeIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsExactLocation3ShaftTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsExactLocation4ShaftTypeId {
            get {
                return this.GearboxShaftsExactLocation4ShaftTypeIdField;
            }
            set {
                if ((this.GearboxShaftsExactLocation4ShaftTypeIdField.Equals(value) != true)) {
                    this.GearboxShaftsExactLocation4ShaftTypeIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsExactLocation4ShaftTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsTypeofDamage1ShaftErrorId {
            get {
                return this.GearboxShaftsTypeofDamage1ShaftErrorIdField;
            }
            set {
                if ((this.GearboxShaftsTypeofDamage1ShaftErrorIdField.Equals(value) != true)) {
                    this.GearboxShaftsTypeofDamage1ShaftErrorIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsTypeofDamage1ShaftErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsTypeofDamage2ShaftErrorId {
            get {
                return this.GearboxShaftsTypeofDamage2ShaftErrorIdField;
            }
            set {
                if ((this.GearboxShaftsTypeofDamage2ShaftErrorIdField.Equals(value) != true)) {
                    this.GearboxShaftsTypeofDamage2ShaftErrorIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsTypeofDamage2ShaftErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsTypeofDamage3ShaftErrorId {
            get {
                return this.GearboxShaftsTypeofDamage3ShaftErrorIdField;
            }
            set {
                if ((this.GearboxShaftsTypeofDamage3ShaftErrorIdField.Equals(value) != true)) {
                    this.GearboxShaftsTypeofDamage3ShaftErrorIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsTypeofDamage3ShaftErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShaftsTypeofDamage4ShaftErrorId {
            get {
                return this.GearboxShaftsTypeofDamage4ShaftErrorIdField;
            }
            set {
                if ((this.GearboxShaftsTypeofDamage4ShaftErrorIdField.Equals(value) != true)) {
                    this.GearboxShaftsTypeofDamage4ShaftErrorIdField = value;
                    this.RaisePropertyChanged("GearboxShaftsTypeofDamage4ShaftErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxShrinkElementId {
            get {
                return this.GearboxShrinkElementIdField;
            }
            set {
                if ((this.GearboxShrinkElementIdField.Equals(value) != true)) {
                    this.GearboxShrinkElementIdField = value;
                    this.RaisePropertyChanged("GearboxShrinkElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxShrinkElementSerialNumber {
            get {
                return this.GearboxShrinkElementSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxShrinkElementSerialNumberField, value) != true)) {
                    this.GearboxShrinkElementSerialNumberField = value;
                    this.RaisePropertyChanged("GearboxShrinkElementSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxSightGlass {
            get {
                return this.GearboxSightGlassField;
            }
            set {
                if ((this.GearboxSightGlassField.Equals(value) != true)) {
                    this.GearboxSightGlassField = value;
                    this.RaisePropertyChanged("GearboxSightGlass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxSoftwareRelease {
            get {
                return this.GearboxSoftwareReleaseField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxSoftwareReleaseField, value) != true)) {
                    this.GearboxSoftwareReleaseField = value;
                    this.RaisePropertyChanged("GearboxSoftwareRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxSplitLines {
            get {
                return this.GearboxSplitLinesField;
            }
            set {
                if ((this.GearboxSplitLinesField.Equals(value) != true)) {
                    this.GearboxSplitLinesField = value;
                    this.RaisePropertyChanged("GearboxSplitLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GearboxTempBearing1 {
            get {
                return this.GearboxTempBearing1Field;
            }
            set {
                if ((this.GearboxTempBearing1Field.Equals(value) != true)) {
                    this.GearboxTempBearing1Field = value;
                    this.RaisePropertyChanged("GearboxTempBearing1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GearboxTempBearing2 {
            get {
                return this.GearboxTempBearing2Field;
            }
            set {
                if ((this.GearboxTempBearing2Field.Equals(value) != true)) {
                    this.GearboxTempBearing2Field = value;
                    this.RaisePropertyChanged("GearboxTempBearing2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GearboxTempBearing3 {
            get {
                return this.GearboxTempBearing3Field;
            }
            set {
                if ((this.GearboxTempBearing3Field.Equals(value) != true)) {
                    this.GearboxTempBearing3Field = value;
                    this.RaisePropertyChanged("GearboxTempBearing3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GearboxTempOilSump {
            get {
                return this.GearboxTempOilSumpField;
            }
            set {
                if ((this.GearboxTempOilSumpField.Equals(value) != true)) {
                    this.GearboxTempOilSumpField = value;
                    this.RaisePropertyChanged("GearboxTempOilSump");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GearboxTooMuchClearance {
            get {
                return this.GearboxTooMuchClearanceField;
            }
            set {
                if ((this.GearboxTooMuchClearanceField.Equals(value) != true)) {
                    this.GearboxTooMuchClearanceField = value;
                    this.RaisePropertyChanged("GearboxTooMuchClearance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxTypeId {
            get {
                return this.GearboxTypeIdField;
            }
            set {
                if ((this.GearboxTypeIdField.Equals(value) != true)) {
                    this.GearboxTypeIdField = value;
                    this.RaisePropertyChanged("GearboxTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage10GearErrorId {
            get {
                return this.GearboxTypeofDamage10GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage10GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage10GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage10GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage11GearErrorId {
            get {
                return this.GearboxTypeofDamage11GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage11GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage11GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage11GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage12GearErrorId {
            get {
                return this.GearboxTypeofDamage12GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage12GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage12GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage12GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage13GearErrorId {
            get {
                return this.GearboxTypeofDamage13GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage13GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage13GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage13GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage14GearErrorId {
            get {
                return this.GearboxTypeofDamage14GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage14GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage14GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage14GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage15GearErrorId {
            get {
                return this.GearboxTypeofDamage15GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage15GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage15GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage15GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage1GearErrorId {
            get {
                return this.GearboxTypeofDamage1GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage1GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage1GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage1GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage2GearErrorId {
            get {
                return this.GearboxTypeofDamage2GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage2GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage2GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage2GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage3GearErrorId {
            get {
                return this.GearboxTypeofDamage3GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage3GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage3GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage3GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage4GearErrorId {
            get {
                return this.GearboxTypeofDamage4GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage4GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage4GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage4GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage5GearErrorId {
            get {
                return this.GearboxTypeofDamage5GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage5GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage5GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage5GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage6GearErrorId {
            get {
                return this.GearboxTypeofDamage6GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage6GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage6GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage6GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage7GearErrorId {
            get {
                return this.GearboxTypeofDamage7GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage7GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage7GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage7GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage8GearErrorId {
            get {
                return this.GearboxTypeofDamage8GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage8GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage8GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage8GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GearboxTypeofDamage9GearErrorId {
            get {
                return this.GearboxTypeofDamage9GearErrorIdField;
            }
            set {
                if ((this.GearboxTypeofDamage9GearErrorIdField.Equals(value) != true)) {
                    this.GearboxTypeofDamage9GearErrorIdField = value;
                    this.RaisePropertyChanged("GearboxTypeofDamage9GearErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GearboxVibrationsId {
            get {
                return this.GearboxVibrationsIdField;
            }
            set {
                if ((this.GearboxVibrationsIdField.Equals(value) != true)) {
                    this.GearboxVibrationsIdField = value;
                    this.RaisePropertyChanged("GearboxVibrationsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherGearboxType {
            get {
                return this.OtherGearboxTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherGearboxTypeField, value) != true)) {
                    this.OtherGearboxTypeField = value;
                    this.RaisePropertyChanged("OtherGearboxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasUniqueIdentifier {
            get {
                return this.VestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasUniqueIdentifierField, value) != true)) {
                    this.VestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("VestasUniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strGearboxLastOilChangeDate {
            get {
                return this.strGearboxLastOilChangeDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strGearboxLastOilChangeDateField, value) != true)) {
                    this.strGearboxLastOilChangeDateField = value;
                    this.RaisePropertyChanged("strGearboxLastOilChangeDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonInspectionGeneral", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class CommonInspectionGeneral : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportGeneralIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralBlade1SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralBlade2SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralBlade3SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralComponentGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralComponentManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralComponentSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralControllerTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralExecutedBy1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralExecutedBy2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralExecutedBy3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralExecutedBy4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralGearboxManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralGeneratorManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralInitiatedBy1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralInitiatedBy2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralInitiatedBy3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralInitiatedBy4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralMeasurementsConducted1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralMeasurementsConducted2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralMeasurementsConducted3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralMeasurementsConducted4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralOtherGearboxManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralOtherGearboxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeneralPicturesIncludedBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralPositionOfFailedItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralRamDumpNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralSoftwareReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralTowerHeightIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralTowerTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralTransformerManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneralVDFTrackNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasUniqueIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportGeneralId {
            get {
                return this.ComponentInspectionReportGeneralIdField;
            }
            set {
                if ((this.ComponentInspectionReportGeneralIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportGeneralIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportGeneralId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralBlade1SerialNumber {
            get {
                return this.GeneralBlade1SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralBlade1SerialNumberField, value) != true)) {
                    this.GeneralBlade1SerialNumberField = value;
                    this.RaisePropertyChanged("GeneralBlade1SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralBlade2SerialNumber {
            get {
                return this.GeneralBlade2SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralBlade2SerialNumberField, value) != true)) {
                    this.GeneralBlade2SerialNumberField = value;
                    this.RaisePropertyChanged("GeneralBlade2SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralBlade3SerialNumber {
            get {
                return this.GeneralBlade3SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralBlade3SerialNumberField, value) != true)) {
                    this.GeneralBlade3SerialNumberField = value;
                    this.RaisePropertyChanged("GeneralBlade3SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralClaimRelevantBooleanAnswerId {
            get {
                return this.GeneralClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.GeneralClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.GeneralClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("GeneralClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralComponentGroupId {
            get {
                return this.GeneralComponentGroupIdField;
            }
            set {
                if ((this.GeneralComponentGroupIdField.Equals(value) != true)) {
                    this.GeneralComponentGroupIdField = value;
                    this.RaisePropertyChanged("GeneralComponentGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralComponentManufacturer {
            get {
                return this.GeneralComponentManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralComponentManufacturerField, value) != true)) {
                    this.GeneralComponentManufacturerField = value;
                    this.RaisePropertyChanged("GeneralComponentManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralComponentSerialNumber {
            get {
                return this.GeneralComponentSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralComponentSerialNumberField, value) != true)) {
                    this.GeneralComponentSerialNumberField = value;
                    this.RaisePropertyChanged("GeneralComponentSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralComponentType {
            get {
                return this.GeneralComponentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralComponentTypeField, value) != true)) {
                    this.GeneralComponentTypeField = value;
                    this.RaisePropertyChanged("GeneralComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralControllerTypeId {
            get {
                return this.GeneralControllerTypeIdField;
            }
            set {
                if ((this.GeneralControllerTypeIdField.Equals(value) != true)) {
                    this.GeneralControllerTypeIdField = value;
                    this.RaisePropertyChanged("GeneralControllerTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralExecutedBy1 {
            get {
                return this.GeneralExecutedBy1Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralExecutedBy1Field, value) != true)) {
                    this.GeneralExecutedBy1Field = value;
                    this.RaisePropertyChanged("GeneralExecutedBy1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralExecutedBy2 {
            get {
                return this.GeneralExecutedBy2Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralExecutedBy2Field, value) != true)) {
                    this.GeneralExecutedBy2Field = value;
                    this.RaisePropertyChanged("GeneralExecutedBy2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralExecutedBy3 {
            get {
                return this.GeneralExecutedBy3Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralExecutedBy3Field, value) != true)) {
                    this.GeneralExecutedBy3Field = value;
                    this.RaisePropertyChanged("GeneralExecutedBy3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralExecutedBy4 {
            get {
                return this.GeneralExecutedBy4Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralExecutedBy4Field, value) != true)) {
                    this.GeneralExecutedBy4Field = value;
                    this.RaisePropertyChanged("GeneralExecutedBy4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralGearboxManufacturerId {
            get {
                return this.GeneralGearboxManufacturerIdField;
            }
            set {
                if ((this.GeneralGearboxManufacturerIdField.Equals(value) != true)) {
                    this.GeneralGearboxManufacturerIdField = value;
                    this.RaisePropertyChanged("GeneralGearboxManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralGeneratorManufacturerId {
            get {
                return this.GeneralGeneratorManufacturerIdField;
            }
            set {
                if ((this.GeneralGeneratorManufacturerIdField.Equals(value) != true)) {
                    this.GeneralGeneratorManufacturerIdField = value;
                    this.RaisePropertyChanged("GeneralGeneratorManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralInitiatedBy1 {
            get {
                return this.GeneralInitiatedBy1Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralInitiatedBy1Field, value) != true)) {
                    this.GeneralInitiatedBy1Field = value;
                    this.RaisePropertyChanged("GeneralInitiatedBy1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralInitiatedBy2 {
            get {
                return this.GeneralInitiatedBy2Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralInitiatedBy2Field, value) != true)) {
                    this.GeneralInitiatedBy2Field = value;
                    this.RaisePropertyChanged("GeneralInitiatedBy2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralInitiatedBy3 {
            get {
                return this.GeneralInitiatedBy3Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralInitiatedBy3Field, value) != true)) {
                    this.GeneralInitiatedBy3Field = value;
                    this.RaisePropertyChanged("GeneralInitiatedBy3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralInitiatedBy4 {
            get {
                return this.GeneralInitiatedBy4Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralInitiatedBy4Field, value) != true)) {
                    this.GeneralInitiatedBy4Field = value;
                    this.RaisePropertyChanged("GeneralInitiatedBy4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralMeasurementsConducted1 {
            get {
                return this.GeneralMeasurementsConducted1Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralMeasurementsConducted1Field, value) != true)) {
                    this.GeneralMeasurementsConducted1Field = value;
                    this.RaisePropertyChanged("GeneralMeasurementsConducted1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralMeasurementsConducted2 {
            get {
                return this.GeneralMeasurementsConducted2Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralMeasurementsConducted2Field, value) != true)) {
                    this.GeneralMeasurementsConducted2Field = value;
                    this.RaisePropertyChanged("GeneralMeasurementsConducted2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralMeasurementsConducted3 {
            get {
                return this.GeneralMeasurementsConducted3Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralMeasurementsConducted3Field, value) != true)) {
                    this.GeneralMeasurementsConducted3Field = value;
                    this.RaisePropertyChanged("GeneralMeasurementsConducted3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralMeasurementsConducted4 {
            get {
                return this.GeneralMeasurementsConducted4Field;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralMeasurementsConducted4Field, value) != true)) {
                    this.GeneralMeasurementsConducted4Field = value;
                    this.RaisePropertyChanged("GeneralMeasurementsConducted4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralOtherGearboxManufacturer {
            get {
                return this.GeneralOtherGearboxManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralOtherGearboxManufacturerField, value) != true)) {
                    this.GeneralOtherGearboxManufacturerField = value;
                    this.RaisePropertyChanged("GeneralOtherGearboxManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralOtherGearboxType {
            get {
                return this.GeneralOtherGearboxTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralOtherGearboxTypeField, value) != true)) {
                    this.GeneralOtherGearboxTypeField = value;
                    this.RaisePropertyChanged("GeneralOtherGearboxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeneralPicturesIncludedBooleanAnswerId {
            get {
                return this.GeneralPicturesIncludedBooleanAnswerIdField;
            }
            set {
                if ((this.GeneralPicturesIncludedBooleanAnswerIdField.Equals(value) != true)) {
                    this.GeneralPicturesIncludedBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("GeneralPicturesIncludedBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralPositionOfFailedItem {
            get {
                return this.GeneralPositionOfFailedItemField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralPositionOfFailedItemField, value) != true)) {
                    this.GeneralPositionOfFailedItemField = value;
                    this.RaisePropertyChanged("GeneralPositionOfFailedItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralRamDumpNumber {
            get {
                return this.GeneralRamDumpNumberField;
            }
            set {
                if ((this.GeneralRamDumpNumberField.Equals(value) != true)) {
                    this.GeneralRamDumpNumberField = value;
                    this.RaisePropertyChanged("GeneralRamDumpNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralSoftwareRelease {
            get {
                return this.GeneralSoftwareReleaseField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralSoftwareReleaseField, value) != true)) {
                    this.GeneralSoftwareReleaseField = value;
                    this.RaisePropertyChanged("GeneralSoftwareRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralTowerHeightId {
            get {
                return this.GeneralTowerHeightIdField;
            }
            set {
                if ((this.GeneralTowerHeightIdField.Equals(value) != true)) {
                    this.GeneralTowerHeightIdField = value;
                    this.RaisePropertyChanged("GeneralTowerHeightId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralTowerTypeId {
            get {
                return this.GeneralTowerTypeIdField;
            }
            set {
                if ((this.GeneralTowerTypeIdField.Equals(value) != true)) {
                    this.GeneralTowerTypeIdField = value;
                    this.RaisePropertyChanged("GeneralTowerTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralTransformerManufacturerId {
            get {
                return this.GeneralTransformerManufacturerIdField;
            }
            set {
                if ((this.GeneralTransformerManufacturerIdField.Equals(value) != true)) {
                    this.GeneralTransformerManufacturerIdField = value;
                    this.RaisePropertyChanged("GeneralTransformerManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneralVDFTrackNumber {
            get {
                return this.GeneralVDFTrackNumberField;
            }
            set {
                if ((this.GeneralVDFTrackNumberField.Equals(value) != true)) {
                    this.GeneralVDFTrackNumberField = value;
                    this.RaisePropertyChanged("GeneralVDFTrackNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasUniqueIdentifier {
            get {
                return this.VestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasUniqueIdentifierField, value) != true)) {
                    this.VestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("VestasUniqueIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportGenerator", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportGenerator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActionToBeTakenOnGeneratorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AirToAirCoolerExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AirToAirCoolerInternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportGeneratorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CouplingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> GeneratorClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneratorCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeneratorCoverIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeneratorDriveEndIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneratorInsulationCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeneratorManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GeneratorMaxTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GeneratorMaxTemperatureResetDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeneratorNonDriveEndIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GeneratorRewoundLocallyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeneratorRotorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneratorSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InsulationCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> K1L1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> K1M1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> K2L2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> K2M2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> KGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> KGroundOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> L1M1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> L2M2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LGroundOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MGroundOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> U1U2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UGroundOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UVOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UWOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> V1V2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VGroundOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VWOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasUniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> W1W2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> WGroundOhmUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strGeneratorMaxTemperatureResetDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActionToBeTakenOnGeneratorId {
            get {
                return this.ActionToBeTakenOnGeneratorIdField;
            }
            set {
                if ((this.ActionToBeTakenOnGeneratorIdField.Equals(value) != true)) {
                    this.ActionToBeTakenOnGeneratorIdField = value;
                    this.RaisePropertyChanged("ActionToBeTakenOnGeneratorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AirToAirCoolerExternalId {
            get {
                return this.AirToAirCoolerExternalIdField;
            }
            set {
                if ((this.AirToAirCoolerExternalIdField.Equals(value) != true)) {
                    this.AirToAirCoolerExternalIdField = value;
                    this.RaisePropertyChanged("AirToAirCoolerExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AirToAirCoolerInternalId {
            get {
                return this.AirToAirCoolerInternalIdField;
            }
            set {
                if ((this.AirToAirCoolerInternalIdField.Equals(value) != true)) {
                    this.AirToAirCoolerInternalIdField = value;
                    this.RaisePropertyChanged("AirToAirCoolerInternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportGeneratorId {
            get {
                return this.ComponentInspectionReportGeneratorIdField;
            }
            set {
                if ((this.ComponentInspectionReportGeneratorIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportGeneratorIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportGeneratorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CouplingId {
            get {
                return this.CouplingIdField;
            }
            set {
                if ((this.CouplingIdField.Equals(value) != true)) {
                    this.CouplingIdField = value;
                    this.RaisePropertyChanged("CouplingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> GeneratorClaimRelevantBooleanAnswerId {
            get {
                return this.GeneratorClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.GeneratorClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.GeneratorClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("GeneratorClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneratorComments {
            get {
                return this.GeneratorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneratorCommentsField, value) != true)) {
                    this.GeneratorCommentsField = value;
                    this.RaisePropertyChanged("GeneratorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeneratorCoverId {
            get {
                return this.GeneratorCoverIdField;
            }
            set {
                if ((this.GeneratorCoverIdField.Equals(value) != true)) {
                    this.GeneratorCoverIdField = value;
                    this.RaisePropertyChanged("GeneratorCoverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeneratorDriveEndId {
            get {
                return this.GeneratorDriveEndIdField;
            }
            set {
                if ((this.GeneratorDriveEndIdField.Equals(value) != true)) {
                    this.GeneratorDriveEndIdField = value;
                    this.RaisePropertyChanged("GeneratorDriveEndId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneratorInsulationComments {
            get {
                return this.GeneratorInsulationCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneratorInsulationCommentsField, value) != true)) {
                    this.GeneratorInsulationCommentsField = value;
                    this.RaisePropertyChanged("GeneratorInsulationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeneratorManufacturerId {
            get {
                return this.GeneratorManufacturerIdField;
            }
            set {
                if ((this.GeneratorManufacturerIdField.Equals(value) != true)) {
                    this.GeneratorManufacturerIdField = value;
                    this.RaisePropertyChanged("GeneratorManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GeneratorMaxTemperature {
            get {
                return this.GeneratorMaxTemperatureField;
            }
            set {
                if ((this.GeneratorMaxTemperatureField.Equals(value) != true)) {
                    this.GeneratorMaxTemperatureField = value;
                    this.RaisePropertyChanged("GeneratorMaxTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GeneratorMaxTemperatureResetDate {
            get {
                return this.GeneratorMaxTemperatureResetDateField;
            }
            set {
                if ((this.GeneratorMaxTemperatureResetDateField.Equals(value) != true)) {
                    this.GeneratorMaxTemperatureResetDateField = value;
                    this.RaisePropertyChanged("GeneratorMaxTemperatureResetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeneratorNonDriveEndId {
            get {
                return this.GeneratorNonDriveEndIdField;
            }
            set {
                if ((this.GeneratorNonDriveEndIdField.Equals(value) != true)) {
                    this.GeneratorNonDriveEndIdField = value;
                    this.RaisePropertyChanged("GeneratorNonDriveEndId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GeneratorRewoundLocally {
            get {
                return this.GeneratorRewoundLocallyField;
            }
            set {
                if ((this.GeneratorRewoundLocallyField.Equals(value) != true)) {
                    this.GeneratorRewoundLocallyField = value;
                    this.RaisePropertyChanged("GeneratorRewoundLocally");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeneratorRotorId {
            get {
                return this.GeneratorRotorIdField;
            }
            set {
                if ((this.GeneratorRotorIdField.Equals(value) != true)) {
                    this.GeneratorRotorIdField = value;
                    this.RaisePropertyChanged("GeneratorRotorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneratorSerialNumber {
            get {
                return this.GeneratorSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneratorSerialNumberField, value) != true)) {
                    this.GeneratorSerialNumberField = value;
                    this.RaisePropertyChanged("GeneratorSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InsulationComments {
            get {
                return this.InsulationCommentsField;
            }
            set {
                if ((this.InsulationCommentsField.Equals(value) != true)) {
                    this.InsulationCommentsField = value;
                    this.RaisePropertyChanged("InsulationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> K1L1 {
            get {
                return this.K1L1Field;
            }
            set {
                if ((this.K1L1Field.Equals(value) != true)) {
                    this.K1L1Field = value;
                    this.RaisePropertyChanged("K1L1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> K1M1 {
            get {
                return this.K1M1Field;
            }
            set {
                if ((this.K1M1Field.Equals(value) != true)) {
                    this.K1M1Field = value;
                    this.RaisePropertyChanged("K1M1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> K2L2 {
            get {
                return this.K2L2Field;
            }
            set {
                if ((this.K2L2Field.Equals(value) != true)) {
                    this.K2L2Field = value;
                    this.RaisePropertyChanged("K2L2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> K2M2 {
            get {
                return this.K2M2Field;
            }
            set {
                if ((this.K2M2Field.Equals(value) != true)) {
                    this.K2M2Field = value;
                    this.RaisePropertyChanged("K2M2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> KGround {
            get {
                return this.KGroundField;
            }
            set {
                if ((this.KGroundField.Equals(value) != true)) {
                    this.KGroundField = value;
                    this.RaisePropertyChanged("KGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> KGroundOhmUnitId {
            get {
                return this.KGroundOhmUnitIdField;
            }
            set {
                if ((this.KGroundOhmUnitIdField.Equals(value) != true)) {
                    this.KGroundOhmUnitIdField = value;
                    this.RaisePropertyChanged("KGroundOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> L1M1 {
            get {
                return this.L1M1Field;
            }
            set {
                if ((this.L1M1Field.Equals(value) != true)) {
                    this.L1M1Field = value;
                    this.RaisePropertyChanged("L1M1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> L2M2 {
            get {
                return this.L2M2Field;
            }
            set {
                if ((this.L2M2Field.Equals(value) != true)) {
                    this.L2M2Field = value;
                    this.RaisePropertyChanged("L2M2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LGround {
            get {
                return this.LGroundField;
            }
            set {
                if ((this.LGroundField.Equals(value) != true)) {
                    this.LGroundField = value;
                    this.RaisePropertyChanged("LGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LGroundOhmUnitId {
            get {
                return this.LGroundOhmUnitIdField;
            }
            set {
                if ((this.LGroundOhmUnitIdField.Equals(value) != true)) {
                    this.LGroundOhmUnitIdField = value;
                    this.RaisePropertyChanged("LGroundOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MGround {
            get {
                return this.MGroundField;
            }
            set {
                if ((this.MGroundField.Equals(value) != true)) {
                    this.MGroundField = value;
                    this.RaisePropertyChanged("MGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MGroundOhmUnitId {
            get {
                return this.MGroundOhmUnitIdField;
            }
            set {
                if ((this.MGroundOhmUnitIdField.Equals(value) != true)) {
                    this.MGroundOhmUnitIdField = value;
                    this.RaisePropertyChanged("MGroundOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherManufacturer {
            get {
                return this.OtherManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherManufacturerField, value) != true)) {
                    this.OtherManufacturerField = value;
                    this.RaisePropertyChanged("OtherManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> U1U2 {
            get {
                return this.U1U2Field;
            }
            set {
                if ((this.U1U2Field.Equals(value) != true)) {
                    this.U1U2Field = value;
                    this.RaisePropertyChanged("U1U2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UGround {
            get {
                return this.UGroundField;
            }
            set {
                if ((this.UGroundField.Equals(value) != true)) {
                    this.UGroundField = value;
                    this.RaisePropertyChanged("UGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UGroundOhmUnitId {
            get {
                return this.UGroundOhmUnitIdField;
            }
            set {
                if ((this.UGroundOhmUnitIdField.Equals(value) != true)) {
                    this.UGroundOhmUnitIdField = value;
                    this.RaisePropertyChanged("UGroundOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UV {
            get {
                return this.UVField;
            }
            set {
                if ((this.UVField.Equals(value) != true)) {
                    this.UVField = value;
                    this.RaisePropertyChanged("UV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UVOhmUnitId {
            get {
                return this.UVOhmUnitIdField;
            }
            set {
                if ((this.UVOhmUnitIdField.Equals(value) != true)) {
                    this.UVOhmUnitIdField = value;
                    this.RaisePropertyChanged("UVOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UW {
            get {
                return this.UWField;
            }
            set {
                if ((this.UWField.Equals(value) != true)) {
                    this.UWField = value;
                    this.RaisePropertyChanged("UW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UWOhmUnitId {
            get {
                return this.UWOhmUnitIdField;
            }
            set {
                if ((this.UWOhmUnitIdField.Equals(value) != true)) {
                    this.UWOhmUnitIdField = value;
                    this.RaisePropertyChanged("UWOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> V1V2 {
            get {
                return this.V1V2Field;
            }
            set {
                if ((this.V1V2Field.Equals(value) != true)) {
                    this.V1V2Field = value;
                    this.RaisePropertyChanged("V1V2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> VGround {
            get {
                return this.VGroundField;
            }
            set {
                if ((this.VGroundField.Equals(value) != true)) {
                    this.VGroundField = value;
                    this.RaisePropertyChanged("VGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VGroundOhmUnitId {
            get {
                return this.VGroundOhmUnitIdField;
            }
            set {
                if ((this.VGroundOhmUnitIdField.Equals(value) != true)) {
                    this.VGroundOhmUnitIdField = value;
                    this.RaisePropertyChanged("VGroundOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> VW {
            get {
                return this.VWField;
            }
            set {
                if ((this.VWField.Equals(value) != true)) {
                    this.VWField = value;
                    this.RaisePropertyChanged("VW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VWOhmUnitId {
            get {
                return this.VWOhmUnitIdField;
            }
            set {
                if ((this.VWOhmUnitIdField.Equals(value) != true)) {
                    this.VWOhmUnitIdField = value;
                    this.RaisePropertyChanged("VWOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasUniqueIdentifier {
            get {
                return this.VestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasUniqueIdentifierField, value) != true)) {
                    this.VestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("VestasUniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> W1W2 {
            get {
                return this.W1W2Field;
            }
            set {
                if ((this.W1W2Field.Equals(value) != true)) {
                    this.W1W2Field = value;
                    this.RaisePropertyChanged("W1W2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WGround {
            get {
                return this.WGroundField;
            }
            set {
                if ((this.WGroundField.Equals(value) != true)) {
                    this.WGroundField = value;
                    this.RaisePropertyChanged("WGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> WGroundOhmUnitId {
            get {
                return this.WGroundOhmUnitIdField;
            }
            set {
                if ((this.WGroundOhmUnitIdField.Equals(value) != true)) {
                    this.WGroundOhmUnitIdField = value;
                    this.RaisePropertyChanged("WGroundOhmUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strGeneratorMaxTemperatureResetDate {
            get {
                return this.strGeneratorMaxTemperatureResetDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strGeneratorMaxTemperatureResetDateField, value) != true)) {
                    this.strGeneratorMaxTemperatureResetDateField = value;
                    this.RaisePropertyChanged("strGeneratorMaxTemperatureResetDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageDataInfo", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ImageDataInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPlateTypeNotPossibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateTypeNotPossibleReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlateTypeNotPossible {
            get {
                return this.IsPlateTypeNotPossibleField;
            }
            set {
                if ((this.IsPlateTypeNotPossibleField.Equals(value) != true)) {
                    this.IsPlateTypeNotPossibleField = value;
                    this.RaisePropertyChanged("IsPlateTypeNotPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateTypeNotPossibleReason {
            get {
                return this.PlateTypeNotPossibleReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateTypeNotPossibleReasonField, value) != true)) {
                    this.PlateTypeNotPossibleReasonField = value;
                    this.RaisePropertyChanged("PlateTypeNotPossibleReason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportMainBearing", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportMainBearing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportMainBearingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingErrorLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MainBearingGreaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MainBearingLastLubricationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingLubricationOilTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingLubricationRunHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainBearingMechanicalOilPumpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingOilTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingRevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingRunHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainBearingSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainBearingTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasUniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strMainBearingLastLubricationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportMainBearingId {
            get {
                return this.ComponentInspectionReportMainBearingIdField;
            }
            set {
                if ((this.ComponentInspectionReportMainBearingIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportMainBearingIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportMainBearingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingClaimRelevantBooleanAnswerId {
            get {
                return this.MainBearingClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.MainBearingClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.MainBearingClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("MainBearingClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingErrorLocationId {
            get {
                return this.MainBearingErrorLocationIdField;
            }
            set {
                if ((this.MainBearingErrorLocationIdField.Equals(value) != true)) {
                    this.MainBearingErrorLocationIdField = value;
                    this.RaisePropertyChanged("MainBearingErrorLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MainBearingGrease {
            get {
                return this.MainBearingGreaseField;
            }
            set {
                if ((this.MainBearingGreaseField.Equals(value) != true)) {
                    this.MainBearingGreaseField = value;
                    this.RaisePropertyChanged("MainBearingGrease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MainBearingLastLubricationDate {
            get {
                return this.MainBearingLastLubricationDateField;
            }
            set {
                if ((this.MainBearingLastLubricationDateField.Equals(value) != true)) {
                    this.MainBearingLastLubricationDateField = value;
                    this.RaisePropertyChanged("MainBearingLastLubricationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingLubricationOilTypeId {
            get {
                return this.MainBearingLubricationOilTypeIdField;
            }
            set {
                if ((this.MainBearingLubricationOilTypeIdField.Equals(value) != true)) {
                    this.MainBearingLubricationOilTypeIdField = value;
                    this.RaisePropertyChanged("MainBearingLubricationOilTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingLubricationRunHours {
            get {
                return this.MainBearingLubricationRunHoursField;
            }
            set {
                if ((this.MainBearingLubricationRunHoursField.Equals(value) != true)) {
                    this.MainBearingLubricationRunHoursField = value;
                    this.RaisePropertyChanged("MainBearingLubricationRunHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingManufacturerId {
            get {
                return this.MainBearingManufacturerIdField;
            }
            set {
                if ((this.MainBearingManufacturerIdField.Equals(value) != true)) {
                    this.MainBearingManufacturerIdField = value;
                    this.RaisePropertyChanged("MainBearingManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainBearingMechanicalOilPump {
            get {
                return this.MainBearingMechanicalOilPumpField;
            }
            set {
                if ((object.ReferenceEquals(this.MainBearingMechanicalOilPumpField, value) != true)) {
                    this.MainBearingMechanicalOilPumpField = value;
                    this.RaisePropertyChanged("MainBearingMechanicalOilPump");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingOilTemperature {
            get {
                return this.MainBearingOilTemperatureField;
            }
            set {
                if ((this.MainBearingOilTemperatureField.Equals(value) != true)) {
                    this.MainBearingOilTemperatureField = value;
                    this.RaisePropertyChanged("MainBearingOilTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingRevision {
            get {
                return this.MainBearingRevisionField;
            }
            set {
                if ((this.MainBearingRevisionField.Equals(value) != true)) {
                    this.MainBearingRevisionField = value;
                    this.RaisePropertyChanged("MainBearingRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingRunHours {
            get {
                return this.MainBearingRunHoursField;
            }
            set {
                if ((this.MainBearingRunHoursField.Equals(value) != true)) {
                    this.MainBearingRunHoursField = value;
                    this.RaisePropertyChanged("MainBearingRunHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainBearingSerialNumber {
            get {
                return this.MainBearingSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MainBearingSerialNumberField, value) != true)) {
                    this.MainBearingSerialNumberField = value;
                    this.RaisePropertyChanged("MainBearingSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingTemperature {
            get {
                return this.MainBearingTemperatureField;
            }
            set {
                if ((this.MainBearingTemperatureField.Equals(value) != true)) {
                    this.MainBearingTemperatureField = value;
                    this.RaisePropertyChanged("MainBearingTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainBearingTypeId {
            get {
                return this.MainBearingTypeIdField;
            }
            set {
                if ((this.MainBearingTypeIdField.Equals(value) != true)) {
                    this.MainBearingTypeIdField = value;
                    this.RaisePropertyChanged("MainBearingTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasUniqueIdentifier {
            get {
                return this.VestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasUniqueIdentifierField, value) != true)) {
                    this.VestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("VestasUniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strMainBearingLastLubricationDate {
            get {
                return this.strMainBearingLastLubricationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strMainBearingLastLubricationDateField, value) != true)) {
                    this.strMainBearingLastLubricationDateField = value;
                    this.RaisePropertyChanged("strMainBearingLastLubricationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportSkiiP", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportSkiiP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportSkiiPIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP2MWV521BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP2MWV522BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP2MWV523BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP2MWV524BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP2MWV525BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP2MWV526BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV521BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV522BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV523BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV524xBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV524yBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV525xBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV525yBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV526xBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP3MWV526yBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP850KWV520BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP850KWV524BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP850KWV525BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiP850KWV526BooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SkiiPCauseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiPClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SkiiPNumberofComponentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPOtherDamagedComponentsReplacedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SkiiPQuantityOfFailedModulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportSkiiPFailedComponent[] SkiipFailedCompField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportSkiiPNewComponent[] SkiipNewCompField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportSkiiPId {
            get {
                return this.ComponentInspectionReportSkiiPIdField;
            }
            set {
                if ((this.ComponentInspectionReportSkiiPIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportSkiiPIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportSkiiPId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP2MWV521BooleanAnswerId {
            get {
                return this.SkiiP2MWV521BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP2MWV521BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP2MWV521BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP2MWV521BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP2MWV522BooleanAnswerId {
            get {
                return this.SkiiP2MWV522BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP2MWV522BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP2MWV522BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP2MWV522BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP2MWV523BooleanAnswerId {
            get {
                return this.SkiiP2MWV523BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP2MWV523BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP2MWV523BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP2MWV523BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP2MWV524BooleanAnswerId {
            get {
                return this.SkiiP2MWV524BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP2MWV524BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP2MWV524BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP2MWV524BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP2MWV525BooleanAnswerId {
            get {
                return this.SkiiP2MWV525BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP2MWV525BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP2MWV525BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP2MWV525BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP2MWV526BooleanAnswerId {
            get {
                return this.SkiiP2MWV526BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP2MWV526BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP2MWV526BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP2MWV526BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV521BooleanAnswerId {
            get {
                return this.SkiiP3MWV521BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV521BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV521BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV521BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV522BooleanAnswerId {
            get {
                return this.SkiiP3MWV522BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV522BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV522BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV522BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV523BooleanAnswerId {
            get {
                return this.SkiiP3MWV523BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV523BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV523BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV523BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV524xBooleanAnswerId {
            get {
                return this.SkiiP3MWV524xBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV524xBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV524xBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV524xBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV524yBooleanAnswerId {
            get {
                return this.SkiiP3MWV524yBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV524yBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV524yBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV524yBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV525xBooleanAnswerId {
            get {
                return this.SkiiP3MWV525xBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV525xBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV525xBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV525xBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV525yBooleanAnswerId {
            get {
                return this.SkiiP3MWV525yBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV525yBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV525yBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV525yBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV526xBooleanAnswerId {
            get {
                return this.SkiiP3MWV526xBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV526xBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV526xBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV526xBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP3MWV526yBooleanAnswerId {
            get {
                return this.SkiiP3MWV526yBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP3MWV526yBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP3MWV526yBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP3MWV526yBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP850KWV520BooleanAnswerId {
            get {
                return this.SkiiP850KWV520BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP850KWV520BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP850KWV520BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP850KWV520BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP850KWV524BooleanAnswerId {
            get {
                return this.SkiiP850KWV524BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP850KWV524BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP850KWV524BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP850KWV524BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP850KWV525BooleanAnswerId {
            get {
                return this.SkiiP850KWV525BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP850KWV525BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP850KWV525BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP850KWV525BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiP850KWV526BooleanAnswerId {
            get {
                return this.SkiiP850KWV526BooleanAnswerIdField;
            }
            set {
                if ((this.SkiiP850KWV526BooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiP850KWV526BooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiP850KWV526BooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SkiiPCauseId {
            get {
                return this.SkiiPCauseIdField;
            }
            set {
                if ((this.SkiiPCauseIdField.Equals(value) != true)) {
                    this.SkiiPCauseIdField = value;
                    this.RaisePropertyChanged("SkiiPCauseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiPClaimRelevantBooleanAnswerId {
            get {
                return this.SkiiPClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.SkiiPClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.SkiiPClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("SkiiPClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SkiiPNumberofComponents {
            get {
                return this.SkiiPNumberofComponentsField;
            }
            set {
                if ((this.SkiiPNumberofComponentsField.Equals(value) != true)) {
                    this.SkiiPNumberofComponentsField = value;
                    this.RaisePropertyChanged("SkiiPNumberofComponents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPOtherDamagedComponentsReplaced {
            get {
                return this.SkiiPOtherDamagedComponentsReplacedField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPOtherDamagedComponentsReplacedField, value) != true)) {
                    this.SkiiPOtherDamagedComponentsReplacedField = value;
                    this.RaisePropertyChanged("SkiiPOtherDamagedComponentsReplaced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SkiiPQuantityOfFailedModules {
            get {
                return this.SkiiPQuantityOfFailedModulesField;
            }
            set {
                if ((this.SkiiPQuantityOfFailedModulesField.Equals(value) != true)) {
                    this.SkiiPQuantityOfFailedModulesField = value;
                    this.RaisePropertyChanged("SkiiPQuantityOfFailedModules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportSkiiPFailedComponent[] SkiipFailedComp {
            get {
                return this.SkiipFailedCompField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiipFailedCompField, value) != true)) {
                    this.SkiipFailedCompField = value;
                    this.RaisePropertyChanged("SkiipFailedComp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportSkiiPNewComponent[] SkiipNewComp {
            get {
                return this.SkiipNewCompField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiipNewCompField, value) != true)) {
                    this.SkiipNewCompField = value;
                    this.RaisePropertyChanged("SkiipNewComp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportTransformer", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportTransformer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActionOnTransformerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BracketsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClimateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportTransformerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ConnectionBarsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HVCableConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HVCoilConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LVCableConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LVCoilConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MaxTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MaxTempResetDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SurgeArrestorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransformerArcDetectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransformerClaimRelevantBooleanAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransformerManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransformerSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VestasUniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strMaxTempResetDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActionOnTransformerId {
            get {
                return this.ActionOnTransformerIdField;
            }
            set {
                if ((this.ActionOnTransformerIdField.Equals(value) != true)) {
                    this.ActionOnTransformerIdField = value;
                    this.RaisePropertyChanged("ActionOnTransformerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BracketsId {
            get {
                return this.BracketsIdField;
            }
            set {
                if ((this.BracketsIdField.Equals(value) != true)) {
                    this.BracketsIdField = value;
                    this.RaisePropertyChanged("BracketsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClimateId {
            get {
                return this.ClimateIdField;
            }
            set {
                if ((this.ClimateIdField.Equals(value) != true)) {
                    this.ClimateIdField = value;
                    this.RaisePropertyChanged("ClimateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportTransformerId {
            get {
                return this.ComponentInspectionReportTransformerIdField;
            }
            set {
                if ((this.ComponentInspectionReportTransformerIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportTransformerIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportTransformerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConnectionBarsId {
            get {
                return this.ConnectionBarsIdField;
            }
            set {
                if ((this.ConnectionBarsIdField.Equals(value) != true)) {
                    this.ConnectionBarsIdField = value;
                    this.RaisePropertyChanged("ConnectionBarsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HVCableConditionId {
            get {
                return this.HVCableConditionIdField;
            }
            set {
                if ((this.HVCableConditionIdField.Equals(value) != true)) {
                    this.HVCableConditionIdField = value;
                    this.RaisePropertyChanged("HVCableConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HVCoilConditionId {
            get {
                return this.HVCoilConditionIdField;
            }
            set {
                if ((this.HVCoilConditionIdField.Equals(value) != true)) {
                    this.HVCoilConditionIdField = value;
                    this.RaisePropertyChanged("HVCoilConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LVCableConditionId {
            get {
                return this.LVCableConditionIdField;
            }
            set {
                if ((this.LVCableConditionIdField.Equals(value) != true)) {
                    this.LVCableConditionIdField = value;
                    this.RaisePropertyChanged("LVCableConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LVCoilConditionId {
            get {
                return this.LVCoilConditionIdField;
            }
            set {
                if ((this.LVCoilConditionIdField.Equals(value) != true)) {
                    this.LVCoilConditionIdField = value;
                    this.RaisePropertyChanged("LVCoilConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MaxTemp {
            get {
                return this.MaxTempField;
            }
            set {
                if ((this.MaxTempField.Equals(value) != true)) {
                    this.MaxTempField = value;
                    this.RaisePropertyChanged("MaxTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaxTempResetDate {
            get {
                return this.MaxTempResetDateField;
            }
            set {
                if ((this.MaxTempResetDateField.Equals(value) != true)) {
                    this.MaxTempResetDateField = value;
                    this.RaisePropertyChanged("MaxTempResetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SurgeArrestorId {
            get {
                return this.SurgeArrestorIdField;
            }
            set {
                if ((this.SurgeArrestorIdField.Equals(value) != true)) {
                    this.SurgeArrestorIdField = value;
                    this.RaisePropertyChanged("SurgeArrestorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransformerArcDetectionId {
            get {
                return this.TransformerArcDetectionIdField;
            }
            set {
                if ((this.TransformerArcDetectionIdField.Equals(value) != true)) {
                    this.TransformerArcDetectionIdField = value;
                    this.RaisePropertyChanged("TransformerArcDetectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TransformerClaimRelevantBooleanAnswerId {
            get {
                return this.TransformerClaimRelevantBooleanAnswerIdField;
            }
            set {
                if ((this.TransformerClaimRelevantBooleanAnswerIdField.Equals(value) != true)) {
                    this.TransformerClaimRelevantBooleanAnswerIdField = value;
                    this.RaisePropertyChanged("TransformerClaimRelevantBooleanAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransformerManufacturerId {
            get {
                return this.TransformerManufacturerIdField;
            }
            set {
                if ((this.TransformerManufacturerIdField.Equals(value) != true)) {
                    this.TransformerManufacturerIdField = value;
                    this.RaisePropertyChanged("TransformerManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransformerSerialNumber {
            get {
                return this.TransformerSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TransformerSerialNumberField, value) != true)) {
                    this.TransformerSerialNumberField = value;
                    this.RaisePropertyChanged("TransformerSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VestasUniqueIdentifier {
            get {
                return this.VestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.VestasUniqueIdentifierField, value) != true)) {
                    this.VestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("VestasUniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strMaxTempResetDate {
            get {
                return this.strMaxTempResetDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strMaxTempResetDateField, value) != true)) {
                    this.strMaxTempResetDateField = value;
                    this.RaisePropertyChanged("strMaxTempResetDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DyanamicDecision", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class DyanamicDecision : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AffectedBoltsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FlangNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlangeDamageIdentifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImidiateActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepeatedInspectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AffectedBolts {
            get {
                return this.AffectedBoltsField;
            }
            set {
                if ((this.AffectedBoltsField.Equals(value) != true)) {
                    this.AffectedBoltsField = value;
                    this.RaisePropertyChanged("AffectedBolts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Decision {
            get {
                return this.DecisionField;
            }
            set {
                if ((this.DecisionField.Equals(value) != true)) {
                    this.DecisionField = value;
                    this.RaisePropertyChanged("Decision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecisionId {
            get {
                return this.DecisionIdField;
            }
            set {
                if ((this.DecisionIdField.Equals(value) != true)) {
                    this.DecisionIdField = value;
                    this.RaisePropertyChanged("DecisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FlangNo {
            get {
                return this.FlangNoField;
            }
            set {
                if ((this.FlangNoField.Equals(value) != true)) {
                    this.FlangNoField = value;
                    this.RaisePropertyChanged("FlangNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FlangeDamageIdentified {
            get {
                return this.FlangeDamageIdentifiedField;
            }
            set {
                if ((this.FlangeDamageIdentifiedField.Equals(value) != true)) {
                    this.FlangeDamageIdentifiedField = value;
                    this.RaisePropertyChanged("FlangeDamageIdentified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImidiateActions {
            get {
                return this.ImidiateActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ImidiateActionsField, value) != true)) {
                    this.ImidiateActionsField = value;
                    this.RaisePropertyChanged("ImidiateActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionDesc {
            get {
                return this.InspectionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionDescField, value) != true)) {
                    this.InspectionDescField = value;
                    this.RaisePropertyChanged("InspectionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepeatedInspections {
            get {
                return this.RepeatedInspectionsField;
            }
            set {
                if ((this.RepeatedInspectionsField.Equals(value) != true)) {
                    this.RepeatedInspectionsField = value;
                    this.RaisePropertyChanged("RepeatedInspections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageData", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlangNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIOImageGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageDataStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewImageControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPlateTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlangNo {
            get {
                return this.FlangNoField;
            }
            set {
                if ((this.FlangNoField.Equals(value) != true)) {
                    this.FlangNoField = value;
                    this.RaisePropertyChanged("FlangNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormIOImageGUID {
            get {
                return this.FormIOImageGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIOImageGUIDField, value) != true)) {
                    this.FormIOImageGUIDField = value;
                    this.RaisePropertyChanged("FormIOImageGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageDataString {
            get {
                return this.ImageDataStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataStringField, value) != true)) {
                    this.ImageDataStringField = value;
                    this.RaisePropertyChanged("ImageDataString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageDescription {
            get {
                return this.ImageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDescriptionField, value) != true)) {
                    this.ImageDescriptionField = value;
                    this.RaisePropertyChanged("ImageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((this.ImageIdField.Equals(value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageOrder {
            get {
                return this.ImageOrderField;
            }
            set {
                if ((this.ImageOrderField.Equals(value) != true)) {
                    this.ImageOrderField = value;
                    this.RaisePropertyChanged("ImageOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionDesc {
            get {
                return this.InspectionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionDescField, value) != true)) {
                    this.InspectionDescField = value;
                    this.RaisePropertyChanged("InspectionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewImageControl {
            get {
                return this.IsNewImageControlField;
            }
            set {
                if ((this.IsNewImageControlField.Equals(value) != true)) {
                    this.IsNewImageControlField = value;
                    this.RaisePropertyChanged("IsNewImageControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlateType {
            get {
                return this.IsPlateTypeField;
            }
            set {
                if ((this.IsPlateTypeField.Equals(value) != true)) {
                    this.IsPlateTypeField = value;
                    this.RaisePropertyChanged("IsPlateType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportBladeRepairRecord", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportBladeRepairRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeAdditionalDocumentReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BladeAmbientTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeGlassSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeGlassSupplierBatchNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeHardenerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeHardenerTypeBatchNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BladeHardenerTypeExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BladeHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BladePostCureMaxTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BladePostCureMinTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeResinTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeResinTypeBatchNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BladeResinTypeExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeResinUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BladeSurfaceMaxTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BladeSurfaceMinTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeTotalCureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BladeTurnOffTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportBladeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportBladeRepairRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strBladeHardenerTypeExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strBladeResinTypeExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strBladeTurnOffTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeAdditionalDocumentReference {
            get {
                return this.BladeAdditionalDocumentReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeAdditionalDocumentReferenceField, value) != true)) {
                    this.BladeAdditionalDocumentReferenceField = value;
                    this.RaisePropertyChanged("BladeAdditionalDocumentReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BladeAmbientTemp {
            get {
                return this.BladeAmbientTempField;
            }
            set {
                if ((this.BladeAmbientTempField.Equals(value) != true)) {
                    this.BladeAmbientTempField = value;
                    this.RaisePropertyChanged("BladeAmbientTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeGlassSupplier {
            get {
                return this.BladeGlassSupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeGlassSupplierField, value) != true)) {
                    this.BladeGlassSupplierField = value;
                    this.RaisePropertyChanged("BladeGlassSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeGlassSupplierBatchNumbers {
            get {
                return this.BladeGlassSupplierBatchNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeGlassSupplierBatchNumbersField, value) != true)) {
                    this.BladeGlassSupplierBatchNumbersField = value;
                    this.RaisePropertyChanged("BladeGlassSupplierBatchNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeHardenerType {
            get {
                return this.BladeHardenerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeHardenerTypeField, value) != true)) {
                    this.BladeHardenerTypeField = value;
                    this.RaisePropertyChanged("BladeHardenerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeHardenerTypeBatchNumbers {
            get {
                return this.BladeHardenerTypeBatchNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeHardenerTypeBatchNumbersField, value) != true)) {
                    this.BladeHardenerTypeBatchNumbersField = value;
                    this.RaisePropertyChanged("BladeHardenerTypeBatchNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BladeHardenerTypeExpiryDate {
            get {
                return this.BladeHardenerTypeExpiryDateField;
            }
            set {
                if ((this.BladeHardenerTypeExpiryDateField.Equals(value) != true)) {
                    this.BladeHardenerTypeExpiryDateField = value;
                    this.RaisePropertyChanged("BladeHardenerTypeExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BladeHumidity {
            get {
                return this.BladeHumidityField;
            }
            set {
                if ((this.BladeHumidityField.Equals(value) != true)) {
                    this.BladeHumidityField = value;
                    this.RaisePropertyChanged("BladeHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BladePostCureMaxTemperature {
            get {
                return this.BladePostCureMaxTemperatureField;
            }
            set {
                if ((this.BladePostCureMaxTemperatureField.Equals(value) != true)) {
                    this.BladePostCureMaxTemperatureField = value;
                    this.RaisePropertyChanged("BladePostCureMaxTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BladePostCureMinTemperature {
            get {
                return this.BladePostCureMinTemperatureField;
            }
            set {
                if ((this.BladePostCureMinTemperatureField.Equals(value) != true)) {
                    this.BladePostCureMinTemperatureField = value;
                    this.RaisePropertyChanged("BladePostCureMinTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeResinType {
            get {
                return this.BladeResinTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeResinTypeField, value) != true)) {
                    this.BladeResinTypeField = value;
                    this.RaisePropertyChanged("BladeResinType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeResinTypeBatchNumbers {
            get {
                return this.BladeResinTypeBatchNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeResinTypeBatchNumbersField, value) != true)) {
                    this.BladeResinTypeBatchNumbersField = value;
                    this.RaisePropertyChanged("BladeResinTypeBatchNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BladeResinTypeExpiryDate {
            get {
                return this.BladeResinTypeExpiryDateField;
            }
            set {
                if ((this.BladeResinTypeExpiryDateField.Equals(value) != true)) {
                    this.BladeResinTypeExpiryDateField = value;
                    this.RaisePropertyChanged("BladeResinTypeExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeResinUsed {
            get {
                return this.BladeResinUsedField;
            }
            set {
                if ((this.BladeResinUsedField.Equals(value) != true)) {
                    this.BladeResinUsedField = value;
                    this.RaisePropertyChanged("BladeResinUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BladeSurfaceMaxTemperature {
            get {
                return this.BladeSurfaceMaxTemperatureField;
            }
            set {
                if ((this.BladeSurfaceMaxTemperatureField.Equals(value) != true)) {
                    this.BladeSurfaceMaxTemperatureField = value;
                    this.RaisePropertyChanged("BladeSurfaceMaxTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BladeSurfaceMinTemperature {
            get {
                return this.BladeSurfaceMinTemperatureField;
            }
            set {
                if ((this.BladeSurfaceMinTemperatureField.Equals(value) != true)) {
                    this.BladeSurfaceMinTemperatureField = value;
                    this.RaisePropertyChanged("BladeSurfaceMinTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeTotalCureTime {
            get {
                return this.BladeTotalCureTimeField;
            }
            set {
                if ((this.BladeTotalCureTimeField.Equals(value) != true)) {
                    this.BladeTotalCureTimeField = value;
                    this.RaisePropertyChanged("BladeTotalCureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BladeTurnOffTime {
            get {
                return this.BladeTurnOffTimeField;
            }
            set {
                if ((this.BladeTurnOffTimeField.Equals(value) != true)) {
                    this.BladeTurnOffTimeField = value;
                    this.RaisePropertyChanged("BladeTurnOffTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportBladeId {
            get {
                return this.ComponentInspectionReportBladeIdField;
            }
            set {
                if ((this.ComponentInspectionReportBladeIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportBladeIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportBladeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportBladeRepairRecordId {
            get {
                return this.ComponentInspectionReportBladeRepairRecordIdField;
            }
            set {
                if ((this.ComponentInspectionReportBladeRepairRecordIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportBladeRepairRecordIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportBladeRepairRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strBladeHardenerTypeExpiryDate {
            get {
                return this.strBladeHardenerTypeExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strBladeHardenerTypeExpiryDateField, value) != true)) {
                    this.strBladeHardenerTypeExpiryDateField = value;
                    this.RaisePropertyChanged("strBladeHardenerTypeExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strBladeResinTypeExpiryDate {
            get {
                return this.strBladeResinTypeExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.strBladeResinTypeExpiryDateField, value) != true)) {
                    this.strBladeResinTypeExpiryDateField = value;
                    this.RaisePropertyChanged("strBladeResinTypeExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strBladeTurnOffTime {
            get {
                return this.strBladeTurnOffTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.strBladeTurnOffTimeField, value) != true)) {
                    this.strBladeTurnOffTimeField = value;
                    this.RaisePropertyChanged("strBladeTurnOffTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportBladeDamage", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportBladeDamage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeDamagePlacementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeEdgeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BladeInspectionDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladePictureNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BladeRadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportBladeDamageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportBladeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DamageSeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> FormIOImageGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PictureOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeDamagePlacementId {
            get {
                return this.BladeDamagePlacementIdField;
            }
            set {
                if ((this.BladeDamagePlacementIdField.Equals(value) != true)) {
                    this.BladeDamagePlacementIdField = value;
                    this.RaisePropertyChanged("BladeDamagePlacementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeDescription {
            get {
                return this.BladeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeDescriptionField, value) != true)) {
                    this.BladeDescriptionField = value;
                    this.RaisePropertyChanged("BladeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeEdgeId {
            get {
                return this.BladeEdgeIdField;
            }
            set {
                if ((this.BladeEdgeIdField.Equals(value) != true)) {
                    this.BladeEdgeIdField = value;
                    this.RaisePropertyChanged("BladeEdgeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BladeInspectionDataId {
            get {
                return this.BladeInspectionDataIdField;
            }
            set {
                if ((this.BladeInspectionDataIdField.Equals(value) != true)) {
                    this.BladeInspectionDataIdField = value;
                    this.RaisePropertyChanged("BladeInspectionDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladePictureNumber {
            get {
                return this.BladePictureNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BladePictureNumberField, value) != true)) {
                    this.BladePictureNumberField = value;
                    this.RaisePropertyChanged("BladePictureNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BladeRadius {
            get {
                return this.BladeRadiusField;
            }
            set {
                if ((this.BladeRadiusField.Equals(value) != true)) {
                    this.BladeRadiusField = value;
                    this.RaisePropertyChanged("BladeRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportBladeDamageId {
            get {
                return this.ComponentInspectionReportBladeDamageIdField;
            }
            set {
                if ((this.ComponentInspectionReportBladeDamageIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportBladeDamageIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportBladeDamageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportBladeId {
            get {
                return this.ComponentInspectionReportBladeIdField;
            }
            set {
                if ((this.ComponentInspectionReportBladeIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportBladeIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportBladeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DamageSeverity {
            get {
                return this.DamageSeverityField;
            }
            set {
                if ((this.DamageSeverityField.Equals(value) != true)) {
                    this.DamageSeverityField = value;
                    this.RaisePropertyChanged("DamageSeverity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> FormIOImageGUID {
            get {
                return this.FormIOImageGUIDField;
            }
            set {
                if ((this.FormIOImageGUIDField.Equals(value) != true)) {
                    this.FormIOImageGUIDField = value;
                    this.RaisePropertyChanged("FormIOImageGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PictureOrder {
            get {
                return this.PictureOrderField;
            }
            set {
                if ((this.PictureOrderField.Equals(value) != true)) {
                    this.PictureOrderField = value;
                    this.RaisePropertyChanged("PictureOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportSkiiPFailedComponent", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportSkiiPFailedComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportSkiiPFailedComponentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportSkiiPIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPFailedComponentSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPFailedComponentVestasItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPFailedComponentVestasUniqueIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportSkiiPFailedComponentId {
            get {
                return this.ComponentInspectionReportSkiiPFailedComponentIdField;
            }
            set {
                if ((this.ComponentInspectionReportSkiiPFailedComponentIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportSkiiPFailedComponentIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportSkiiPFailedComponentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportSkiiPId {
            get {
                return this.ComponentInspectionReportSkiiPIdField;
            }
            set {
                if ((this.ComponentInspectionReportSkiiPIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportSkiiPIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportSkiiPId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPFailedComponentSerialNumber {
            get {
                return this.SkiiPFailedComponentSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPFailedComponentSerialNumberField, value) != true)) {
                    this.SkiiPFailedComponentSerialNumberField = value;
                    this.RaisePropertyChanged("SkiiPFailedComponentSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPFailedComponentVestasItemNumber {
            get {
                return this.SkiiPFailedComponentVestasItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPFailedComponentVestasItemNumberField, value) != true)) {
                    this.SkiiPFailedComponentVestasItemNumberField = value;
                    this.RaisePropertyChanged("SkiiPFailedComponentVestasItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPFailedComponentVestasUniqueIdentifier {
            get {
                return this.SkiiPFailedComponentVestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPFailedComponentVestasUniqueIdentifierField, value) != true)) {
                    this.SkiiPFailedComponentVestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("SkiiPFailedComponentVestasUniqueIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportSkiiPNewComponent", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportSkiiPNewComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportSkiiPIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportSkiiPNewComponentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPNewComponentSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPNewComponentVestasItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkiiPNewComponentVestasUniqueIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportSkiiPId {
            get {
                return this.ComponentInspectionReportSkiiPIdField;
            }
            set {
                if ((this.ComponentInspectionReportSkiiPIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportSkiiPIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportSkiiPId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportSkiiPNewComponentId {
            get {
                return this.ComponentInspectionReportSkiiPNewComponentIdField;
            }
            set {
                if ((this.ComponentInspectionReportSkiiPNewComponentIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportSkiiPNewComponentIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportSkiiPNewComponentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPNewComponentSerialNumber {
            get {
                return this.SkiiPNewComponentSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPNewComponentSerialNumberField, value) != true)) {
                    this.SkiiPNewComponentSerialNumberField = value;
                    this.RaisePropertyChanged("SkiiPNewComponentSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPNewComponentVestasItemNumber {
            get {
                return this.SkiiPNewComponentVestasItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPNewComponentVestasItemNumberField, value) != true)) {
                    this.SkiiPNewComponentVestasItemNumberField = value;
                    this.RaisePropertyChanged("SkiiPNewComponentVestasItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkiiPNewComponentVestasUniqueIdentifier {
            get {
                return this.SkiiPNewComponentVestasUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.SkiiPNewComponentVestasUniqueIdentifierField, value) != true)) {
                    this.SkiiPNewComponentVestasUniqueIdentifierField = value;
                    this.RaisePropertyChanged("SkiiPNewComponentVestasUniqueIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gir", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Gir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisOfMeasurmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisOfPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassificationOfDamageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport ComponentInspectionReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] ComponentInspectionReportDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsAndRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.GirFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralSerialNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GirCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GirDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes SearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TurbineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisOfMeasurments {
            get {
                return this.AnalysisOfMeasurmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisOfMeasurmentsField, value) != true)) {
                    this.AnalysisOfMeasurmentsField = value;
                    this.RaisePropertyChanged("AnalysisOfMeasurments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisOfPicture {
            get {
                return this.AnalysisOfPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisOfPictureField, value) != true)) {
                    this.AnalysisOfPictureField = value;
                    this.RaisePropertyChanged("AnalysisOfPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirIDs {
            get {
                return this.CirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIDsField, value) != true)) {
                    this.CirIDsField = value;
                    this.RaisePropertyChanged("CirIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassificationOfDamage {
            get {
                return this.ClassificationOfDamageField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationOfDamageField, value) != true)) {
                    this.ClassificationOfDamageField = value;
                    this.RaisePropertyChanged("ClassificationOfDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport ComponentInspectionReport {
            get {
                return this.ComponentInspectionReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportField, value) != true)) {
                    this.ComponentInspectionReportField = value;
                    this.RaisePropertyChanged("ComponentInspectionReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] ComponentInspectionReportDetails {
            get {
                return this.ComponentInspectionReportDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportDetailsField, value) != true)) {
                    this.ComponentInspectionReportDetailsField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionsAndRecommendations {
            get {
                return this.ConclusionsAndRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsAndRecommendationsField, value) != true)) {
                    this.ConclusionsAndRecommendationsField = value;
                    this.RaisePropertyChanged("ConclusionsAndRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.GirFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralSerialNos {
            get {
                return this.GeneralSerialNosField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralSerialNosField, value) != true)) {
                    this.GeneralSerialNosField = value;
                    this.RaisePropertyChanged("GeneralSerialNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GirCode {
            get {
                return this.GirCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GirCodeField, value) != true)) {
                    this.GirCodeField = value;
                    this.RaisePropertyChanged("GirCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GirDataID {
            get {
                return this.GirDataIDField;
            }
            set {
                if ((this.GirDataIDField.Equals(value) != true)) {
                    this.GirDataIDField = value;
                    this.RaisePropertyChanged("GirDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes Search {
            get {
                return this.SearchField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchField, value) != true)) {
                    this.SearchField = value;
                    this.RaisePropertyChanged("Search");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TurbineID {
            get {
                return this.TurbineIDField;
            }
            set {
                if ((this.TurbineIDField.Equals(value) != true)) {
                    this.TurbineIDField = value;
                    this.RaisePropertyChanged("TurbineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCreated {
            get {
                return this.strCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.strCreatedField, value) != true)) {
                    this.strCreatedField = value;
                    this.RaisePropertyChanged("strCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GirFile", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GirFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUrl {
            get {
                return this.DownloadUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUrlField, value) != true)) {
                    this.DownloadUrlField = value;
                    this.RaisePropertyChanged("DownloadUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GirDataDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GirDataDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisOfMeasurmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisOfPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassificationOfDamageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsAndRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralSerialNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GirCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GirDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WordBytesUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisOfMeasurments {
            get {
                return this.AnalysisOfMeasurmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisOfMeasurmentsField, value) != true)) {
                    this.AnalysisOfMeasurmentsField = value;
                    this.RaisePropertyChanged("AnalysisOfMeasurments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisOfPicture {
            get {
                return this.AnalysisOfPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisOfPictureField, value) != true)) {
                    this.AnalysisOfPictureField = value;
                    this.RaisePropertyChanged("AnalysisOfPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirIDs {
            get {
                return this.CirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIDsField, value) != true)) {
                    this.CirIDsField = value;
                    this.RaisePropertyChanged("CirIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassificationOfDamage {
            get {
                return this.ClassificationOfDamageField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationOfDamageField, value) != true)) {
                    this.ClassificationOfDamageField = value;
                    this.RaisePropertyChanged("ClassificationOfDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionsAndRecommendations {
            get {
                return this.ConclusionsAndRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsAndRecommendationsField, value) != true)) {
                    this.ConclusionsAndRecommendationsField = value;
                    this.RaisePropertyChanged("ConclusionsAndRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralSerialNos {
            get {
                return this.GeneralSerialNosField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralSerialNosField, value) != true)) {
                    this.GeneralSerialNosField = value;
                    this.RaisePropertyChanged("GeneralSerialNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GirCode {
            get {
                return this.GirCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GirCodeField, value) != true)) {
                    this.GirCodeField = value;
                    this.RaisePropertyChanged("GirCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GirDataID {
            get {
                return this.GirDataIDField;
            }
            set {
                if ((this.GirDataIDField.Equals(value) != true)) {
                    this.GirDataIDField = value;
                    this.RaisePropertyChanged("GirDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterId {
            get {
                return this.MasterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterIdField, value) != true)) {
                    this.MasterIdField = value;
                    this.RaisePropertyChanged("MasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Partition {
            get {
                return this.PartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionField, value) != true)) {
                    this.PartitionField = value;
                    this.RaisePropertyChanged("Partition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineId {
            get {
                return this.TurbineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineIdField, value) != true)) {
                    this.TurbineIdField = value;
                    this.RaisePropertyChanged("TurbineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri WordBytesUrl {
            get {
                return this.WordBytesUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WordBytesUrlField, value) != true)) {
                    this.WordBytesUrlField = value;
                    this.RaisePropertyChanged("WordBytesUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gbx", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Gbx : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMSAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport ComponentInspectionReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] ComponentInspectionReportDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsAndRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.GbxFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GbxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GbxDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxSerialNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OilAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes SearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TurbineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Analysis {
            get {
                return this.AnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisField, value) != true)) {
                    this.AnalysisField = value;
                    this.RaisePropertyChanged("Analysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMSAnalysis {
            get {
                return this.CMSAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.CMSAnalysisField, value) != true)) {
                    this.CMSAnalysisField = value;
                    this.RaisePropertyChanged("CMSAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirIDs {
            get {
                return this.CirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIDsField, value) != true)) {
                    this.CirIDsField = value;
                    this.RaisePropertyChanged("CirIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport ComponentInspectionReport {
            get {
                return this.ComponentInspectionReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportField, value) != true)) {
                    this.ComponentInspectionReportField = value;
                    this.RaisePropertyChanged("ComponentInspectionReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] ComponentInspectionReportDetails {
            get {
                return this.ComponentInspectionReportDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentInspectionReportDetailsField, value) != true)) {
                    this.ComponentInspectionReportDetailsField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionsAndRecommendations {
            get {
                return this.ConclusionsAndRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsAndRecommendationsField, value) != true)) {
                    this.ConclusionsAndRecommendationsField = value;
                    this.RaisePropertyChanged("ConclusionsAndRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.GbxFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GbxCode {
            get {
                return this.GbxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GbxCodeField, value) != true)) {
                    this.GbxCodeField = value;
                    this.RaisePropertyChanged("GbxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GbxDataID {
            get {
                return this.GbxDataIDField;
            }
            set {
                if ((this.GbxDataIDField.Equals(value) != true)) {
                    this.GbxDataIDField = value;
                    this.RaisePropertyChanged("GbxDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxSerialNos {
            get {
                return this.GearboxSerialNosField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxSerialNosField, value) != true)) {
                    this.GearboxSerialNosField = value;
                    this.RaisePropertyChanged("GearboxSerialNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OilAnalysis {
            get {
                return this.OilAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.OilAnalysisField, value) != true)) {
                    this.OilAnalysisField = value;
                    this.RaisePropertyChanged("OilAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes Search {
            get {
                return this.SearchField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchField, value) != true)) {
                    this.SearchField = value;
                    this.RaisePropertyChanged("Search");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TurbineID {
            get {
                return this.TurbineIDField;
            }
            set {
                if ((this.TurbineIDField.Equals(value) != true)) {
                    this.TurbineIDField = value;
                    this.RaisePropertyChanged("TurbineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCreated {
            get {
                return this.strCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.strCreatedField, value) != true)) {
                    this.strCreatedField = value;
                    this.RaisePropertyChanged("strCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GbxFile", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GbxFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUrl {
            get {
                return this.DownloadUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUrlField, value) != true)) {
                    this.DownloadUrlField = value;
                    this.RaisePropertyChanged("DownloadUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GBXirDataDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GBXirDataDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMSAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsAndRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GbxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GbxDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearboxSerialNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OilAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WordBytesUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Analysis {
            get {
                return this.AnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisField, value) != true)) {
                    this.AnalysisField = value;
                    this.RaisePropertyChanged("Analysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMSAnalysis {
            get {
                return this.CMSAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.CMSAnalysisField, value) != true)) {
                    this.CMSAnalysisField = value;
                    this.RaisePropertyChanged("CMSAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirIDs {
            get {
                return this.CirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIDsField, value) != true)) {
                    this.CirIDsField = value;
                    this.RaisePropertyChanged("CirIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionsAndRecommendations {
            get {
                return this.ConclusionsAndRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsAndRecommendationsField, value) != true)) {
                    this.ConclusionsAndRecommendationsField = value;
                    this.RaisePropertyChanged("ConclusionsAndRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GbxCode {
            get {
                return this.GbxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GbxCodeField, value) != true)) {
                    this.GbxCodeField = value;
                    this.RaisePropertyChanged("GbxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GbxDataID {
            get {
                return this.GbxDataIDField;
            }
            set {
                if ((this.GbxDataIDField.Equals(value) != true)) {
                    this.GbxDataIDField = value;
                    this.RaisePropertyChanged("GbxDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearboxSerialNos {
            get {
                return this.GearboxSerialNosField;
            }
            set {
                if ((object.ReferenceEquals(this.GearboxSerialNosField, value) != true)) {
                    this.GearboxSerialNosField = value;
                    this.RaisePropertyChanged("GearboxSerialNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OilAnalysis {
            get {
                return this.OilAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.OilAnalysisField, value) != true)) {
                    this.OilAnalysisField = value;
                    this.RaisePropertyChanged("OilAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineId {
            get {
                return this.TurbineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineIdField, value) != true)) {
                    this.TurbineIdField = value;
                    this.RaisePropertyChanged("TurbineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri WordBytesUrl {
            get {
                return this.WordBytesUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WordBytesUrlField, value) != true)) {
                    this.WordBytesUrlField = value;
                    this.RaisePropertyChanged("WordBytesUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FirstNotificationDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.Models")]
    [System.SerializableAttribute()]
    public partial class FirstNotificationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CommisioningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountryISOIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditInitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FailureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FirstNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> QueuedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SBUIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SendOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SitenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineMatrixIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WordBytesUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CirAttachmentsDetails cirAttachmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommisioningDate {
            get {
                return this.CommisioningDateField;
            }
            set {
                if ((this.CommisioningDateField.Equals(value) != true)) {
                    this.CommisioningDateField = value;
                    this.RaisePropertyChanged("CommisioningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentType {
            get {
                return this.ComponentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentTypeField, value) != true)) {
                    this.ComponentTypeField = value;
                    this.RaisePropertyChanged("ComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CountryISOId {
            get {
                return this.CountryISOIdField;
            }
            set {
                if ((this.CountryISOIdField.Equals(value) != true)) {
                    this.CountryISOIdField = value;
                    this.RaisePropertyChanged("CountryISOId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EditDate {
            get {
                return this.EditDateField;
            }
            set {
                if ((this.EditDateField.Equals(value) != true)) {
                    this.EditDateField = value;
                    this.RaisePropertyChanged("EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditInitials {
            get {
                return this.EditInitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.EditInitialsField, value) != true)) {
                    this.EditInitialsField = value;
                    this.RaisePropertyChanged("EditInitials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FailureDate {
            get {
                return this.FailureDateField;
            }
            set {
                if ((this.FailureDateField.Equals(value) != true)) {
                    this.FailureDateField = value;
                    this.RaisePropertyChanged("FailureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FirstNotificationId {
            get {
                return this.FirstNotificationIdField;
            }
            set {
                if ((this.FirstNotificationIdField.Equals(value) != true)) {
                    this.FirstNotificationIdField = value;
                    this.RaisePropertyChanged("FirstNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerID {
            get {
                return this.ManufacturerIDField;
            }
            set {
                if ((this.ManufacturerIDField.Equals(value) != true)) {
                    this.ManufacturerIDField = value;
                    this.RaisePropertyChanged("ManufacturerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> QueuedOn {
            get {
                return this.QueuedOnField;
            }
            set {
                if ((this.QueuedOnField.Equals(value) != true)) {
                    this.QueuedOnField = value;
                    this.RaisePropertyChanged("QueuedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SBUId {
            get {
                return this.SBUIdField;
            }
            set {
                if ((this.SBUIdField.Equals(value) != true)) {
                    this.SBUIdField = value;
                    this.RaisePropertyChanged("SBUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendOn {
            get {
                return this.SendOnField;
            }
            set {
                if ((this.SendOnField.Equals(value) != true)) {
                    this.SendOnField = value;
                    this.RaisePropertyChanged("SendOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sitename {
            get {
                return this.SitenameField;
            }
            set {
                if ((object.ReferenceEquals(this.SitenameField, value) != true)) {
                    this.SitenameField = value;
                    this.RaisePropertyChanged("Sitename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineMatrixId {
            get {
                return this.TurbineMatrixIdField;
            }
            set {
                if ((this.TurbineMatrixIdField.Equals(value) != true)) {
                    this.TurbineMatrixIdField = value;
                    this.RaisePropertyChanged("TurbineMatrixId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((this.TurbineNumberField.Equals(value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri WordBytesUrl {
            get {
                return this.WordBytesUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WordBytesUrlField, value) != true)) {
                    this.WordBytesUrlField = value;
                    this.RaisePropertyChanged("WordBytesUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CirAttachmentsDetails cirAttachments {
            get {
                return this.cirAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.cirAttachmentsField, value) != true)) {
                    this.cirAttachmentsField = value;
                    this.RaisePropertyChanged("cirAttachments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirAttachmentsDetails", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CirAttachmentsDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BinaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CirAttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BinaryData {
            get {
                return this.BinaryDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BinaryDataField, value) != true)) {
                    this.BinaryDataField = value;
                    this.RaisePropertyChanged("BinaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CirAttachmentId {
            get {
                return this.CirAttachmentIdField;
            }
            set {
                if ((this.CirAttachmentIdField.Equals(value) != true)) {
                    this.CirAttachmentIdField = value;
                    this.RaisePropertyChanged("CirAttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedField, value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecondNotificationDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.Models")]
    [System.SerializableAttribute()]
    public partial class SecondNotificationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CIMCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CIRTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SBUIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SecondNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SendOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineMatrixIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WordBytesUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CirAttachmentsDetails cirAttachmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CIMCaseNumber {
            get {
                return this.CIMCaseNumberField;
            }
            set {
                if ((this.CIMCaseNumberField.Equals(value) != true)) {
                    this.CIMCaseNumberField = value;
                    this.RaisePropertyChanged("CIMCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CIRTemplate {
            get {
                return this.CIRTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.CIRTemplateField, value) != true)) {
                    this.CIRTemplateField = value;
                    this.RaisePropertyChanged("CIRTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentType {
            get {
                return this.ComponentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentTypeField, value) != true)) {
                    this.ComponentTypeField = value;
                    this.RaisePropertyChanged("ComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ManufacturerId {
            get {
                return this.ManufacturerIdField;
            }
            set {
                if ((this.ManufacturerIdField.Equals(value) != true)) {
                    this.ManufacturerIdField = value;
                    this.RaisePropertyChanged("ManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SBUId {
            get {
                return this.SBUIdField;
            }
            set {
                if ((this.SBUIdField.Equals(value) != true)) {
                    this.SBUIdField = value;
                    this.RaisePropertyChanged("SBUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecondNotificationId {
            get {
                return this.SecondNotificationIdField;
            }
            set {
                if ((this.SecondNotificationIdField.Equals(value) != true)) {
                    this.SecondNotificationIdField = value;
                    this.RaisePropertyChanged("SecondNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendOn {
            get {
                return this.SendOnField;
            }
            set {
                if ((this.SendOnField.Equals(value) != true)) {
                    this.SendOnField = value;
                    this.RaisePropertyChanged("SendOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineMatrixId {
            get {
                return this.TurbineMatrixIdField;
            }
            set {
                if ((this.TurbineMatrixIdField.Equals(value) != true)) {
                    this.TurbineMatrixIdField = value;
                    this.RaisePropertyChanged("TurbineMatrixId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((this.TurbineNumberField.Equals(value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri WordBytesUrl {
            get {
                return this.WordBytesUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WordBytesUrlField, value) != true)) {
                    this.WordBytesUrlField = value;
                    this.RaisePropertyChanged("WordBytesUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CirAttachmentsDetails cirAttachments {
            get {
                return this.cirAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.cirAttachmentsField, value) != true)) {
                    this.cirAttachmentsField = value;
                    this.RaisePropertyChanged("cirAttachments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectNotificationDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.Models")]
    [System.SerializableAttribute()]
    public partial class RejectNotificationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CIMCaseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoPathFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RejectNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SBUIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SendOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WordBytesUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CirAttachmentsDetails cirAttachmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CIMCaseNo {
            get {
                return this.CIMCaseNoField;
            }
            set {
                if ((this.CIMCaseNoField.Equals(value) != true)) {
                    this.CIMCaseNoField = value;
                    this.RaisePropertyChanged("CIMCaseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportId {
            get {
                return this.ComponentInspectionReportIdField;
            }
            set {
                if ((this.ComponentInspectionReportIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InfoPathFilename {
            get {
                return this.InfoPathFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoPathFilenameField, value) != true)) {
                    this.InfoPathFilenameField = value;
                    this.RaisePropertyChanged("InfoPathFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Received {
            get {
                return this.ReceivedField;
            }
            set {
                if ((this.ReceivedField.Equals(value) != true)) {
                    this.ReceivedField = value;
                    this.RaisePropertyChanged("Received");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RejectNotificationId {
            get {
                return this.RejectNotificationIdField;
            }
            set {
                if ((this.RejectNotificationIdField.Equals(value) != true)) {
                    this.RejectNotificationIdField = value;
                    this.RaisePropertyChanged("RejectNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectedBy {
            get {
                return this.RejectedByField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectedByField, value) != true)) {
                    this.RejectedByField = value;
                    this.RaisePropertyChanged("RejectedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SBUId {
            get {
                return this.SBUIdField;
            }
            set {
                if ((this.SBUIdField.Equals(value) != true)) {
                    this.SBUIdField = value;
                    this.RaisePropertyChanged("SBUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendOn {
            get {
                return this.SendOnField;
            }
            set {
                if ((this.SendOnField.Equals(value) != true)) {
                    this.SendOnField = value;
                    this.RaisePropertyChanged("SendOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendTo {
            get {
                return this.SendToField;
            }
            set {
                if ((object.ReferenceEquals(this.SendToField, value) != true)) {
                    this.SendToField = value;
                    this.RaisePropertyChanged("SendTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((this.TurbineNumberField.Equals(value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri WordBytesUrl {
            get {
                return this.WordBytesUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WordBytesUrlField, value) != true)) {
                    this.WordBytesUrlField = value;
                    this.RaisePropertyChanged("WordBytesUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CirAttachmentsDetails cirAttachments {
            get {
                return this.cirAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.cirAttachmentsField, value) != true)) {
                    this.cirAttachmentsField = value;
                    this.RaisePropertyChanged("cirAttachments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirMasterData", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirMasterData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.MasterKeyValue[] MasterKeyValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.MasterKeyValue[] MasterKeyValue {
            get {
                return this.MasterKeyValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterKeyValueField, value) != true)) {
                    this.MasterKeyValueField = value;
                    this.RaisePropertyChanged("MasterKeyValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterKeyValue", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MasterKeyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string keyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string keyType {
            get {
                return this.keyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.keyTypeField, value) != true)) {
                    this.keyTypeField = value;
                    this.RaisePropertyChanged("keyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterKeyData", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DAL")]
    [System.SerializableAttribute()]
    public partial class MasterKeyData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyID {
            get {
                return this.KeyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyIDField, value) != true)) {
                    this.KeyIDField = value;
                    this.RaisePropertyChanged("KeyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyName {
            get {
                return this.KeyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyNameField, value) != true)) {
                    this.KeyNameField = value;
                    this.RaisePropertyChanged("KeyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyValue {
            get {
                return this.KeyValueField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyValueField, value) != true)) {
                    this.KeyValueField = value;
                    this.RaisePropertyChanged("KeyValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PDFModel", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PDFModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIRNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CIRStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIRTemplateGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PDFDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PDFIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIRName {
            get {
                return this.CIRNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CIRNameField, value) != true)) {
                    this.CIRNameField = value;
                    this.RaisePropertyChanged("CIRName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CIRState {
            get {
                return this.CIRStateField;
            }
            set {
                if ((this.CIRStateField.Equals(value) != true)) {
                    this.CIRStateField = value;
                    this.RaisePropertyChanged("CIRState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIRTemplateGUID {
            get {
                return this.CIRTemplateGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CIRTemplateGUIDField, value) != true)) {
                    this.CIRTemplateGUIDField = value;
                    this.RaisePropertyChanged("CIRTemplateGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFData {
            get {
                return this.PDFDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFDataField, value) != true)) {
                    this.PDFDataField = value;
                    this.RaisePropertyChanged("PDFData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PDFId {
            get {
                return this.PDFIdField;
            }
            set {
                if ((this.PDFIdField.Equals(value) != true)) {
                    this.PDFIdField = value;
                    this.RaisePropertyChanged("PDFId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirMasterTable", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirMasterTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirCIMCaseTable", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirCIMCaseTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string labelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc {
            get {
                return this.descField;
            }
            set {
                if ((object.ReferenceEquals(this.descField, value) != true)) {
                    this.descField = value;
                    this.RaisePropertyChanged("desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string label {
            get {
                return this.labelField;
            }
            set {
                if ((object.ReferenceEquals(this.labelField, value) != true)) {
                    this.labelField = value;
                    this.RaisePropertyChanged("label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirResponse", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class CirResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIMCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDetailMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.TurbineItem TurbineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIMCaseNumber {
            get {
                return this.CIMCaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CIMCaseNumberField, value) != true)) {
                    this.CIMCaseNumberField = value;
                    this.RaisePropertyChanged("CIMCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirID {
            get {
                return this.CirIDField;
            }
            set {
                if ((this.CirIDField.Equals(value) != true)) {
                    this.CirIDField = value;
                    this.RaisePropertyChanged("CirID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirName {
            get {
                return this.CirNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CirNameField, value) != true)) {
                    this.CirNameField = value;
                    this.RaisePropertyChanged("CirName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerExceptionMessage {
            get {
                return this.InnerExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionMessageField, value) != true)) {
                    this.InnerExceptionMessageField = value;
                    this.RaisePropertyChanged("InnerExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDetailMessage {
            get {
                return this.StatusDetailMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDetailMessageField, value) != true)) {
                    this.StatusDetailMessageField = value;
                    this.RaisePropertyChanged("StatusDetailMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.TurbineItem Turbine {
            get {
                return this.TurbineField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineField, value) != true)) {
                    this.TurbineField = value;
                    this.RaisePropertyChanged("Turbine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TurbineItem", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class TurbineItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NominelPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PowerRegulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RotorDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmallGeneratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemperatureVariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VoltageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyField, value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkVersion {
            get {
                return this.MarkVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkVersionField, value) != true)) {
                    this.MarkVersionField = value;
                    this.RaisePropertyChanged("MarkVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NominelPower {
            get {
                return this.NominelPowerField;
            }
            set {
                if ((object.ReferenceEquals(this.NominelPowerField, value) != true)) {
                    this.NominelPowerField = value;
                    this.RaisePropertyChanged("NominelPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PowerRegulation {
            get {
                return this.PowerRegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerRegulationField, value) != true)) {
                    this.PowerRegulationField = value;
                    this.RaisePropertyChanged("PowerRegulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RotorDiameter {
            get {
                return this.RotorDiameterField;
            }
            set {
                if ((object.ReferenceEquals(this.RotorDiameterField, value) != true)) {
                    this.RotorDiameterField = value;
                    this.RaisePropertyChanged("RotorDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmallGenerator {
            get {
                return this.SmallGeneratorField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallGeneratorField, value) != true)) {
                    this.SmallGeneratorField = value;
                    this.RaisePropertyChanged("SmallGenerator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemperatureVariant {
            get {
                return this.TemperatureVariantField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureVariantField, value) != true)) {
                    this.TemperatureVariantField = value;
                    this.RaisePropertyChanged("TemperatureVariant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineID {
            get {
                return this.TurbineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineIDField, value) != true)) {
                    this.TurbineIDField = value;
                    this.RaisePropertyChanged("TurbineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineType {
            get {
                return this.TurbineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineTypeField, value) != true)) {
                    this.TurbineTypeField = value;
                    this.RaisePropertyChanged("TurbineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Voltage {
            get {
                return this.VoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageField, value) != true)) {
                    this.VoltageField = value;
                    this.RaisePropertyChanged("Voltage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirQuickSearch", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.CIR")]
    [System.SerializableAttribute()]
    public partial class CirQuickSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CIMCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentInspectionReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SBUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBUNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes SearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CIMCaseNumber {
            get {
                return this.CIMCaseNumberField;
            }
            set {
                if ((this.CIMCaseNumberField.Equals(value) != true)) {
                    this.CIMCaseNumberField = value;
                    this.RaisePropertyChanged("CIMCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirID {
            get {
                return this.CirIDField;
            }
            set {
                if ((this.CirIDField.Equals(value) != true)) {
                    this.CirIDField = value;
                    this.RaisePropertyChanged("CirID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentInspectionReportTypeId {
            get {
                return this.ComponentInspectionReportTypeIdField;
            }
            set {
                if ((this.ComponentInspectionReportTypeIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportTypeIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReportTypeId {
            get {
                return this.ReportTypeIdField;
            }
            set {
                if ((this.ReportTypeIdField.Equals(value) != true)) {
                    this.ReportTypeIdField = value;
                    this.RaisePropertyChanged("ReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RunStatusField, value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SBU {
            get {
                return this.SBUField;
            }
            set {
                if ((this.SBUField.Equals(value) != true)) {
                    this.SBUField = value;
                    this.RaisePropertyChanged("SBU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBUName {
            get {
                return this.SBUNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SBUNameField, value) != true)) {
                    this.SBUNameField = value;
                    this.RaisePropertyChanged("SBUName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.SearchAttributes Search {
            get {
                return this.SearchField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchField, value) != true)) {
                    this.SearchField = value;
                    this.RaisePropertyChanged("Search");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((this.TurbineNumberField.Equals(value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineType {
            get {
                return this.TurbineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineTypeField, value) != true)) {
                    this.TurbineTypeField = value;
                    this.RaisePropertyChanged("TurbineType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentInspectionReportType", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ComponentInspectionReportType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StandardTexts", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class StandardTexts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ComponentInspectionReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallFunction {
            get {
                return this.CallFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.CallFunctionField, value) != true)) {
                    this.CallFunctionField = value;
                    this.RaisePropertyChanged("CallFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ComponentInspectionReportTypeId {
            get {
                return this.ComponentInspectionReportTypeIdField;
            }
            set {
                if ((this.ComponentInspectionReportTypeIdField.Equals(value) != true)) {
                    this.ComponentInspectionReportTypeIdField = value;
                    this.RaisePropertyChanged("ComponentInspectionReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogType", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.ErrorHandling")]
    public enum LogType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogList", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class LogList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordsPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortColumnIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPageNumber {
            get {
                return this.CurrentPageNumberField;
            }
            set {
                if ((this.CurrentPageNumberField.Equals(value) != true)) {
                    this.CurrentPageNumberField = value;
                    this.RaisePropertyChanged("CurrentPageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogFromDate {
            get {
                return this.LogFromDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LogFromDateField, value) != true)) {
                    this.LogFromDateField = value;
                    this.RaisePropertyChanged("LogFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogToDate {
            get {
                return this.LogToDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LogToDateField, value) != true)) {
                    this.LogToDateField = value;
                    this.RaisePropertyChanged("LogToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordsPerPage {
            get {
                return this.RecordsPerPageField;
            }
            set {
                if ((this.RecordsPerPageField.Equals(value) != true)) {
                    this.RecordsPerPageField = value;
                    this.RaisePropertyChanged("RecordsPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortColumnIndex {
            get {
                return this.SortColumnIndexField;
            }
            set {
                if ((this.SortColumnIndexField.Equals(value) != true)) {
                    this.SortColumnIndexField = value;
                    this.RaisePropertyChanged("SortColumnIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordCount {
            get {
                return this.TotalRecordCountField;
            }
            set {
                if ((this.TotalRecordCountField.Equals(value) != true)) {
                    this.TotalRecordCountField = value;
                    this.RaisePropertyChanged("TotalRecordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedbackType", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FeedbackType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feedback", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Feedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnviromentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeedbackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FeedbackTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enviroment {
            get {
                return this.EnviromentField;
            }
            set {
                if ((object.ReferenceEquals(this.EnviromentField, value) != true)) {
                    this.EnviromentField = value;
                    this.RaisePropertyChanged("Enviroment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeedbackType {
            get {
                return this.FeedbackTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackTypeField, value) != true)) {
                    this.FeedbackTypeField = value;
                    this.RaisePropertyChanged("FeedbackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FeedbackTypeId {
            get {
                return this.FeedbackTypeIdField;
            }
            set {
                if ((this.FeedbackTypeIdField.Equals(value) != true)) {
                    this.FeedbackTypeIdField = value;
                    this.RaisePropertyChanged("FeedbackTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Severity", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Severity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInformations", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ServiceInformations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SeverityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExpired {
            get {
                return this.IsExpiredField;
            }
            set {
                if ((this.IsExpiredField.Equals(value) != true)) {
                    this.IsExpiredField = value;
                    this.RaisePropertyChanged("IsExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SeverityId {
            get {
                return this.SeverityIdField;
            }
            set {
                if ((this.SeverityIdField.Equals(value) != true)) {
                    this.SeverityIdField = value;
                    this.RaisePropertyChanged("SeverityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeverityName {
            get {
                return this.SeverityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityNameField, value) != true)) {
                    this.SeverityNameField = value;
                    this.RaisePropertyChanged("SeverityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrFromDate {
            get {
                return this.StrFromDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StrFromDateField, value) != true)) {
                    this.StrFromDateField = value;
                    this.RaisePropertyChanged("StrFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrToDate {
            get {
                return this.StrToDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StrToDateField, value) != true)) {
                    this.StrToDateField = value;
                    this.RaisePropertyChanged("StrToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirViewData", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirViewData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.FieldItem[] FieldMappingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CirViewFields FieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ViewFilter FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GBXInspectionApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GeneralInspectionApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InspectionApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ViewQuickFilter QuickFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuickFilterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ViewQuickFilter[] QuickFilterListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultsPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ViewSorter SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CirViewData.ViewType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.CirViewDDList[] ViewDetailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.FieldItem[] FieldMapping {
            get {
                return this.FieldMappingField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldMappingField, value) != true)) {
                    this.FieldMappingField = value;
                    this.RaisePropertyChanged("FieldMapping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CirViewFields Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ViewFilter Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GBXInspectionApplicable {
            get {
                return this.GBXInspectionApplicableField;
            }
            set {
                if ((this.GBXInspectionApplicableField.Equals(value) != true)) {
                    this.GBXInspectionApplicableField = value;
                    this.RaisePropertyChanged("GBXInspectionApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GeneralInspectionApplicable {
            get {
                return this.GeneralInspectionApplicableField;
            }
            set {
                if ((this.GeneralInspectionApplicableField.Equals(value) != true)) {
                    this.GeneralInspectionApplicableField = value;
                    this.RaisePropertyChanged("GeneralInspectionApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InspectionApplicable {
            get {
                return this.InspectionApplicableField;
            }
            set {
                if ((this.InspectionApplicableField.Equals(value) != true)) {
                    this.InspectionApplicableField = value;
                    this.RaisePropertyChanged("InspectionApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ViewQuickFilter QuickFilter {
            get {
                return this.QuickFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.QuickFilterField, value) != true)) {
                    this.QuickFilterField = value;
                    this.RaisePropertyChanged("QuickFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuickFilterId {
            get {
                return this.QuickFilterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.QuickFilterIdField, value) != true)) {
                    this.QuickFilterIdField = value;
                    this.RaisePropertyChanged("QuickFilterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ViewQuickFilter[] QuickFilterList {
            get {
                return this.QuickFilterListField;
            }
            set {
                if ((object.ReferenceEquals(this.QuickFilterListField, value) != true)) {
                    this.QuickFilterListField = value;
                    this.RaisePropertyChanged("QuickFilterList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultsPerPage {
            get {
                return this.ResultsPerPageField;
            }
            set {
                if ((this.ResultsPerPageField.Equals(value) != true)) {
                    this.ResultsPerPageField = value;
                    this.RaisePropertyChanged("ResultsPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ViewSorter Sort {
            get {
                return this.SortField;
            }
            set {
                if ((object.ReferenceEquals(this.SortField, value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CirViewData.ViewType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.CirViewDDList[] ViewDetailList {
            get {
                return this.ViewDetailListField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewDetailListField, value) != true)) {
                    this.ViewDetailListField = value;
                    this.RaisePropertyChanged("ViewDetailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewId {
            get {
                return this.ViewIdField;
            }
            set {
                if ((this.ViewIdField.Equals(value) != true)) {
                    this.ViewIdField = value;
                    this.RaisePropertyChanged("ViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CirViewData.ViewType", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
        public enum ViewType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Public = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Private = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            System = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MigrationError = 4,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirViewFields", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirViewFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.FieldItem[] FieldItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.FieldItem[] FieldItems {
            get {
                return this.FieldItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldItemsField, value) != true)) {
                    this.FieldItemsField = value;
                    this.RaisePropertyChanged("FieldItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewFilter", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ViewFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ViewFilterItem[] FilterItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MatchAllField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ViewFilterItem[] FilterItems {
            get {
                return this.FilterItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterItemsField, value) != true)) {
                    this.FilterItemsField = value;
                    this.RaisePropertyChanged("FilterItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MatchAll {
            get {
                return this.MatchAllField;
            }
            set {
                if ((this.MatchAllField.Equals(value) != true)) {
                    this.MatchAllField = value;
                    this.RaisePropertyChanged("MatchAll");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ViewFilter.MatchType", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
        public enum MatchType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Equal = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotEqual = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            In = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotIn = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Contains = 5,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewQuickFilter", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ViewQuickFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.FieldItem FieldItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.FieldItem FieldItem {
            get {
                return this.FieldItemField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldItemField, value) != true)) {
                    this.FieldItemField = value;
                    this.RaisePropertyChanged("FieldItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewSorter", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ViewSorter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AscendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.FieldItem FieldItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Ascending {
            get {
                return this.AscendingField;
            }
            set {
                if ((this.AscendingField.Equals(value) != true)) {
                    this.AscendingField = value;
                    this.RaisePropertyChanged("Ascending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.FieldItem FieldItem {
            get {
                return this.FieldItemField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldItemField, value) != true)) {
                    this.FieldItemField = value;
                    this.RaisePropertyChanged("FieldItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldItem", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FieldItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnDisplayName {
            get {
                return this.ColumnDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnDisplayNameField, value) != true)) {
                    this.ColumnDisplayNameField = value;
                    this.RaisePropertyChanged("ColumnDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirViewDDList", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirViewDDList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GBXInspectionApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GeneralInspectionApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InspectionAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ViewIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GBXInspectionApplicable {
            get {
                return this.GBXInspectionApplicableField;
            }
            set {
                if ((this.GBXInspectionApplicableField.Equals(value) != true)) {
                    this.GBXInspectionApplicableField = value;
                    this.RaisePropertyChanged("GBXInspectionApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GeneralInspectionApplicable {
            get {
                return this.GeneralInspectionApplicableField;
            }
            set {
                if ((this.GeneralInspectionApplicableField.Equals(value) != true)) {
                    this.GeneralInspectionApplicableField = value;
                    this.RaisePropertyChanged("GeneralInspectionApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InspectionAvailable {
            get {
                return this.InspectionAvailableField;
            }
            set {
                if ((this.InspectionAvailableField.Equals(value) != true)) {
                    this.InspectionAvailableField = value;
                    this.RaisePropertyChanged("InspectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ViewId {
            get {
                return this.ViewIdField;
            }
            set {
                if ((this.ViewIdField.Equals(value) != true)) {
                    this.ViewIdField = value;
                    this.RaisePropertyChanged("ViewId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewFilterItem", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ViewFilterItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.FieldItem FieldItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cir.Azure.MobileApp.Service.CirSyncService.ViewFilter.MatchType MatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.FieldItem FieldItem {
            get {
                return this.FieldItemField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldItemField, value) != true)) {
                    this.FieldItemField = value;
                    this.RaisePropertyChanged("FieldItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cir.Azure.MobileApp.Service.CirSyncService.ViewFilter.MatchType Match {
            get {
                return this.MatchField;
            }
            set {
                if ((this.MatchField.Equals(value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CIRList", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CIRList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CimCaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordsPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortColumnIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordCountApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordCountRejectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandType {
            get {
                return this.BrandTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandTypeField, value) != true)) {
                    this.BrandTypeField = value;
                    this.RaisePropertyChanged("BrandType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CimCase {
            get {
                return this.CimCaseField;
            }
            set {
                if ((this.CimCaseField.Equals(value) != true)) {
                    this.CimCaseField = value;
                    this.RaisePropertyChanged("CimCase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirName {
            get {
                return this.CirNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CirNameField, value) != true)) {
                    this.CirNameField = value;
                    this.RaisePropertyChanged("CirName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentType {
            get {
                return this.ComponentTypeField;
            }
            set {
                if ((this.ComponentTypeField.Equals(value) != true)) {
                    this.ComponentTypeField = value;
                    this.RaisePropertyChanged("ComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPageNumber {
            get {
                return this.CurrentPageNumberField;
            }
            set {
                if ((this.CurrentPageNumberField.Equals(value) != true)) {
                    this.CurrentPageNumberField = value;
                    this.RaisePropertyChanged("CurrentPageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordsPerPage {
            get {
                return this.RecordsPerPageField;
            }
            set {
                if ((this.RecordsPerPageField.Equals(value) != true)) {
                    this.RecordsPerPageField = value;
                    this.RaisePropertyChanged("RecordsPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((this.RunStatusField.Equals(value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBU {
            get {
                return this.SBUField;
            }
            set {
                if ((object.ReferenceEquals(this.SBUField, value) != true)) {
                    this.SBUField = value;
                    this.RaisePropertyChanged("SBU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortColumnIndex {
            get {
                return this.SortColumnIndexField;
            }
            set {
                if ((this.SortColumnIndexField.Equals(value) != true)) {
                    this.SortColumnIndexField = value;
                    this.RaisePropertyChanged("SortColumnIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordCount {
            get {
                return this.TotalRecordCountField;
            }
            set {
                if ((this.TotalRecordCountField.Equals(value) != true)) {
                    this.TotalRecordCountField = value;
                    this.RaisePropertyChanged("TotalRecordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordCountApprove {
            get {
                return this.TotalRecordCountApproveField;
            }
            set {
                if ((this.TotalRecordCountApproveField.Equals(value) != true)) {
                    this.TotalRecordCountApproveField = value;
                    this.RaisePropertyChanged("TotalRecordCountApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordCountReject {
            get {
                return this.TotalRecordCountRejectField;
            }
            set {
                if ((this.TotalRecordCountRejectField.Equals(value) != true)) {
                    this.TotalRecordCountRejectField = value;
                    this.RaisePropertyChanged("TotalRecordCountReject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((this.TurbineNumberField.Equals(value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineType {
            get {
                return this.TurbineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineTypeField, value) != true)) {
                    this.TurbineTypeField = value;
                    this.RaisePropertyChanged("TurbineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewId {
            get {
                return this.ViewIdField;
            }
            set {
                if ((this.ViewIdField.Equals(value) != true)) {
                    this.ViewIdField = value;
                    this.RaisePropertyChanged("ViewId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirDataDetail", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirDataDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIMCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CirStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIOGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PdfDataUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIMCaseNumber {
            get {
                return this.CIMCaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CIMCaseNumberField, value) != true)) {
                    this.CIMCaseNumberField = value;
                    this.RaisePropertyChanged("CIMCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIdField, value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CirState {
            get {
                return this.CirStateField;
            }
            set {
                if ((this.CirStateField.Equals(value) != true)) {
                    this.CirStateField = value;
                    this.RaisePropertyChanged("CirState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentType {
            get {
                return this.ComponentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentTypeField, value) != true)) {
                    this.ComponentTypeField = value;
                    this.RaisePropertyChanged("ComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormIOGUID {
            get {
                return this.FormIOGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIOGUIDField, value) != true)) {
                    this.FormIOGUIDField = value;
                    this.RaisePropertyChanged("FormIOGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByField, value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PdfDataUri {
            get {
                return this.PdfDataUriField;
            }
            set {
                if ((object.ReferenceEquals(this.PdfDataUriField, value) != true)) {
                    this.PdfDataUriField = value;
                    this.RaisePropertyChanged("PdfDataUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateGUID {
            get {
                return this.TemplateGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateGUIDField, value) != true)) {
                    this.TemplateGUIDField = value;
                    this.RaisePropertyChanged("TemplateGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateVersion {
            get {
                return this.TemplateVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateVersionField, value) != true)) {
                    this.TemplateVersionField = value;
                    this.RaisePropertyChanged("TemplateVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineNumberField, value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineType {
            get {
                return this.TurbineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineTypeField, value) != true)) {
                    this.TurbineTypeField = value;
                    this.RaisePropertyChanged("TurbineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                if ((object.ReferenceEquals(this.commentField, value) != true)) {
                    this.commentField = value;
                    this.RaisePropertyChanged("comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.modifiedByField, value) != true)) {
                    this.modifiedByField = value;
                    this.RaisePropertyChanged("modifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirDataActionResponse", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirDataActionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirLogs", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirLogs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirLogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirLogId {
            get {
                return this.CirLogIdField;
            }
            set {
                if ((this.CirLogIdField.Equals(value) != true)) {
                    this.CirLogIdField = value;
                    this.RaisePropertyChanged("CirLogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirDataDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirDataDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CIMCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CIRstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CIMCaseNumber {
            get {
                return this.CIMCaseNumberField;
            }
            set {
                if ((this.CIMCaseNumberField.Equals(value) != true)) {
                    this.CIMCaseNumberField = value;
                    this.RaisePropertyChanged("CIMCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CIRstate {
            get {
                return this.CIRstateField;
            }
            set {
                if ((this.CIRstateField.Equals(value) != true)) {
                    this.CIRstateField = value;
                    this.RaisePropertyChanged("CIRstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentType {
            get {
                return this.ComponentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentTypeField, value) != true)) {
                    this.ComponentTypeField = value;
                    this.RaisePropertyChanged("ComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineNumber {
            get {
                return this.TurbineNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineNumberField, value) != true)) {
                    this.TurbineNumberField = value;
                    this.RaisePropertyChanged("TurbineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineType {
            get {
                return this.TurbineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineTypeField, value) != true)) {
                    this.TurbineTypeField = value;
                    this.RaisePropertyChanged("TurbineType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirCommentHistorys", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirCommentHistorys : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirCommentHistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirCommentHistoryId {
            get {
                return this.CirCommentHistoryIdField;
            }
            set {
                if ((this.CirCommentHistoryIdField.Equals(value) != true)) {
                    this.CirCommentHistoryIdField = value;
                    this.RaisePropertyChanged("CirCommentHistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirPDFResponse", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirPDFResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUrl {
            get {
                return this.DownloadUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUrlField, value) != true)) {
                    this.DownloadUrlField = value;
                    this.RaisePropertyChanged("DownloadUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BirDataDetails", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class BirDataDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BirDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BladeSerialNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CirIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsAndRecommendationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnnualInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDFStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawMaterialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepairingSolutionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurbineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WordBytesUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WordDocStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirCode {
            get {
                return this.BirCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BirCodeField, value) != true)) {
                    this.BirCodeField = value;
                    this.RaisePropertyChanged("BirCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BirDataID {
            get {
                return this.BirDataIDField;
            }
            set {
                if ((this.BirDataIDField.Equals(value) != true)) {
                    this.BirDataIDField = value;
                    this.RaisePropertyChanged("BirDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BladeSerialNos {
            get {
                return this.BladeSerialNosField;
            }
            set {
                if ((object.ReferenceEquals(this.BladeSerialNosField, value) != true)) {
                    this.BladeSerialNosField = value;
                    this.RaisePropertyChanged("BladeSerialNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CirIDs {
            get {
                return this.CirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CirIDsField, value) != true)) {
                    this.CirIDsField = value;
                    this.RaisePropertyChanged("CirIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionsAndRecommendations {
            get {
                return this.ConclusionsAndRecommendationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsAndRecommendationsField, value) != true)) {
                    this.ConclusionsAndRecommendationsField = value;
                    this.RaisePropertyChanged("ConclusionsAndRecommendations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnnualInspection {
            get {
                return this.IsAnnualInspectionField;
            }
            set {
                if ((this.IsAnnualInspectionField.Equals(value) != true)) {
                    this.IsAnnualInspectionField = value;
                    this.RaisePropertyChanged("IsAnnualInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterId {
            get {
                return this.MasterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterIdField, value) != true)) {
                    this.MasterIdField = value;
                    this.RaisePropertyChanged("MasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDFStatus {
            get {
                return this.PDFStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFStatusField, value) != true)) {
                    this.PDFStatusField = value;
                    this.RaisePropertyChanged("PDFStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Partition {
            get {
                return this.PartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionField, value) != true)) {
                    this.PartitionField = value;
                    this.RaisePropertyChanged("Partition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawMaterials {
            get {
                return this.RawMaterialsField;
            }
            set {
                if ((object.ReferenceEquals(this.RawMaterialsField, value) != true)) {
                    this.RawMaterialsField = value;
                    this.RaisePropertyChanged("RawMaterials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepairingSolutions {
            get {
                return this.RepairingSolutionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RepairingSolutionsField, value) != true)) {
                    this.RepairingSolutionsField = value;
                    this.RaisePropertyChanged("RepairingSolutions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TurbineId {
            get {
                return this.TurbineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TurbineIdField, value) != true)) {
                    this.TurbineIdField = value;
                    this.RaisePropertyChanged("TurbineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri WordBytesUrl {
            get {
                return this.WordBytesUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WordBytesUrlField, value) != true)) {
                    this.WordBytesUrlField = value;
                    this.RaisePropertyChanged("WordBytesUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WordDocStatus {
            get {
                return this.WordDocStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.WordDocStatusField, value) != true)) {
                    this.WordDocStatusField = value;
                    this.RaisePropertyChanged("WordDocStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CirRevision", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CirRevision : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CirIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CirStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplatedRevisionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirDataId {
            get {
                return this.CirDataIdField;
            }
            set {
                if ((this.CirDataIdField.Equals(value) != true)) {
                    this.CirDataIdField = value;
                    this.RaisePropertyChanged("CirDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CirId {
            get {
                return this.CirIdField;
            }
            set {
                if ((this.CirIdField.Equals(value) != true)) {
                    this.CirIdField = value;
                    this.RaisePropertyChanged("CirId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CirState {
            get {
                return this.CirStateField;
            }
            set {
                if ((this.CirStateField.Equals(value) != true)) {
                    this.CirStateField = value;
                    this.RaisePropertyChanged("CirState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditedBy {
            get {
                return this.EditedByField;
            }
            set {
                if ((object.ReferenceEquals(this.EditedByField, value) != true)) {
                    this.EditedByField = value;
                    this.RaisePropertyChanged("EditedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedOn {
            get {
                return this.EditedOnField;
            }
            set {
                if ((this.EditedOnField.Equals(value) != true)) {
                    this.EditedOnField = value;
                    this.RaisePropertyChanged("EditedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByField, value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplatedRevisionId {
            get {
                return this.TemplatedRevisionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatedRevisionIdField, value) != true)) {
                    this.TemplatedRevisionIdField = value;
                    this.RaisePropertyChanged("TemplatedRevisionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Cir.Sync.Services.AdvanceSearch")]
    [System.SerializableAttribute()]
    public partial class Brand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandIdField, value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CirSyncService.ISyncService")]
    public interface ISyncService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DoAdvanceSearch", ReplyAction="http://tempuri.org/ISyncService/DoAdvanceSearchResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel DoAdvanceSearch(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DoAdvanceSearch", ReplyAction="http://tempuri.org/ISyncService/DoAdvanceSearchResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> DoAdvanceSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/LoadProfile", ReplyAction="http://tempuri.org/ISyncService/LoadProfileResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel LoadProfile(long ProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/LoadProfile", ReplyAction="http://tempuri.org/ISyncService/LoadProfileResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> LoadProfileAsync(long ProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteProfile", ReplyAction="http://tempuri.org/ISyncService/DeleteProfileResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel DeleteProfile(long ProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteProfile", ReplyAction="http://tempuri.org/ISyncService/DeleteProfileResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> DeleteProfileAsync(long ProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveProfile", ReplyAction="http://tempuri.org/ISyncService/SaveProfileResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel SaveProfile(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveProfile", ReplyAction="http://tempuri.org/ISyncService/SaveProfileResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> SaveProfileAsync(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateTurbineNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateTurbineNumberResponse")]
        bool ValidateTurbineNumber(string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateTurbineNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateTurbineNumberResponse")]
        System.Threading.Tasks.Task<bool> ValidateTurbineNumberAsync(string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateGetTurbineData", ReplyAction="http://tempuri.org/ISyncService/ValidateGetTurbineDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.TurbineProperties ValidateGetTurbineData(string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateGetTurbineData", ReplyAction="http://tempuri.org/ISyncService/ValidateGetTurbineDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.TurbineProperties> ValidateGetTurbineDataAsync(string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateCIMCaseNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateCIMCaseNumberResponse")]
        bool ValidateCIMCaseNumber(string CIMCaseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateCIMCaseNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateCIMCaseNumberResponse")]
        System.Threading.Tasks.Task<bool> ValidateCIMCaseNumberAsync(string CIMCaseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateServiceReportNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateServiceReportNumberResponse")]
        bool ValidateServiceReportNumber(string ServiceReportNumber, string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateServiceReportNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateServiceReportNumberResponse")]
        System.Threading.Tasks.Task<bool> ValidateServiceReportNumberAsync(string ServiceReportNumber, string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateServiceNotificationNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateServiceNotificationNumberResponse")]
        bool ValidateServiceNotificationNumber(string ServiceNotificationNumber, string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ValidateServiceNotificationNumber", ReplyAction="http://tempuri.org/ISyncService/ValidateServiceNotificationNumberResponse")]
        System.Threading.Tasks.Task<bool> ValidateServiceNotificationNumberAsync(string ServiceNotificationNumber, string TurbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UnlockCirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/UnlockCirDataByCirIDResponse")]
        bool UnlockCirDataByCirID(long CirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UnlockCirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/UnlockCirDataByCirIDResponse")]
        System.Threading.Tasks.Task<bool> UnlockCirDataByCirIDAsync(long CirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/LockCirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/LockCirDataByCirIDResponse")]
        bool LockCirDataByCirID(long CirID, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/LockCirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/LockCirDataByCirIDResponse")]
        System.Threading.Tasks.Task<bool> LockCirDataByCirIDAsync(long CirID, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirStateByCirIDs", ReplyAction="http://tempuri.org/ISyncService/GetCirStateByCirIDsResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[] GetCirStateByCirIDs(Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[] CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirStateByCirIDs", ReplyAction="http://tempuri.org/ISyncService/GetCirStateByCirIDsResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[]> GetCirStateByCirIDsAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[] CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetManufacturer", ReplyAction="http://tempuri.org/ISyncService/GetManufacturerResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer GetManufacturer(int type, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetManufacturer", ReplyAction="http://tempuri.org/ISyncService/GetManufacturerResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer> GetManufacturerAsync(int type, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetManufacturerList", ReplyAction="http://tempuri.org/ISyncService/GetManufacturerListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ManufacturerList GetManufacturerList(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetManufacturerList", ReplyAction="http://tempuri.org/ISyncService/GetManufacturerListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ManufacturerList> GetManufacturerListAsync(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteManufacturer", ReplyAction="http://tempuri.org/ISyncService/DeleteManufacturerResponse")]
        bool DeleteManufacturer(int type, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteManufacturer", ReplyAction="http://tempuri.org/ISyncService/DeleteManufacturerResponse")]
        System.Threading.Tasks.Task<bool> DeleteManufacturerAsync(int type, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveManufacturer", ReplyAction="http://tempuri.org/ISyncService/SaveManufacturerResponse")]
        bool SaveManufacturer(Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveManufacturer", ReplyAction="http://tempuri.org/ISyncService/SaveManufacturerResponse")]
        System.Threading.Tasks.Task<bool> SaveManufacturerAsync(Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetHotlist", ReplyAction="http://tempuri.org/ISyncService/GetHotlistResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Hotlist GetHotlist(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetHotlist", ReplyAction="http://tempuri.org/ISyncService/GetHotlistResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Hotlist> GetHotlistAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllHotlist", ReplyAction="http://tempuri.org/ISyncService/GetAllHotlistResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Hotlist[] GetAllHotlist();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllHotlist", ReplyAction="http://tempuri.org/ISyncService/GetAllHotlistResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Hotlist[]> GetAllHotlistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveHotList", ReplyAction="http://tempuri.org/ISyncService/SaveHotListResponse")]
        bool SaveHotList(Cir.Azure.MobileApp.Service.CirSyncService.Hotlist hotlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveHotList", ReplyAction="http://tempuri.org/ISyncService/SaveHotListResponse")]
        System.Threading.Tasks.Task<bool> SaveHotListAsync(Cir.Azure.MobileApp.Service.CirSyncService.Hotlist hotlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteHotList", ReplyAction="http://tempuri.org/ISyncService/DeleteHotListResponse")]
        bool DeleteHotList(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteHotList", ReplyAction="http://tempuri.org/ISyncService/DeleteHotListResponse")]
        System.Threading.Tasks.Task<bool> DeleteHotListAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UploadDefectCategotization", ReplyAction="http://tempuri.org/ISyncService/UploadDefectCategotizationResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization UploadDefectCategotization(Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization dc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UploadDefectCategotization", ReplyAction="http://tempuri.org/ISyncService/UploadDefectCategotizationResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization> UploadDefectCategotizationAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization dc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveAttachment", ReplyAction="http://tempuri.org/ISyncService/SaveAttachmentResponse")]
        bool SaveAttachment(Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveAttachment", ReplyAction="http://tempuri.org/ISyncService/SaveAttachmentResponse")]
        System.Threading.Tasks.Task<bool> SaveAttachmentAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAttachments", ReplyAction="http://tempuri.org/ISyncService/GetAttachmentsResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments[] GetAttachments(long cirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAttachments", ReplyAction="http://tempuri.org/ISyncService/GetAttachmentsResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments[]> GetAttachmentsAsync(long cirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteAttachment", ReplyAction="http://tempuri.org/ISyncService/DeleteAttachmentResponse")]
        bool DeleteAttachment(long cirAttachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteAttachment", ReplyAction="http://tempuri.org/ISyncService/DeleteAttachmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteAttachmentAsync(long cirAttachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAttachment", ReplyAction="http://tempuri.org/ISyncService/GetAttachmentResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments GetAttachment(long cirAttachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAttachment", ReplyAction="http://tempuri.org/ISyncService/GetAttachmentResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments> GetAttachmentAsync(long cirAttachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SqlToCosmosDBMigrationLog", ReplyAction="http://tempuri.org/ISyncService/SqlToCosmosDBMigrationLogResponse")]
        bool SqlToCosmosDBMigrationLog(Cir.Azure.MobileApp.Service.CirSyncService.MigrationStepLogging objMigrationLogging);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SqlToCosmosDBMigrationLog", ReplyAction="http://tempuri.org/ISyncService/SqlToCosmosDBMigrationLogResponse")]
        System.Threading.Tasks.Task<bool> SqlToCosmosDBMigrationLogAsync(Cir.Azure.MobileApp.Service.CirSyncService.MigrationStepLogging objMigrationLogging);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBirMigrationData", ReplyAction="http://tempuri.org/ISyncService/GetBirMigrationDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir[] GetBirMigrationData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBirMigrationData", ReplyAction="http://tempuri.org/ISyncService/GetBirMigrationDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir[]> GetBirMigrationDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGirMigrationData", ReplyAction="http://tempuri.org/ISyncService/GetGirMigrationDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir[] GetGirMigrationData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGirMigrationData", ReplyAction="http://tempuri.org/ISyncService/GetGirMigrationDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir[]> GetGirMigrationDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGirDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveGirDataDetailstoCosmosDbResponse")]
        bool SaveGirDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.GirDataDetails objGirDataDetails, string strGirDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGirDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveGirDataDetailstoCosmosDbResponse")]
        System.Threading.Tasks.Task<bool> SaveGirDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.GirDataDetails objGirDataDetails, string strGirDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateNewGIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateNewGIRReportResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.GirFile GenerateNewGIRReport(long GirDataID, int languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateNewGIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateNewGIRReportResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.GirFile> GenerateNewGIRReportAsync(long GirDataID, int languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXirMigrationData", ReplyAction="http://tempuri.org/ISyncService/GetGBXirMigrationDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx[] GetGBXirMigrationData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXirMigrationData", ReplyAction="http://tempuri.org/ISyncService/GetGBXirMigrationDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx[]> GetGBXirMigrationDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGBXirDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveGBXirDataDetailstoCosmosDbResponse")]
        bool SaveGBXirDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.GBXirDataDetails objGirDataDetails, string strGirDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGBXirDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveGBXirDataDetailstoCosmosDbResponse")]
        System.Threading.Tasks.Task<bool> SaveGBXirDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.GBXirDataDetails objGirDataDetails, string strGirDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateNewGBXIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateNewGBXIRReportResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.GbxFile GenerateNewGBXIRReport(long GbxirDataID, int languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateNewGBXIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateNewGBXIRReportResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.GbxFile> GenerateNewGBXIRReportAsync(long GbxirDataID, int languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetNotifications", ReplyAction="http://tempuri.org/ISyncService/GetNotificationsResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails[] GetNotifications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetNotifications", ReplyAction="http://tempuri.org/ISyncService/GetNotificationsResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails[]> GetNotificationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveFirstNotificationDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveFirstNotificationDataDetailstoCosmosDbRespons" +
            "e")]
        bool SaveFirstNotificationDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails objFN, string fnDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveFirstNotificationDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveFirstNotificationDataDetailstoCosmosDbRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> SaveFirstNotificationDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails objFN, string fnDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetSecondNotificationList", ReplyAction="http://tempuri.org/ISyncService/GetSecondNotificationListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails[] GetSecondNotificationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetSecondNotificationList", ReplyAction="http://tempuri.org/ISyncService/GetSecondNotificationListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails[]> GetSecondNotificationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveSecondNotificationDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveSecondNotificationDataDetailstoCosmosDbRespon" +
            "se")]
        bool SaveSecondNotificationDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails objSN, string fnDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveSecondNotificationDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveSecondNotificationDataDetailstoCosmosDbRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> SaveSecondNotificationDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails objSN, string fnDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetRejectNotificationList", ReplyAction="http://tempuri.org/ISyncService/GetRejectNotificationListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails[] GetRejectNotificationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetRejectNotificationList", ReplyAction="http://tempuri.org/ISyncService/GetRejectNotificationListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails[]> GetRejectNotificationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveRejectNotificationDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveRejectNotificationDataDetailstoCosmosDbRespon" +
            "se")]
        bool SaveRejectNotificationDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails objRN, string fnDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveRejectNotificationDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveRejectNotificationDataDetailstoCosmosDbRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> SaveRejectNotificationDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails objRN, string fnDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendMail", ReplyAction="http://tempuri.org/ISyncService/SendMailResponse")]
        void SendMail(string cirName, long cirId, string CurrentUser, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendMail", ReplyAction="http://tempuri.org/ISyncService/SendMailResponse")]
        System.Threading.Tasks.Task SendMailAsync(string cirName, long cirId, string CurrentUser, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendMails", ReplyAction="http://tempuri.org/ISyncService/SendMailsResponse")]
        void SendMails(string ToEmail, string CcEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendMails", ReplyAction="http://tempuri.org/ISyncService/SendMailsResponse")]
        System.Threading.Tasks.Task SendMailsAsync(string ToEmail, string CcEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendCirNotificationMails", ReplyAction="http://tempuri.org/ISyncService/SendCirNotificationMailsResponse")]
        void SendCirNotificationMails(string[] ToEmails, string[] CCEmails, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendCirNotificationMails", ReplyAction="http://tempuri.org/ISyncService/SendCirNotificationMailsResponse")]
        System.Threading.Tasks.Task SendCirNotificationMailsAsync(string[] ToEmails, string[] CCEmails, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMasterData", ReplyAction="http://tempuri.org/ISyncService/GetMasterDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirMasterData[] GetMasterData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMasterData", ReplyAction="http://tempuri.org/ISyncService/GetMasterDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirMasterData[]> GetMasterDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMasterDataForCIRReport", ReplyAction="http://tempuri.org/ISyncService/GetMasterDataForCIRReportResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.MasterKeyData[] GetMasterDataForCIRReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMasterDataForCIRReport", ReplyAction="http://tempuri.org/ISyncService/GetMasterDataForCIRReportResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.MasterKeyData[]> GetMasterDataForCIRReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirPDFData", ReplyAction="http://tempuri.org/ISyncService/GetCirPDFDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.PDFModel GetCirPDFData(string cirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirPDFData", ReplyAction="http://tempuri.org/ISyncService/GetCirPDFDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.PDFModel> GetCirPDFDataAsync(string cirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMasterDataByName", ReplyAction="http://tempuri.org/ISyncService/GetMasterDataByNameResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirMasterTable[] GetMasterDataByName(string TableName, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMasterDataByName", ReplyAction="http://tempuri.org/ISyncService/GetMasterDataByNameResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirMasterTable[]> GetMasterDataByNameAsync(string TableName, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIMCaseData", ReplyAction="http://tempuri.org/ISyncService/GetCIMCaseDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirCIMCaseTable[] GetCIMCaseData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIMCaseData", ReplyAction="http://tempuri.org/ISyncService/GetCIMCaseDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCIMCaseTable[]> GetCIMCaseDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRData", ReplyAction="http://tempuri.org/ISyncService/SaveCIRDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirResponse SaveCIRData(Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport strJsnCir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRData", ReplyAction="http://tempuri.org/ISyncService/SaveCIRDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirResponse> SaveCIRDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport strJsnCir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UpdatePDFData", ReplyAction="http://tempuri.org/ISyncService/UpdatePDFDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirResponse UpdatePDFData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UpdatePDFData", ReplyAction="http://tempuri.org/ISyncService/UpdatePDFDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirResponse> UpdatePDFDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRDatabyCIRID", ReplyAction="http://tempuri.org/ISyncService/GetCIRDatabyCIRIDResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport GetCIRDatabyCIRID(long CIRID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRDatabyCIRID", ReplyAction="http://tempuri.org/ISyncService/GetCIRDatabyCIRIDResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport> GetCIRDatabyCIRIDAsync(long CIRID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/CirQuickSearch", ReplyAction="http://tempuri.org/ISyncService/CirQuickSearchResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] CirQuickSearch(Cir.Azure.MobileApp.Service.CirSyncService.CirQuickSearch SearchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/CirQuickSearch", ReplyAction="http://tempuri.org/ISyncService/CirQuickSearchResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[]> CirQuickSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirQuickSearch SearchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetComponentInspectionReportType", ReplyAction="http://tempuri.org/ISyncService/GetComponentInspectionReportTypeResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportType[] GetComponentInspectionReportType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetComponentInspectionReportType", ReplyAction="http://tempuri.org/ISyncService/GetComponentInspectionReportTypeResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportType[]> GetComponentInspectionReportTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetStandardText", ReplyAction="http://tempuri.org/ISyncService/GetStandardTextResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts[] GetStandardText(int CommonInspectionReportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetStandardText", ReplyAction="http://tempuri.org/ISyncService/GetStandardTextResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts[]> GetStandardTextAsync(int CommonInspectionReportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetStandardTextbyID", ReplyAction="http://tempuri.org/ISyncService/GetStandardTextbyIDResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts GetStandardTextbyID(long SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetStandardTextbyID", ReplyAction="http://tempuri.org/ISyncService/GetStandardTextbyIDResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts> GetStandardTextbyIDAsync(long SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveStandardTextData", ReplyAction="http://tempuri.org/ISyncService/SaveStandardTextDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts SaveStandardTextData(Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts strJsnStrTxt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveStandardTextData", ReplyAction="http://tempuri.org/ISyncService/SaveStandardTextDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts> SaveStandardTextDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts strJsnStrTxt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/BirSearch", ReplyAction="http://tempuri.org/ISyncService/BirSearchResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir[] BirSearch(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/BirSearch", ReplyAction="http://tempuri.org/ISyncService/BirSearchResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir[]> BirSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteBir", ReplyAction="http://tempuri.org/ISyncService/DeleteBirResponse")]
        bool DeleteBir(long BirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteBir", ReplyAction="http://tempuri.org/ISyncService/DeleteBirResponse")]
        System.Threading.Tasks.Task<bool> DeleteBirAsync(long BirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/BirFile", ReplyAction="http://tempuri.org/ISyncService/BirFileResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir BirFile(long BirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/BirFile", ReplyAction="http://tempuri.org/ISyncService/BirFileResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> BirFileAsync(long BirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/GetBirDataByCirIDResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir GetBirDataByCirID(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/GetBirDataByCirIDResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetBirDataByCirIDAsync(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetRelatedCirsByCirId", ReplyAction="http://tempuri.org/ISyncService/GetRelatedCirsByCirIdResponse")]
        string GetRelatedCirsByCirId(string cirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetRelatedCirsByCirId", ReplyAction="http://tempuri.org/ISyncService/GetRelatedCirsByCirIdResponse")]
        System.Threading.Tasks.Task<string> GetRelatedCirsByCirIdAsync(string cirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveBirData", ReplyAction="http://tempuri.org/ISyncService/SaveBirDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir SaveBirData(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveBirData", ReplyAction="http://tempuri.org/ISyncService/SaveBirDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> SaveBirDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirDataIdByCirID", ReplyAction="http://tempuri.org/ISyncService/GetCirDataIdByCirIDResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCirDataIdByCirID(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirDataIdByCirID", ReplyAction="http://tempuri.org/ISyncService/GetCirDataIdByCirIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCirDataIdByCirIDAsync(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GirSearch", ReplyAction="http://tempuri.org/ISyncService/GirSearchResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir[] GirSearch(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GirSearch", ReplyAction="http://tempuri.org/ISyncService/GirSearchResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir[]> GirSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteGir", ReplyAction="http://tempuri.org/ISyncService/DeleteGirResponse")]
        bool DeleteGir(long GirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteGir", ReplyAction="http://tempuri.org/ISyncService/DeleteGirResponse")]
        System.Threading.Tasks.Task<bool> DeleteGirAsync(long GirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GirFile", ReplyAction="http://tempuri.org/ISyncService/GirFileResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir GirFile(long GirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GirFile", ReplyAction="http://tempuri.org/ISyncService/GirFileResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GirFileAsync(long GirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/GetGirDataByCirIDResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir GetGirDataByCirID(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/GetGirDataByCirIDResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetGirDataByCirIDAsync(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGirData", ReplyAction="http://tempuri.org/ISyncService/SaveGirDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir SaveGirData(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGirData", ReplyAction="http://tempuri.org/ISyncService/SaveGirDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> SaveGirDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GBXirSearch", ReplyAction="http://tempuri.org/ISyncService/GBXirSearchResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx[] GBXirSearch(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GBXirSearch", ReplyAction="http://tempuri.org/ISyncService/GBXirSearchResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx[]> GBXirSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteGBXir", ReplyAction="http://tempuri.org/ISyncService/DeleteGBXirResponse")]
        bool DeleteGBXir(long GBXirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteGBXir", ReplyAction="http://tempuri.org/ISyncService/DeleteGBXirResponse")]
        System.Threading.Tasks.Task<bool> DeleteGBXirAsync(long GBXirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GBXirFile", ReplyAction="http://tempuri.org/ISyncService/GBXirFileResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx GBXirFile(long GBXirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GBXirFile", ReplyAction="http://tempuri.org/ISyncService/GBXirFileResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GBXirFileAsync(long GBXirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/GetGBXirDataByCirIDResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetGBXirDataByCirID(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXirDataByCirID", ReplyAction="http://tempuri.org/ISyncService/GetGBXirDataByCirIDResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetGBXirDataByCirIDAsync(string CirIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGBXirData", ReplyAction="http://tempuri.org/ISyncService/SaveGBXirDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx SaveGBXirData(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveGBXirData", ReplyAction="http://tempuri.org/ISyncService/SaveGBXirDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> SaveGBXirDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/Log", ReplyAction="http://tempuri.org/ISyncService/LogResponse")]
        bool Log(string message, string detail, Cir.Azure.MobileApp.Service.CirSyncService.LogType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/Log", ReplyAction="http://tempuri.org/ISyncService/LogResponse")]
        System.Threading.Tasks.Task<bool> LogAsync(string message, string detail, Cir.Azure.MobileApp.Service.CirSyncService.LogType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetLog", ReplyAction="http://tempuri.org/ISyncService/GetLogResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.LogList GetLog(Cir.Azure.MobileApp.Service.CirSyncService.LogList log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetLog", ReplyAction="http://tempuri.org/ISyncService/GetLogResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.LogList> GetLogAsync(Cir.Azure.MobileApp.Service.CirSyncService.LogList log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetFeedbackType", ReplyAction="http://tempuri.org/ISyncService/GetFeedbackTypeResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.FeedbackType[] GetFeedbackType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetFeedbackType", ReplyAction="http://tempuri.org/ISyncService/GetFeedbackTypeResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.FeedbackType[]> GetFeedbackTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveFeedback", ReplyAction="http://tempuri.org/ISyncService/SaveFeedbackResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Feedback SaveFeedback(Cir.Azure.MobileApp.Service.CirSyncService.Feedback strJsnFeedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveFeedback", ReplyAction="http://tempuri.org/ISyncService/SaveFeedbackResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Feedback> SaveFeedbackAsync(Cir.Azure.MobileApp.Service.CirSyncService.Feedback strJsnFeedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllFeedbacks", ReplyAction="http://tempuri.org/ISyncService/GetAllFeedbacksResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Feedback[] GetAllFeedbacks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllFeedbacks", ReplyAction="http://tempuri.org/ISyncService/GetAllFeedbacksResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Feedback[]> GetAllFeedbacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteFeedback", ReplyAction="http://tempuri.org/ISyncService/DeleteFeedbackResponse")]
        bool DeleteFeedback(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteFeedback", ReplyAction="http://tempuri.org/ISyncService/DeleteFeedbackResponse")]
        System.Threading.Tasks.Task<bool> DeleteFeedbackAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetSeverity", ReplyAction="http://tempuri.org/ISyncService/GetSeverityResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Severity[] GetSeverity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetSeverity", ReplyAction="http://tempuri.org/ISyncService/GetSeverityResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Severity[]> GetSeverityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetServiceInformation", ReplyAction="http://tempuri.org/ISyncService/GetServiceInformationResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations[] GetServiceInformation(bool All);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetServiceInformation", ReplyAction="http://tempuri.org/ISyncService/GetServiceInformationResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations[]> GetServiceInformationAsync(bool All);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetServiceInformationbyID", ReplyAction="http://tempuri.org/ISyncService/GetServiceInformationbyIDResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations GetServiceInformationbyID(long SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetServiceInformationbyID", ReplyAction="http://tempuri.org/ISyncService/GetServiceInformationbyIDResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations> GetServiceInformationbyIDAsync(long SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveServiceInformation", ReplyAction="http://tempuri.org/ISyncService/SaveServiceInformationResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations SaveServiceInformation(Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations strJsnServiceInformations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveServiceInformation", ReplyAction="http://tempuri.org/ISyncService/SaveServiceInformationResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations> SaveServiceInformationAsync(Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations strJsnServiceInformations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllView", ReplyAction="http://tempuri.org/ISyncService/GetAllViewResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirViewData[] GetAllView();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllView", ReplyAction="http://tempuri.org/ISyncService/GetAllViewResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirViewData[]> GetAllViewAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllViewList", ReplyAction="http://tempuri.org/ISyncService/GetAllViewListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirViewData GetAllViewList(string initials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetAllViewList", ReplyAction="http://tempuri.org/ISyncService/GetAllViewListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirViewData> GetAllViewListAsync(string initials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetView", ReplyAction="http://tempuri.org/ISyncService/GetViewResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirViewData GetView(int ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetView", ReplyAction="http://tempuri.org/ISyncService/GetViewResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirViewData> GetViewAsync(int ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/CreateView", ReplyAction="http://tempuri.org/ISyncService/CreateViewResponse")]
        int CreateView(Cir.Azure.MobileApp.Service.CirSyncService.CirViewData cirViewData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/CreateView", ReplyAction="http://tempuri.org/ISyncService/CreateViewResponse")]
        System.Threading.Tasks.Task<int> CreateViewAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirViewData cirViewData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteView", ReplyAction="http://tempuri.org/ISyncService/DeleteViewResponse")]
        bool DeleteView(int ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DeleteView", ReplyAction="http://tempuri.org/ISyncService/DeleteViewResponse")]
        System.Threading.Tasks.Task<bool> DeleteViewAsync(int ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirList", ReplyAction="http://tempuri.org/ISyncService/GetCirListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CIRList GetCirList(Cir.Azure.MobileApp.Service.CirSyncService.CIRList cirList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirList", ReplyAction="http://tempuri.org/ISyncService/GetCirListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CIRList> GetCirListAsync(Cir.Azure.MobileApp.Service.CirSyncService.CIRList cirList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/CirProcess", ReplyAction="http://tempuri.org/ISyncService/CirProcessResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse CirProcess(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/CirProcess", ReplyAction="http://tempuri.org/ISyncService/CirProcessResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse> CirProcessAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SetApproved", ReplyAction="http://tempuri.org/ISyncService/SetApprovedResponse")]
        bool SetApproved(long cirDataId, int State, int Progress, string modifiedBy, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SetApproved", ReplyAction="http://tempuri.org/ISyncService/SetApprovedResponse")]
        System.Threading.Tasks.Task<bool> SetApprovedAsync(long cirDataId, int State, int Progress, string modifiedBy, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/LockUnlockCir", ReplyAction="http://tempuri.org/ISyncService/LockUnlockCirResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse LockUnlockCir(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/LockUnlockCir", ReplyAction="http://tempuri.org/ISyncService/LockUnlockCirResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse> LockUnlockCirAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirDataDetails", ReplyAction="http://tempuri.org/ISyncService/GetCirDataDetailsResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail GetCirDataDetails(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirDataDetails", ReplyAction="http://tempuri.org/ISyncService/GetCirDataDetailsResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail> GetCirDataDetailsAsync(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRLog", ReplyAction="http://tempuri.org/ISyncService/GetCIRLogResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirLogs[] GetCIRLog(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRLog", ReplyAction="http://tempuri.org/ISyncService/GetCIRLogResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirLogs[]> GetCIRLogAsync(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirDataDetail", ReplyAction="http://tempuri.org/ISyncService/GetCirDataDetailResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetails GetCirDataDetail(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirDataDetail", ReplyAction="http://tempuri.org/ISyncService/GetCirDataDetailResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetails> GetCirDataDetailAsync(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCirCommentHistory", ReplyAction="http://tempuri.org/ISyncService/SaveCirCommentHistoryResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys SaveCirCommentHistory(Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys CirCommentHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCirCommentHistory", ReplyAction="http://tempuri.org/ISyncService/SaveCirCommentHistoryResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys> SaveCirCommentHistoryAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys CirCommentHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirCommentHistory", ReplyAction="http://tempuri.org/ISyncService/GetCirCommentHistoryResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[] GetCirCommentHistory(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirCommentHistory", ReplyAction="http://tempuri.org/ISyncService/GetCirCommentHistoryResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[]> GetCirCommentHistoryAsync(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirCommentHistoryByCirId", ReplyAction="http://tempuri.org/ISyncService/GetCirCommentHistoryByCirIdResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[] GetCirCommentHistoryByCirId(long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirCommentHistoryByCirId", ReplyAction="http://tempuri.org/ISyncService/GetCirCommentHistoryByCirIdResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[]> GetCirCommentHistoryByCirIdAsync(long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateBIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateBIRReportResponse")]
        bool GenerateBIRReport(long BirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateBIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateBIRReportResponse")]
        System.Threading.Tasks.Task<bool> GenerateBIRReportAsync(long BirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateNewBIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateNewBIRReportResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.BirFile GenerateNewBIRReport(long BirDataID, int languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateNewBIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateNewBIRReportResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.BirFile> GenerateNewBIRReportAsync(long BirDataID, int languageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateGIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateGIRReportResponse")]
        bool GenerateGIRReport(long GirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateGIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateGIRReportResponse")]
        System.Threading.Tasks.Task<bool> GenerateGIRReportAsync(long GirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateGBXIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateGBXIRReportResponse")]
        bool GenerateGBXIRReport(long GBXirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GenerateGBXIRReport", ReplyAction="http://tempuri.org/ISyncService/GenerateGBXIRReportResponse")]
        System.Threading.Tasks.Task<bool> GenerateGBXIRReportAsync(long GBXirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBirPDF", ReplyAction="http://tempuri.org/ISyncService/GetBirPDFResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir GetBirPDF(long BirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBirPDF", ReplyAction="http://tempuri.org/ISyncService/GetBirPDFResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetBirPDFAsync(long BirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGirPDF", ReplyAction="http://tempuri.org/ISyncService/GetGirPDFResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir GetGirPDF(long GirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGirPDF", ReplyAction="http://tempuri.org/ISyncService/GetGirPDFResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetGirPDFAsync(long GirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXirPDF", ReplyAction="http://tempuri.org/ISyncService/GetGBXirPDFResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetGBXirPDF(long GBXirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXirPDF", ReplyAction="http://tempuri.org/ISyncService/GetGBXirPDFResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetGBXirPDFAsync(long GBXirDataID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendFirstNotification", ReplyAction="http://tempuri.org/ISyncService/SendFirstNotificationResponse")]
        bool SendFirstNotification(long CirDataID, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SendFirstNotification", ReplyAction="http://tempuri.org/ISyncService/SendFirstNotificationResponse")]
        System.Threading.Tasks.Task<bool> SendFirstNotificationAsync(long CirDataID, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/IsValidServiceReportNumber", ReplyAction="http://tempuri.org/ISyncService/IsValidServiceReportNumberResponse")]
        bool IsValidServiceReportNumber(string serviceReportNumber, string turbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/IsValidServiceReportNumber", ReplyAction="http://tempuri.org/ISyncService/IsValidServiceReportNumberResponse")]
        System.Threading.Tasks.Task<bool> IsValidServiceReportNumberAsync(string serviceReportNumber, string turbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/IsValidNotificationNumber", ReplyAction="http://tempuri.org/ISyncService/IsValidNotificationNumberResponse")]
        bool IsValidNotificationNumber(string notificationNumber, string turbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/IsValidNotificationNumber", ReplyAction="http://tempuri.org/ISyncService/IsValidNotificationNumberResponse")]
        System.Threading.Tasks.Task<bool> IsValidNotificationNumberAsync(string notificationNumber, string turbineNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRPdf", ReplyAction="http://tempuri.org/ISyncService/SaveCIRPdfResponse")]
        bool SaveCIRPdf(string uid, int state, string html, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRPdf", ReplyAction="http://tempuri.org/ISyncService/SaveCIRPdfResponse")]
        System.Threading.Tasks.Task<bool> SaveCIRPdfAsync(string uid, int state, string html, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRPdfGIR", ReplyAction="http://tempuri.org/ISyncService/SaveCIRPdfGIRResponse")]
        bool SaveCIRPdfGIR(string uid, int state, string html, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRPdfGIR", ReplyAction="http://tempuri.org/ISyncService/SaveCIRPdfGIRResponse")]
        System.Threading.Tasks.Task<bool> SaveCIRPdfGIRAsync(string uid, int state, string html, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRPdfGBX", ReplyAction="http://tempuri.org/ISyncService/SaveCIRPdfGBXResponse")]
        bool SaveCIRPdfGBX(string uid, int state, string html, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveCIRPdfGBX", ReplyAction="http://tempuri.org/ISyncService/SaveCIRPdfGBXResponse")]
        System.Threading.Tasks.Task<bool> SaveCIRPdfGBXAsync(string uid, int state, string html, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdf", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir GetCIRPdf(long CirDataId, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdf", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetCIRPdfAsync(long CirDataId, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfForSQL", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfForSQLResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirPDFResponse GetCIRPdfForSQL(long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfForSQL", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfForSQLResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirPDFResponse> GetCIRPdfForSQLAsync(long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfGIR", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfGIRResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir GetCIRPdfGIR(long CirDataId, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfGIR", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfGIRResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetCIRPdfGIRAsync(long CirDataId, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfGBX", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfGBXResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetCIRPdfGBX(long CirDataId, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfGBX", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfGBXResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetCIRPdfGBXAsync(long CirDataId, long CirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfZip", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfZipResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Bir GetCIRPdfZip(string CirDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfZip", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfZipResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetCIRPdfZipAsync(string CirDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfZipGIR", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfZipGIRResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gir GetCIRPdfZipGIR(string CirDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfZipGIR", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfZipGIRResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetCIRPdfZipGIRAsync(string CirDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfZipGBX", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfZipGBXResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetCIRPdfZipGBX(string CirDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCIRPdfZipGBX", ReplyAction="http://tempuri.org/ISyncService/GetCIRPdfZipGBXResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetCIRPdfZipGBXAsync(string CirDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/RenderCirReport", ReplyAction="http://tempuri.org/ISyncService/RenderCirReportResponse")]
        bool RenderCirReport(long CirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/RenderCirReport", ReplyAction="http://tempuri.org/ISyncService/RenderCirReportResponse")]
        System.Threading.Tasks.Task<bool> RenderCirReportAsync(long CirID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBIRViewId", ReplyAction="http://tempuri.org/ISyncService/GetBIRViewIdResponse")]
        int GetBIRViewId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBIRViewId", ReplyAction="http://tempuri.org/ISyncService/GetBIRViewIdResponse")]
        System.Threading.Tasks.Task<int> GetBIRViewIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGIRViewId", ReplyAction="http://tempuri.org/ISyncService/GetGIRViewIdResponse")]
        int GetGIRViewId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGIRViewId", ReplyAction="http://tempuri.org/ISyncService/GetGIRViewIdResponse")]
        System.Threading.Tasks.Task<int> GetGIRViewIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXIRViewId", ReplyAction="http://tempuri.org/ISyncService/GetGBXIRViewIdResponse")]
        int GetGBXIRViewId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetGBXIRViewId", ReplyAction="http://tempuri.org/ISyncService/GetGBXIRViewIdResponse")]
        System.Threading.Tasks.Task<int> GetGBXIRViewIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ResendSecondMails", ReplyAction="http://tempuri.org/ISyncService/ResendSecondMailsResponse")]
        bool ResendSecondMails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/ResendSecondMails", ReplyAction="http://tempuri.org/ISyncService/ResendSecondMailsResponse")]
        System.Threading.Tasks.Task<bool> ResendSecondMailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMigrationCirList", ReplyAction="http://tempuri.org/ISyncService/GetMigrationCirListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail[] GetMigrationCirList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetMigrationCirList", ReplyAction="http://tempuri.org/ISyncService/GetMigrationCirListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail[]> GetMigrationCirListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveBirDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveBirDataDetailstoCosmosDbResponse")]
        void SaveBirDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.BirDataDetails oBirDetails, string birDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/SaveBirDataDetailstoCosmosDb", ReplyAction="http://tempuri.org/ISyncService/SaveBirDataDetailstoCosmosDbResponse")]
        System.Threading.Tasks.Task SaveBirDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.BirDataDetails oBirDetails, string birDataDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirRevision", ReplyAction="http://tempuri.org/ISyncService/GetCirRevisionResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.CirRevision[] GetCirRevision(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirRevision", ReplyAction="http://tempuri.org/ISyncService/GetCirRevisionResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirRevision[]> GetCirRevisionAsync(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirRevisionData", ReplyAction="http://tempuri.org/ISyncService/GetCirRevisionDataResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport GetCirRevisionData(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetCirRevisionData", ReplyAction="http://tempuri.org/ISyncService/GetCirRevisionDataResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport> GetCirRevisionDataAsync(long CirDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBrandList", ReplyAction="http://tempuri.org/ISyncService/GetBrandListResponse")]
        Cir.Azure.MobileApp.Service.CirSyncService.Brand[] GetBrandList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/GetBrandList", ReplyAction="http://tempuri.org/ISyncService/GetBrandListResponse")]
        System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Brand[]> GetBrandListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISyncServiceChannel : Cir.Azure.MobileApp.Service.CirSyncService.ISyncService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SyncServiceClient : System.ServiceModel.ClientBase<Cir.Azure.MobileApp.Service.CirSyncService.ISyncService>, Cir.Azure.MobileApp.Service.CirSyncService.ISyncService {
        
        public SyncServiceClient() {
        }
        
        public SyncServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SyncServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel DoAdvanceSearch(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel) {
            return base.Channel.DoAdvanceSearch(advanceSearchModel);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> DoAdvanceSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel) {
            return base.Channel.DoAdvanceSearchAsync(advanceSearchModel);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel LoadProfile(long ProfileId) {
            return base.Channel.LoadProfile(ProfileId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> LoadProfileAsync(long ProfileId) {
            return base.Channel.LoadProfileAsync(ProfileId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel DeleteProfile(long ProfileId) {
            return base.Channel.DeleteProfile(ProfileId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> DeleteProfileAsync(long ProfileId) {
            return base.Channel.DeleteProfileAsync(ProfileId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel SaveProfile(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel) {
            return base.Channel.SaveProfile(advanceSearchModel);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel> SaveProfileAsync(Cir.Azure.MobileApp.Service.CirSyncService.AdvanceSearchModel advanceSearchModel) {
            return base.Channel.SaveProfileAsync(advanceSearchModel);
        }
        
        public bool ValidateTurbineNumber(string TurbineNumber) {
            return base.Channel.ValidateTurbineNumber(TurbineNumber);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateTurbineNumberAsync(string TurbineNumber) {
            return base.Channel.ValidateTurbineNumberAsync(TurbineNumber);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.TurbineProperties ValidateGetTurbineData(string TurbineNumber) {
            return base.Channel.ValidateGetTurbineData(TurbineNumber);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.TurbineProperties> ValidateGetTurbineDataAsync(string TurbineNumber) {
            return base.Channel.ValidateGetTurbineDataAsync(TurbineNumber);
        }
        
        public bool ValidateCIMCaseNumber(string CIMCaseNumber) {
            return base.Channel.ValidateCIMCaseNumber(CIMCaseNumber);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateCIMCaseNumberAsync(string CIMCaseNumber) {
            return base.Channel.ValidateCIMCaseNumberAsync(CIMCaseNumber);
        }
        
        public bool ValidateServiceReportNumber(string ServiceReportNumber, string TurbineNumber) {
            return base.Channel.ValidateServiceReportNumber(ServiceReportNumber, TurbineNumber);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateServiceReportNumberAsync(string ServiceReportNumber, string TurbineNumber) {
            return base.Channel.ValidateServiceReportNumberAsync(ServiceReportNumber, TurbineNumber);
        }
        
        public bool ValidateServiceNotificationNumber(string ServiceNotificationNumber, string TurbineNumber) {
            return base.Channel.ValidateServiceNotificationNumber(ServiceNotificationNumber, TurbineNumber);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateServiceNotificationNumberAsync(string ServiceNotificationNumber, string TurbineNumber) {
            return base.Channel.ValidateServiceNotificationNumberAsync(ServiceNotificationNumber, TurbineNumber);
        }
        
        public bool UnlockCirDataByCirID(long CirID) {
            return base.Channel.UnlockCirDataByCirID(CirID);
        }
        
        public System.Threading.Tasks.Task<bool> UnlockCirDataByCirIDAsync(long CirID) {
            return base.Channel.UnlockCirDataByCirIDAsync(CirID);
        }
        
        public bool LockCirDataByCirID(long CirID, string modifiedby) {
            return base.Channel.LockCirDataByCirID(CirID, modifiedby);
        }
        
        public System.Threading.Tasks.Task<bool> LockCirDataByCirIDAsync(long CirID, string modifiedby) {
            return base.Channel.LockCirDataByCirIDAsync(CirID, modifiedby);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[] GetCirStateByCirIDs(Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[] CirIDs) {
            return base.Channel.GetCirStateByCirIDs(CirIDs);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[]> GetCirStateByCirIDsAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirStateResponse[] CirIDs) {
            return base.Channel.GetCirStateByCirIDsAsync(CirIDs);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer GetManufacturer(int type, int id) {
            return base.Channel.GetManufacturer(type, id);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer> GetManufacturerAsync(int type, int id) {
            return base.Channel.GetManufacturerAsync(type, id);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ManufacturerList GetManufacturerList(int type) {
            return base.Channel.GetManufacturerList(type);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ManufacturerList> GetManufacturerListAsync(int type) {
            return base.Channel.GetManufacturerListAsync(type);
        }
        
        public bool DeleteManufacturer(int type, int id) {
            return base.Channel.DeleteManufacturer(type, id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteManufacturerAsync(int type, int id) {
            return base.Channel.DeleteManufacturerAsync(type, id);
        }
        
        public bool SaveManufacturer(Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer m) {
            return base.Channel.SaveManufacturer(m);
        }
        
        public System.Threading.Tasks.Task<bool> SaveManufacturerAsync(Cir.Azure.MobileApp.Service.CirSyncService.Manufacturer m) {
            return base.Channel.SaveManufacturerAsync(m);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Hotlist GetHotlist(int id) {
            return base.Channel.GetHotlist(id);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Hotlist> GetHotlistAsync(int id) {
            return base.Channel.GetHotlistAsync(id);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Hotlist[] GetAllHotlist() {
            return base.Channel.GetAllHotlist();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Hotlist[]> GetAllHotlistAsync() {
            return base.Channel.GetAllHotlistAsync();
        }
        
        public bool SaveHotList(Cir.Azure.MobileApp.Service.CirSyncService.Hotlist hotlist) {
            return base.Channel.SaveHotList(hotlist);
        }
        
        public System.Threading.Tasks.Task<bool> SaveHotListAsync(Cir.Azure.MobileApp.Service.CirSyncService.Hotlist hotlist) {
            return base.Channel.SaveHotListAsync(hotlist);
        }
        
        public bool DeleteHotList(int id) {
            return base.Channel.DeleteHotList(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHotListAsync(int id) {
            return base.Channel.DeleteHotListAsync(id);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization UploadDefectCategotization(Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization dc) {
            return base.Channel.UploadDefectCategotization(dc);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization> UploadDefectCategotizationAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirDefectCategorization dc) {
            return base.Channel.UploadDefectCategotizationAsync(dc);
        }
        
        public bool SaveAttachment(Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments attachment) {
            return base.Channel.SaveAttachment(attachment);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAttachmentAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments attachment) {
            return base.Channel.SaveAttachmentAsync(attachment);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments[] GetAttachments(long cirId) {
            return base.Channel.GetAttachments(cirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments[]> GetAttachmentsAsync(long cirId) {
            return base.Channel.GetAttachmentsAsync(cirId);
        }
        
        public bool DeleteAttachment(long cirAttachmentId) {
            return base.Channel.DeleteAttachment(cirAttachmentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAttachmentAsync(long cirAttachmentId) {
            return base.Channel.DeleteAttachmentAsync(cirAttachmentId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments GetAttachment(long cirAttachmentId) {
            return base.Channel.GetAttachment(cirAttachmentId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirAttachments> GetAttachmentAsync(long cirAttachmentId) {
            return base.Channel.GetAttachmentAsync(cirAttachmentId);
        }
        
        public bool SqlToCosmosDBMigrationLog(Cir.Azure.MobileApp.Service.CirSyncService.MigrationStepLogging objMigrationLogging) {
            return base.Channel.SqlToCosmosDBMigrationLog(objMigrationLogging);
        }
        
        public System.Threading.Tasks.Task<bool> SqlToCosmosDBMigrationLogAsync(Cir.Azure.MobileApp.Service.CirSyncService.MigrationStepLogging objMigrationLogging) {
            return base.Channel.SqlToCosmosDBMigrationLogAsync(objMigrationLogging);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir[] GetBirMigrationData() {
            return base.Channel.GetBirMigrationData();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir[]> GetBirMigrationDataAsync() {
            return base.Channel.GetBirMigrationDataAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir[] GetGirMigrationData() {
            return base.Channel.GetGirMigrationData();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir[]> GetGirMigrationDataAsync() {
            return base.Channel.GetGirMigrationDataAsync();
        }
        
        public bool SaveGirDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.GirDataDetails objGirDataDetails, string strGirDataDocumentId) {
            return base.Channel.SaveGirDataDetailstoCosmosDb(objGirDataDetails, strGirDataDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveGirDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.GirDataDetails objGirDataDetails, string strGirDataDocumentId) {
            return base.Channel.SaveGirDataDetailstoCosmosDbAsync(objGirDataDetails, strGirDataDocumentId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.GirFile GenerateNewGIRReport(long GirDataID, int languageId) {
            return base.Channel.GenerateNewGIRReport(GirDataID, languageId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.GirFile> GenerateNewGIRReportAsync(long GirDataID, int languageId) {
            return base.Channel.GenerateNewGIRReportAsync(GirDataID, languageId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx[] GetGBXirMigrationData() {
            return base.Channel.GetGBXirMigrationData();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx[]> GetGBXirMigrationDataAsync() {
            return base.Channel.GetGBXirMigrationDataAsync();
        }
        
        public bool SaveGBXirDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.GBXirDataDetails objGirDataDetails, string strGirDataDocumentId) {
            return base.Channel.SaveGBXirDataDetailstoCosmosDb(objGirDataDetails, strGirDataDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveGBXirDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.GBXirDataDetails objGirDataDetails, string strGirDataDocumentId) {
            return base.Channel.SaveGBXirDataDetailstoCosmosDbAsync(objGirDataDetails, strGirDataDocumentId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.GbxFile GenerateNewGBXIRReport(long GbxirDataID, int languageId) {
            return base.Channel.GenerateNewGBXIRReport(GbxirDataID, languageId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.GbxFile> GenerateNewGBXIRReportAsync(long GbxirDataID, int languageId) {
            return base.Channel.GenerateNewGBXIRReportAsync(GbxirDataID, languageId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails[] GetNotifications() {
            return base.Channel.GetNotifications();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails[]> GetNotificationsAsync() {
            return base.Channel.GetNotificationsAsync();
        }
        
        public bool SaveFirstNotificationDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails objFN, string fnDataDocumentId) {
            return base.Channel.SaveFirstNotificationDataDetailstoCosmosDb(objFN, fnDataDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveFirstNotificationDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.FirstNotificationDetails objFN, string fnDataDocumentId) {
            return base.Channel.SaveFirstNotificationDataDetailstoCosmosDbAsync(objFN, fnDataDocumentId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails[] GetSecondNotificationList() {
            return base.Channel.GetSecondNotificationList();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails[]> GetSecondNotificationListAsync() {
            return base.Channel.GetSecondNotificationListAsync();
        }
        
        public bool SaveSecondNotificationDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails objSN, string fnDataDocumentId) {
            return base.Channel.SaveSecondNotificationDataDetailstoCosmosDb(objSN, fnDataDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSecondNotificationDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.SecondNotificationDetails objSN, string fnDataDocumentId) {
            return base.Channel.SaveSecondNotificationDataDetailstoCosmosDbAsync(objSN, fnDataDocumentId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails[] GetRejectNotificationList() {
            return base.Channel.GetRejectNotificationList();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails[]> GetRejectNotificationListAsync() {
            return base.Channel.GetRejectNotificationListAsync();
        }
        
        public bool SaveRejectNotificationDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails objRN, string fnDataDocumentId) {
            return base.Channel.SaveRejectNotificationDataDetailstoCosmosDb(objRN, fnDataDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRejectNotificationDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.RejectNotificationDetails objRN, string fnDataDocumentId) {
            return base.Channel.SaveRejectNotificationDataDetailstoCosmosDbAsync(objRN, fnDataDocumentId);
        }
        
        public void SendMail(string cirName, long cirId, string CurrentUser, int type) {
            base.Channel.SendMail(cirName, cirId, CurrentUser, type);
        }
        
        public System.Threading.Tasks.Task SendMailAsync(string cirName, long cirId, string CurrentUser, int type) {
            return base.Channel.SendMailAsync(cirName, cirId, CurrentUser, type);
        }
        
        public void SendMails(string ToEmail, string CcEmail, string body, string subject) {
            base.Channel.SendMails(ToEmail, CcEmail, body, subject);
        }
        
        public System.Threading.Tasks.Task SendMailsAsync(string ToEmail, string CcEmail, string body, string subject) {
            return base.Channel.SendMailsAsync(ToEmail, CcEmail, body, subject);
        }
        
        public void SendCirNotificationMails(string[] ToEmails, string[] CCEmails, string json) {
            base.Channel.SendCirNotificationMails(ToEmails, CCEmails, json);
        }
        
        public System.Threading.Tasks.Task SendCirNotificationMailsAsync(string[] ToEmails, string[] CCEmails, string json) {
            return base.Channel.SendCirNotificationMailsAsync(ToEmails, CCEmails, json);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirMasterData[] GetMasterData() {
            return base.Channel.GetMasterData();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirMasterData[]> GetMasterDataAsync() {
            return base.Channel.GetMasterDataAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.MasterKeyData[] GetMasterDataForCIRReport() {
            return base.Channel.GetMasterDataForCIRReport();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.MasterKeyData[]> GetMasterDataForCIRReportAsync() {
            return base.Channel.GetMasterDataForCIRReportAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.PDFModel GetCirPDFData(string cirId) {
            return base.Channel.GetCirPDFData(cirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.PDFModel> GetCirPDFDataAsync(string cirId) {
            return base.Channel.GetCirPDFDataAsync(cirId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirMasterTable[] GetMasterDataByName(string TableName, string UserId) {
            return base.Channel.GetMasterDataByName(TableName, UserId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirMasterTable[]> GetMasterDataByNameAsync(string TableName, string UserId) {
            return base.Channel.GetMasterDataByNameAsync(TableName, UserId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirCIMCaseTable[] GetCIMCaseData() {
            return base.Channel.GetCIMCaseData();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCIMCaseTable[]> GetCIMCaseDataAsync() {
            return base.Channel.GetCIMCaseDataAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirResponse SaveCIRData(Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport strJsnCir) {
            return base.Channel.SaveCIRData(strJsnCir);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirResponse> SaveCIRDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport strJsnCir) {
            return base.Channel.SaveCIRDataAsync(strJsnCir);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirResponse UpdatePDFData() {
            return base.Channel.UpdatePDFData();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirResponse> UpdatePDFDataAsync() {
            return base.Channel.UpdatePDFDataAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport GetCIRDatabyCIRID(long CIRID) {
            return base.Channel.GetCIRDatabyCIRID(CIRID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport> GetCIRDatabyCIRIDAsync(long CIRID) {
            return base.Channel.GetCIRDatabyCIRIDAsync(CIRID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[] CirQuickSearch(Cir.Azure.MobileApp.Service.CirSyncService.CirQuickSearch SearchItem) {
            return base.Channel.CirQuickSearch(SearchItem);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport[]> CirQuickSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirQuickSearch SearchItem) {
            return base.Channel.CirQuickSearchAsync(SearchItem);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportType[] GetComponentInspectionReportType() {
            return base.Channel.GetComponentInspectionReportType();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReportType[]> GetComponentInspectionReportTypeAsync() {
            return base.Channel.GetComponentInspectionReportTypeAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts[] GetStandardText(int CommonInspectionReportID) {
            return base.Channel.GetStandardText(CommonInspectionReportID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts[]> GetStandardTextAsync(int CommonInspectionReportID) {
            return base.Channel.GetStandardTextAsync(CommonInspectionReportID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts GetStandardTextbyID(long SID) {
            return base.Channel.GetStandardTextbyID(SID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts> GetStandardTextbyIDAsync(long SID) {
            return base.Channel.GetStandardTextbyIDAsync(SID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts SaveStandardTextData(Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts strJsnStrTxt) {
            return base.Channel.SaveStandardTextData(strJsnStrTxt);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts> SaveStandardTextDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.StandardTexts strJsnStrTxt) {
            return base.Channel.SaveStandardTextDataAsync(strJsnStrTxt);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir[] BirSearch(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir) {
            return base.Channel.BirSearch(bir);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir[]> BirSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir) {
            return base.Channel.BirSearchAsync(bir);
        }
        
        public bool DeleteBir(long BirID) {
            return base.Channel.DeleteBir(BirID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBirAsync(long BirID) {
            return base.Channel.DeleteBirAsync(BirID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir BirFile(long BirID) {
            return base.Channel.BirFile(BirID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> BirFileAsync(long BirID) {
            return base.Channel.BirFileAsync(BirID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir GetBirDataByCirID(string CirIDs) {
            return base.Channel.GetBirDataByCirID(CirIDs);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetBirDataByCirIDAsync(string CirIDs) {
            return base.Channel.GetBirDataByCirIDAsync(CirIDs);
        }
        
        public string GetRelatedCirsByCirId(string cirId) {
            return base.Channel.GetRelatedCirsByCirId(cirId);
        }
        
        public System.Threading.Tasks.Task<string> GetRelatedCirsByCirIdAsync(string cirId) {
            return base.Channel.GetRelatedCirsByCirIdAsync(cirId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir SaveBirData(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir) {
            return base.Channel.SaveBirData(bir);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> SaveBirDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.Bir bir) {
            return base.Channel.SaveBirDataAsync(bir);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCirDataIdByCirID(string CirIDs) {
            return base.Channel.GetCirDataIdByCirID(CirIDs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCirDataIdByCirIDAsync(string CirIDs) {
            return base.Channel.GetCirDataIdByCirIDAsync(CirIDs);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir[] GirSearch(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir) {
            return base.Channel.GirSearch(gir);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir[]> GirSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir) {
            return base.Channel.GirSearchAsync(gir);
        }
        
        public bool DeleteGir(long GirID) {
            return base.Channel.DeleteGir(GirID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGirAsync(long GirID) {
            return base.Channel.DeleteGirAsync(GirID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir GirFile(long GirID) {
            return base.Channel.GirFile(GirID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GirFileAsync(long GirID) {
            return base.Channel.GirFileAsync(GirID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir GetGirDataByCirID(string CirIDs) {
            return base.Channel.GetGirDataByCirID(CirIDs);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetGirDataByCirIDAsync(string CirIDs) {
            return base.Channel.GetGirDataByCirIDAsync(CirIDs);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir SaveGirData(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir) {
            return base.Channel.SaveGirData(gir);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> SaveGirDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gir gir) {
            return base.Channel.SaveGirDataAsync(gir);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx[] GBXirSearch(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx) {
            return base.Channel.GBXirSearch(gbx);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx[]> GBXirSearchAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx) {
            return base.Channel.GBXirSearchAsync(gbx);
        }
        
        public bool DeleteGBXir(long GBXirID) {
            return base.Channel.DeleteGBXir(GBXirID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGBXirAsync(long GBXirID) {
            return base.Channel.DeleteGBXirAsync(GBXirID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx GBXirFile(long GBXirID) {
            return base.Channel.GBXirFile(GBXirID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GBXirFileAsync(long GBXirID) {
            return base.Channel.GBXirFileAsync(GBXirID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetGBXirDataByCirID(string CirIDs) {
            return base.Channel.GetGBXirDataByCirID(CirIDs);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetGBXirDataByCirIDAsync(string CirIDs) {
            return base.Channel.GetGBXirDataByCirIDAsync(CirIDs);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx SaveGBXirData(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx) {
            return base.Channel.SaveGBXirData(gbx);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> SaveGBXirDataAsync(Cir.Azure.MobileApp.Service.CirSyncService.Gbx gbx) {
            return base.Channel.SaveGBXirDataAsync(gbx);
        }
        
        public bool Log(string message, string detail, Cir.Azure.MobileApp.Service.CirSyncService.LogType type) {
            return base.Channel.Log(message, detail, type);
        }
        
        public System.Threading.Tasks.Task<bool> LogAsync(string message, string detail, Cir.Azure.MobileApp.Service.CirSyncService.LogType type) {
            return base.Channel.LogAsync(message, detail, type);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.LogList GetLog(Cir.Azure.MobileApp.Service.CirSyncService.LogList log) {
            return base.Channel.GetLog(log);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.LogList> GetLogAsync(Cir.Azure.MobileApp.Service.CirSyncService.LogList log) {
            return base.Channel.GetLogAsync(log);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.FeedbackType[] GetFeedbackType() {
            return base.Channel.GetFeedbackType();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.FeedbackType[]> GetFeedbackTypeAsync() {
            return base.Channel.GetFeedbackTypeAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Feedback SaveFeedback(Cir.Azure.MobileApp.Service.CirSyncService.Feedback strJsnFeedback) {
            return base.Channel.SaveFeedback(strJsnFeedback);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Feedback> SaveFeedbackAsync(Cir.Azure.MobileApp.Service.CirSyncService.Feedback strJsnFeedback) {
            return base.Channel.SaveFeedbackAsync(strJsnFeedback);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Feedback[] GetAllFeedbacks() {
            return base.Channel.GetAllFeedbacks();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Feedback[]> GetAllFeedbacksAsync() {
            return base.Channel.GetAllFeedbacksAsync();
        }
        
        public bool DeleteFeedback(long id) {
            return base.Channel.DeleteFeedback(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFeedbackAsync(long id) {
            return base.Channel.DeleteFeedbackAsync(id);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Severity[] GetSeverity() {
            return base.Channel.GetSeverity();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Severity[]> GetSeverityAsync() {
            return base.Channel.GetSeverityAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations[] GetServiceInformation(bool All) {
            return base.Channel.GetServiceInformation(All);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations[]> GetServiceInformationAsync(bool All) {
            return base.Channel.GetServiceInformationAsync(All);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations GetServiceInformationbyID(long SID) {
            return base.Channel.GetServiceInformationbyID(SID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations> GetServiceInformationbyIDAsync(long SID) {
            return base.Channel.GetServiceInformationbyIDAsync(SID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations SaveServiceInformation(Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations strJsnServiceInformations) {
            return base.Channel.SaveServiceInformation(strJsnServiceInformations);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations> SaveServiceInformationAsync(Cir.Azure.MobileApp.Service.CirSyncService.ServiceInformations strJsnServiceInformations) {
            return base.Channel.SaveServiceInformationAsync(strJsnServiceInformations);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirViewData[] GetAllView() {
            return base.Channel.GetAllView();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirViewData[]> GetAllViewAsync() {
            return base.Channel.GetAllViewAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirViewData GetAllViewList(string initials) {
            return base.Channel.GetAllViewList(initials);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirViewData> GetAllViewListAsync(string initials) {
            return base.Channel.GetAllViewListAsync(initials);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirViewData GetView(int ViewId) {
            return base.Channel.GetView(ViewId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirViewData> GetViewAsync(int ViewId) {
            return base.Channel.GetViewAsync(ViewId);
        }
        
        public int CreateView(Cir.Azure.MobileApp.Service.CirSyncService.CirViewData cirViewData) {
            return base.Channel.CreateView(cirViewData);
        }
        
        public System.Threading.Tasks.Task<int> CreateViewAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirViewData cirViewData) {
            return base.Channel.CreateViewAsync(cirViewData);
        }
        
        public bool DeleteView(int ViewId) {
            return base.Channel.DeleteView(ViewId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteViewAsync(int ViewId) {
            return base.Channel.DeleteViewAsync(ViewId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CIRList GetCirList(Cir.Azure.MobileApp.Service.CirSyncService.CIRList cirList) {
            return base.Channel.GetCirList(cirList);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CIRList> GetCirListAsync(Cir.Azure.MobileApp.Service.CirSyncService.CIRList cirList) {
            return base.Channel.GetCirListAsync(cirList);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse CirProcess(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail) {
            return base.Channel.CirProcess(cirDataDetail);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse> CirProcessAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail) {
            return base.Channel.CirProcessAsync(cirDataDetail);
        }
        
        public bool SetApproved(long cirDataId, int State, int Progress, string modifiedBy, string comment) {
            return base.Channel.SetApproved(cirDataId, State, Progress, modifiedBy, comment);
        }
        
        public System.Threading.Tasks.Task<bool> SetApprovedAsync(long cirDataId, int State, int Progress, string modifiedBy, string comment) {
            return base.Channel.SetApprovedAsync(cirDataId, State, Progress, modifiedBy, comment);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse LockUnlockCir(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail) {
            return base.Channel.LockUnlockCir(cirDataDetail);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataActionResponse> LockUnlockCirAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail cirDataDetail) {
            return base.Channel.LockUnlockCirAsync(cirDataDetail);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail GetCirDataDetails(long CirDataId) {
            return base.Channel.GetCirDataDetails(CirDataId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail> GetCirDataDetailsAsync(long CirDataId) {
            return base.Channel.GetCirDataDetailsAsync(CirDataId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirLogs[] GetCIRLog(long CirDataId) {
            return base.Channel.GetCIRLog(CirDataId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirLogs[]> GetCIRLogAsync(long CirDataId) {
            return base.Channel.GetCIRLogAsync(CirDataId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetails GetCirDataDetail(long CirDataId) {
            return base.Channel.GetCirDataDetail(CirDataId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetails> GetCirDataDetailAsync(long CirDataId) {
            return base.Channel.GetCirDataDetailAsync(CirDataId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys SaveCirCommentHistory(Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys CirCommentHistory) {
            return base.Channel.SaveCirCommentHistory(CirCommentHistory);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys> SaveCirCommentHistoryAsync(Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys CirCommentHistory) {
            return base.Channel.SaveCirCommentHistoryAsync(CirCommentHistory);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[] GetCirCommentHistory(long CirDataId) {
            return base.Channel.GetCirCommentHistory(CirDataId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[]> GetCirCommentHistoryAsync(long CirDataId) {
            return base.Channel.GetCirCommentHistoryAsync(CirDataId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[] GetCirCommentHistoryByCirId(long CirId) {
            return base.Channel.GetCirCommentHistoryByCirId(CirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirCommentHistorys[]> GetCirCommentHistoryByCirIdAsync(long CirId) {
            return base.Channel.GetCirCommentHistoryByCirIdAsync(CirId);
        }
        
        public bool GenerateBIRReport(long BirDataID) {
            return base.Channel.GenerateBIRReport(BirDataID);
        }
        
        public System.Threading.Tasks.Task<bool> GenerateBIRReportAsync(long BirDataID) {
            return base.Channel.GenerateBIRReportAsync(BirDataID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.BirFile GenerateNewBIRReport(long BirDataID, int languageId) {
            return base.Channel.GenerateNewBIRReport(BirDataID, languageId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.BirFile> GenerateNewBIRReportAsync(long BirDataID, int languageId) {
            return base.Channel.GenerateNewBIRReportAsync(BirDataID, languageId);
        }
        
        public bool GenerateGIRReport(long GirDataID) {
            return base.Channel.GenerateGIRReport(GirDataID);
        }
        
        public System.Threading.Tasks.Task<bool> GenerateGIRReportAsync(long GirDataID) {
            return base.Channel.GenerateGIRReportAsync(GirDataID);
        }
        
        public bool GenerateGBXIRReport(long GBXirDataID) {
            return base.Channel.GenerateGBXIRReport(GBXirDataID);
        }
        
        public System.Threading.Tasks.Task<bool> GenerateGBXIRReportAsync(long GBXirDataID) {
            return base.Channel.GenerateGBXIRReportAsync(GBXirDataID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir GetBirPDF(long BirDataID) {
            return base.Channel.GetBirPDF(BirDataID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetBirPDFAsync(long BirDataID) {
            return base.Channel.GetBirPDFAsync(BirDataID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir GetGirPDF(long GirDataID) {
            return base.Channel.GetGirPDF(GirDataID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetGirPDFAsync(long GirDataID) {
            return base.Channel.GetGirPDFAsync(GirDataID);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetGBXirPDF(long GBXirDataID) {
            return base.Channel.GetGBXirPDF(GBXirDataID);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetGBXirPDFAsync(long GBXirDataID) {
            return base.Channel.GetGBXirPDFAsync(GBXirDataID);
        }
        
        public bool SendFirstNotification(long CirDataID, long CirId) {
            return base.Channel.SendFirstNotification(CirDataID, CirId);
        }
        
        public System.Threading.Tasks.Task<bool> SendFirstNotificationAsync(long CirDataID, long CirId) {
            return base.Channel.SendFirstNotificationAsync(CirDataID, CirId);
        }
        
        public bool IsValidServiceReportNumber(string serviceReportNumber, string turbineNumber) {
            return base.Channel.IsValidServiceReportNumber(serviceReportNumber, turbineNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidServiceReportNumberAsync(string serviceReportNumber, string turbineNumber) {
            return base.Channel.IsValidServiceReportNumberAsync(serviceReportNumber, turbineNumber);
        }
        
        public bool IsValidNotificationNumber(string notificationNumber, string turbineNumber) {
            return base.Channel.IsValidNotificationNumber(notificationNumber, turbineNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidNotificationNumberAsync(string notificationNumber, string turbineNumber) {
            return base.Channel.IsValidNotificationNumberAsync(notificationNumber, turbineNumber);
        }
        
        public bool SaveCIRPdf(string uid, int state, string html, string name) {
            return base.Channel.SaveCIRPdf(uid, state, html, name);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCIRPdfAsync(string uid, int state, string html, string name) {
            return base.Channel.SaveCIRPdfAsync(uid, state, html, name);
        }
        
        public bool SaveCIRPdfGIR(string uid, int state, string html, string name) {
            return base.Channel.SaveCIRPdfGIR(uid, state, html, name);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCIRPdfGIRAsync(string uid, int state, string html, string name) {
            return base.Channel.SaveCIRPdfGIRAsync(uid, state, html, name);
        }
        
        public bool SaveCIRPdfGBX(string uid, int state, string html, string name) {
            return base.Channel.SaveCIRPdfGBX(uid, state, html, name);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCIRPdfGBXAsync(string uid, int state, string html, string name) {
            return base.Channel.SaveCIRPdfGBXAsync(uid, state, html, name);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir GetCIRPdf(long CirDataId, long CirId) {
            return base.Channel.GetCIRPdf(CirDataId, CirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetCIRPdfAsync(long CirDataId, long CirId) {
            return base.Channel.GetCIRPdfAsync(CirDataId, CirId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirPDFResponse GetCIRPdfForSQL(long CirId) {
            return base.Channel.GetCIRPdfForSQL(CirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirPDFResponse> GetCIRPdfForSQLAsync(long CirId) {
            return base.Channel.GetCIRPdfForSQLAsync(CirId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir GetCIRPdfGIR(long CirDataId, long CirId) {
            return base.Channel.GetCIRPdfGIR(CirDataId, CirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetCIRPdfGIRAsync(long CirDataId, long CirId) {
            return base.Channel.GetCIRPdfGIRAsync(CirDataId, CirId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetCIRPdfGBX(long CirDataId, long CirId) {
            return base.Channel.GetCIRPdfGBX(CirDataId, CirId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetCIRPdfGBXAsync(long CirDataId, long CirId) {
            return base.Channel.GetCIRPdfGBXAsync(CirDataId, CirId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Bir GetCIRPdfZip(string CirDataIds) {
            return base.Channel.GetCIRPdfZip(CirDataIds);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Bir> GetCIRPdfZipAsync(string CirDataIds) {
            return base.Channel.GetCIRPdfZipAsync(CirDataIds);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gir GetCIRPdfZipGIR(string CirDataIds) {
            return base.Channel.GetCIRPdfZipGIR(CirDataIds);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gir> GetCIRPdfZipGIRAsync(string CirDataIds) {
            return base.Channel.GetCIRPdfZipGIRAsync(CirDataIds);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Gbx GetCIRPdfZipGBX(string CirDataIds) {
            return base.Channel.GetCIRPdfZipGBX(CirDataIds);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Gbx> GetCIRPdfZipGBXAsync(string CirDataIds) {
            return base.Channel.GetCIRPdfZipGBXAsync(CirDataIds);
        }
        
        public bool RenderCirReport(long CirID) {
            return base.Channel.RenderCirReport(CirID);
        }
        
        public System.Threading.Tasks.Task<bool> RenderCirReportAsync(long CirID) {
            return base.Channel.RenderCirReportAsync(CirID);
        }
        
        public int GetBIRViewId() {
            return base.Channel.GetBIRViewId();
        }
        
        public System.Threading.Tasks.Task<int> GetBIRViewIdAsync() {
            return base.Channel.GetBIRViewIdAsync();
        }
        
        public int GetGIRViewId() {
            return base.Channel.GetGIRViewId();
        }
        
        public System.Threading.Tasks.Task<int> GetGIRViewIdAsync() {
            return base.Channel.GetGIRViewIdAsync();
        }
        
        public int GetGBXIRViewId() {
            return base.Channel.GetGBXIRViewId();
        }
        
        public System.Threading.Tasks.Task<int> GetGBXIRViewIdAsync() {
            return base.Channel.GetGBXIRViewIdAsync();
        }
        
        public bool ResendSecondMails() {
            return base.Channel.ResendSecondMails();
        }
        
        public System.Threading.Tasks.Task<bool> ResendSecondMailsAsync() {
            return base.Channel.ResendSecondMailsAsync();
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail[] GetMigrationCirList() {
            return base.Channel.GetMigrationCirList();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirDataDetail[]> GetMigrationCirListAsync() {
            return base.Channel.GetMigrationCirListAsync();
        }
        
        public void SaveBirDataDetailstoCosmosDb(Cir.Azure.MobileApp.Service.CirSyncService.BirDataDetails oBirDetails, string birDataDocumentId) {
            base.Channel.SaveBirDataDetailstoCosmosDb(oBirDetails, birDataDocumentId);
        }
        
        public System.Threading.Tasks.Task SaveBirDataDetailstoCosmosDbAsync(Cir.Azure.MobileApp.Service.CirSyncService.BirDataDetails oBirDetails, string birDataDocumentId) {
            return base.Channel.SaveBirDataDetailstoCosmosDbAsync(oBirDetails, birDataDocumentId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.CirRevision[] GetCirRevision(long CirDataId) {
            return base.Channel.GetCirRevision(CirDataId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.CirRevision[]> GetCirRevisionAsync(long CirDataId) {
            return base.Channel.GetCirRevisionAsync(CirDataId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport GetCirRevisionData(long CirDataId) {
            return base.Channel.GetCirRevisionData(CirDataId);
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.ComponentInspectionReport> GetCirRevisionDataAsync(long CirDataId) {
            return base.Channel.GetCirRevisionDataAsync(CirDataId);
        }
        
        public Cir.Azure.MobileApp.Service.CirSyncService.Brand[] GetBrandList() {
            return base.Channel.GetBrandList();
        }
        
        public System.Threading.Tasks.Task<Cir.Azure.MobileApp.Service.CirSyncService.Brand[]> GetBrandListAsync() {
            return base.Channel.GetBrandListAsync();
        }
    }
}
