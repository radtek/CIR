///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 2.5
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
#if !CF
using System.Runtime.Serialization;
#endif
using System.Xml.Serialization;
using Cir.Data.LLBLGen;
using Cir.Data.LLBLGen.HelperClasses;
using Cir.Data.LLBLGen.FactoryClasses;
using Cir.Data.LLBLGen.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Cir.Data.LLBLGen.EntityClasses
{
	
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>
	/// Entity class which represents the entity 'ComponentInspectionReport'.<br/><br/>
	/// 
	/// </summary>
	[Serializable]
	public partial class ComponentInspectionReportEntity : CommonEntityBase, ISerializable
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		#region Class Member Declarations
		private EntityCollection<ComponentInspectionReportBladeEntity> _componentInspectionReportBlade;
		private EntityCollection<ComponentInspectionReportGearboxEntity> _componentInspectionReportGearbox;
		private EntityCollection<ComponentInspectionReportGeneralEntity> _componentInspectionReportGeneral;
		private EntityCollection<ComponentInspectionReportGeneratorEntity> _componentInspectionReportGenerator;
		private EntityCollection<ComponentInspectionReportMainBearingEntity> _componentInspectionReportMainBearing;
		private EntityCollection<ComponentInspectionReportSkiiPEntity> _componentInspectionReportSkiiP;
		private EntityCollection<ComponentInspectionReportTransformerEntity> _componentInspectionReportTransformer;
		private EntityCollection<ActionOnTransformerEntity> _actionOnTransformerCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<ActionToBeTakenOnGeneratorEntity> _actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<ArcDetectionEntity> _arcDetectionCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<BearingErrorEntity> _bearingErrorCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<BearingErrorEntity> _bearingErrorCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<BearingErrorEntity> _bearingErrorCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<BearingErrorEntity> _bearingErrorCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<BearingErrorEntity> _bearingErrorCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<BearingErrorEntity> _bearingErrorCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<BearingPosEntity> _bearingPosCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<BearingPosEntity> _bearingPosCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<BearingPosEntity> _bearingPosCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<BearingPosEntity> _bearingPosCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<BearingPosEntity> _bearingPosCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<BearingPosEntity> _bearingPosCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<BearingTypeEntity> _bearingTypeCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<BearingTypeEntity> _bearingTypeCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<BearingTypeEntity> _bearingTypeCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<BearingTypeEntity> _bearingTypeCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<BearingTypeEntity> _bearingTypeCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<BearingTypeEntity> _bearingTypeCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<BladeColorEntity> _bladeColorCollectionViaComponentInspectionReportBlade;
		private EntityCollection<BladeLengthEntity> _bladeLengthCollectionViaComponentInspectionReportBlade;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_____;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP______;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP___;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP____;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP__________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_______;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportGeneral_;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportBlade_;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportBlade;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportMainBearing;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP___________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP__;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP______________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP____________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________;
		private EntityCollection<BooleanAnswerEntity> _booleanAnswerCollectionViaComponentInspectionReportSkiiP________________;
		private EntityCollection<BracketsEntity> _bracketsCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<CableConditionEntity> _cableConditionCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<CableConditionEntity> _cableConditionCollectionViaComponentInspectionReportTransformer_;
		private EntityCollection<ClimateEntity> _climateCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<CoilConditionEntity> _coilConditionCollectionViaComponentInspectionReportTransformer_;
		private EntityCollection<CoilConditionEntity> _coilConditionCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<ComponentGroupEntity> _componentGroupCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<ConnectionBarsEntity> _connectionBarsCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<ControllerTypeEntity> _controllerTypeCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<CouplingEntity> _couplingCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<CouplingEntity> _couplingCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox__________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox__________________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox______;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_______;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox___________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_________________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox________________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox____________________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox___________________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_____________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox____________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_______________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox______________;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<DamageDecisionEntity> _damageDecisionCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<DebrisGearboxEntity> _debrisGearboxCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<DebrisOnMagnetEntity> _debrisOnMagnetCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<ElectricalPumpEntity> _electricalPumpCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<FaultCodeAreaEntity> _faultCodeAreaCollectionViaComponentInspectionReportBlade;
		private EntityCollection<FaultCodeCauseEntity> _faultCodeCauseCollectionViaComponentInspectionReportBlade;
		private EntityCollection<FaultCodeClassificationEntity> _faultCodeClassificationCollectionViaComponentInspectionReportBlade;
		private EntityCollection<FaultCodeTypeEntity> _faultCodeTypeCollectionViaComponentInspectionReportBlade;
		private EntityCollection<FilterBlockTypeEntity> _filterBlockTypeCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GearboxManufacturerEntity> _gearboxManufacturerCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<GearboxManufacturerEntity> _gearboxManufacturerCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GearboxRevisionEntity> _gearboxRevisionCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GearboxTypeEntity> _gearboxTypeCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox____________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox_________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox__________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox___________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox_____________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox______;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox______________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox________;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<GearErrorEntity> _gearErrorCollectionViaComponentInspectionReportGearbox_______;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox_________;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox__________;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox_______;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox________;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox___________;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox______________;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox______;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox____________;
		private EntityCollection<GearTypeEntity> _gearTypeCollectionViaComponentInspectionReportGearbox_____________;
		private EntityCollection<GeneratorCoverEntity> _generatorCoverCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<GeneratorDriveEndEntity> _generatorDriveEndCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<GeneratorManufacturerEntity> _generatorManufacturerCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<GeneratorManufacturerEntity> _generatorManufacturerCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<GeneratorManufacturerEntity> _generatorManufacturerCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<GeneratorManufacturerEntity> _generatorManufacturerCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<GeneratorNonDriveEndEntity> _generatorNonDriveEndCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<GeneratorRotorEntity> _generatorRotorCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<HousingErrorEntity> _housingErrorCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<HousingErrorEntity> _housingErrorCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<HousingErrorEntity> _housingErrorCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<HousingErrorEntity> _housingErrorCollectionViaComponentInspectionReportGearbox____;
		private EntityCollection<HousingErrorEntity> _housingErrorCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<HousingErrorEntity> _housingErrorCollectionViaComponentInspectionReportGearbox_____;
		private EntityCollection<InlineFilterEntity> _inlineFilterCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<MagnetPosEntity> _magnetPosCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<MainBearingErrorLocationEntity> _mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing;
		private EntityCollection<MainBearingManufacturerEntity> _mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing;
		private EntityCollection<MainBearingManufacturerEntity> _mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_;
		private EntityCollection<MechanicalOilPumpEntity> _mechanicalOilPumpCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<NoiseEntity> _noiseCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator_;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator___;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator____;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator__;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator______;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator_____;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator________;
		private EntityCollection<OhmUnitEntity> _ohmUnitCollectionViaComponentInspectionReportGenerator_______;
		private EntityCollection<OilLevelEntity> _oilLevelCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<OilTypeEntity> _oilTypeCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<OilTypeEntity> _oilTypeCollectionViaComponentInspectionReportMainBearing;
		private EntityCollection<OverallGearboxConditionEntity> _overallGearboxConditionCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<ShaftErrorEntity> _shaftErrorCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<ShaftErrorEntity> _shaftErrorCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<ShaftErrorEntity> _shaftErrorCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<ShaftErrorEntity> _shaftErrorCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<ShaftTypeEntity> _shaftTypeCollectionViaComponentInspectionReportGearbox_;
		private EntityCollection<ShaftTypeEntity> _shaftTypeCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<ShaftTypeEntity> _shaftTypeCollectionViaComponentInspectionReportGearbox__;
		private EntityCollection<ShaftTypeEntity> _shaftTypeCollectionViaComponentInspectionReportGearbox___;
		private EntityCollection<ShrinkElementEntity> _shrinkElementCollectionViaComponentInspectionReportGearbox;
		private EntityCollection<SkiipackFailureCauseEntity> _skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP;
		private EntityCollection<SurgeArrestorEntity> _surgeArrestorCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<TowerHeightEntity> _towerHeightCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<TowerTypeEntity> _towerTypeCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<TransformerManufacturerEntity> _transformerManufacturerCollectionViaComponentInspectionReportTransformer;
		private EntityCollection<TransformerManufacturerEntity> _transformerManufacturerCollectionViaComponentInspectionReportGeneral;
		private EntityCollection<VibrationsEntity> _vibrationsCollectionViaComponentInspectionReportGearbox;
		private BooleanAnswerEntity _booleanAnswer__;
		private BooleanAnswerEntity _booleanAnswer_;
		private BooleanAnswerEntity _booleanAnswer;
		private ComponentInspectionReportTypeEntity _componentInspectionReportType;
		private CountryIsoEntity _countryIso;
		private LocationTypeEntity _locationType;
		private ReportTypeEntity _reportType;
		private SbuEntity _sbu;
		private ServiceReportNumberTypeEntity _serviceReportNumberType;
		private TurbineMatrixEntity _turbineMatrix;
		private TurbineRunStatusEntity _turbineRunStatus_;
		private TurbineRunStatusEntity _turbineRunStatus;

		
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		#endregion

		#region Statics
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static class MemberNames
		{
			/// <summary>Member name BooleanAnswer__</summary>
			public static readonly string BooleanAnswer__ = "BooleanAnswer__";
			/// <summary>Member name BooleanAnswer_</summary>
			public static readonly string BooleanAnswer_ = "BooleanAnswer_";
			/// <summary>Member name BooleanAnswer</summary>
			public static readonly string BooleanAnswer = "BooleanAnswer";
			/// <summary>Member name ComponentInspectionReportType</summary>
			public static readonly string ComponentInspectionReportType = "ComponentInspectionReportType";
			/// <summary>Member name CountryIso</summary>
			public static readonly string CountryIso = "CountryIso";
			/// <summary>Member name LocationType</summary>
			public static readonly string LocationType = "LocationType";
			/// <summary>Member name ReportType</summary>
			public static readonly string ReportType = "ReportType";
			/// <summary>Member name Sbu</summary>
			public static readonly string Sbu = "Sbu";
			/// <summary>Member name ServiceReportNumberType</summary>
			public static readonly string ServiceReportNumberType = "ServiceReportNumberType";
			/// <summary>Member name TurbineMatrix</summary>
			public static readonly string TurbineMatrix = "TurbineMatrix";
			/// <summary>Member name TurbineRunStatus_</summary>
			public static readonly string TurbineRunStatus_ = "TurbineRunStatus_";
			/// <summary>Member name TurbineRunStatus</summary>
			public static readonly string TurbineRunStatus = "TurbineRunStatus";
			/// <summary>Member name ComponentInspectionReportBlade</summary>
			public static readonly string ComponentInspectionReportBlade = "ComponentInspectionReportBlade";
			/// <summary>Member name ComponentInspectionReportGearbox</summary>
			public static readonly string ComponentInspectionReportGearbox = "ComponentInspectionReportGearbox";
			/// <summary>Member name ComponentInspectionReportGeneral</summary>
			public static readonly string ComponentInspectionReportGeneral = "ComponentInspectionReportGeneral";
			/// <summary>Member name ComponentInspectionReportGenerator</summary>
			public static readonly string ComponentInspectionReportGenerator = "ComponentInspectionReportGenerator";
			/// <summary>Member name ComponentInspectionReportMainBearing</summary>
			public static readonly string ComponentInspectionReportMainBearing = "ComponentInspectionReportMainBearing";
			/// <summary>Member name ComponentInspectionReportSkiiP</summary>
			public static readonly string ComponentInspectionReportSkiiP = "ComponentInspectionReportSkiiP";
			/// <summary>Member name ComponentInspectionReportTransformer</summary>
			public static readonly string ComponentInspectionReportTransformer = "ComponentInspectionReportTransformer";
			/// <summary>Member name ActionOnTransformerCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string ActionOnTransformerCollectionViaComponentInspectionReportTransformer = "ActionOnTransformerCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator = "ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name ArcDetectionCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string ArcDetectionCollectionViaComponentInspectionReportTransformer = "ArcDetectionCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name BearingErrorCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string BearingErrorCollectionViaComponentInspectionReportGearbox____ = "BearingErrorCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name BearingErrorCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string BearingErrorCollectionViaComponentInspectionReportGearbox = "BearingErrorCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name BearingErrorCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string BearingErrorCollectionViaComponentInspectionReportGearbox___ = "BearingErrorCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name BearingErrorCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string BearingErrorCollectionViaComponentInspectionReportGearbox_ = "BearingErrorCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name BearingErrorCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string BearingErrorCollectionViaComponentInspectionReportGearbox_____ = "BearingErrorCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name BearingErrorCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string BearingErrorCollectionViaComponentInspectionReportGearbox__ = "BearingErrorCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name BearingPosCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string BearingPosCollectionViaComponentInspectionReportGearbox____ = "BearingPosCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name BearingPosCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string BearingPosCollectionViaComponentInspectionReportGearbox_ = "BearingPosCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name BearingPosCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string BearingPosCollectionViaComponentInspectionReportGearbox__ = "BearingPosCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name BearingPosCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string BearingPosCollectionViaComponentInspectionReportGearbox___ = "BearingPosCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name BearingPosCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string BearingPosCollectionViaComponentInspectionReportGearbox = "BearingPosCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name BearingPosCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string BearingPosCollectionViaComponentInspectionReportGearbox_____ = "BearingPosCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name BearingTypeCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string BearingTypeCollectionViaComponentInspectionReportGearbox_ = "BearingTypeCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name BearingTypeCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string BearingTypeCollectionViaComponentInspectionReportGearbox__ = "BearingTypeCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name BearingTypeCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string BearingTypeCollectionViaComponentInspectionReportGearbox___ = "BearingTypeCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name BearingTypeCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string BearingTypeCollectionViaComponentInspectionReportGearbox = "BearingTypeCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name BearingTypeCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string BearingTypeCollectionViaComponentInspectionReportGearbox____ = "BearingTypeCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name BearingTypeCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string BearingTypeCollectionViaComponentInspectionReportGearbox_____ = "BearingTypeCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name BladeColorCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string BladeColorCollectionViaComponentInspectionReportBlade = "BladeColorCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name BladeLengthCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string BladeLengthCollectionViaComponentInspectionReportBlade = "BladeLengthCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP______</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP______ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP______";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP___</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP___ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP____</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP____ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP____";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportGeneral_</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportGeneral_ = "BooleanAnswerCollectionViaComponentInspectionReportGeneral_";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportBlade_</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportBlade_ = "BooleanAnswerCollectionViaComponentInspectionReportBlade_";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportBlade = "BooleanAnswerCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportGeneral = "BooleanAnswerCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportGenerator = "BooleanAnswerCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportMainBearing</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportMainBearing = "BooleanAnswerCollectionViaComponentInspectionReportMainBearing";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportTransformer = "BooleanAnswerCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP__</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP__ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportGearbox = "BooleanAnswerCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportGearbox_ = "BooleanAnswerCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________";
			/// <summary>Member name BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________</summary>
			public static readonly string BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________ = "BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________";
			/// <summary>Member name BracketsCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string BracketsCollectionViaComponentInspectionReportTransformer = "BracketsCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name CableConditionCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string CableConditionCollectionViaComponentInspectionReportTransformer = "CableConditionCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name CableConditionCollectionViaComponentInspectionReportTransformer_</summary>
			public static readonly string CableConditionCollectionViaComponentInspectionReportTransformer_ = "CableConditionCollectionViaComponentInspectionReportTransformer_";
			/// <summary>Member name ClimateCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string ClimateCollectionViaComponentInspectionReportTransformer = "ClimateCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name CoilConditionCollectionViaComponentInspectionReportTransformer_</summary>
			public static readonly string CoilConditionCollectionViaComponentInspectionReportTransformer_ = "CoilConditionCollectionViaComponentInspectionReportTransformer_";
			/// <summary>Member name CoilConditionCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string CoilConditionCollectionViaComponentInspectionReportTransformer = "CoilConditionCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name ComponentGroupCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string ComponentGroupCollectionViaComponentInspectionReportGeneral = "ComponentGroupCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name ConnectionBarsCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string ConnectionBarsCollectionViaComponentInspectionReportTransformer = "ConnectionBarsCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name ControllerTypeCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string ControllerTypeCollectionViaComponentInspectionReportGeneral = "ControllerTypeCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name CouplingCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string CouplingCollectionViaComponentInspectionReportGenerator = "CouplingCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name CouplingCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string CouplingCollectionViaComponentInspectionReportGearbox = "CouplingCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox__________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox__________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox__________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox__________________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox__________________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox__________________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox______</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox______ = "DamageDecisionCollectionViaComponentInspectionReportGearbox______";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_______</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_______ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_______";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox___________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox___________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox___________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_________________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_________________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_________________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox________________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox________________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox________________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox____________________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox____________________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox____________________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox___________________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox___________________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox___________________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_____________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_____________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_____________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox____________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox____________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox____________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_______________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_______________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_______________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox______________</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox______________ = "DamageDecisionCollectionViaComponentInspectionReportGearbox______________";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox___ = "DamageDecisionCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox = "DamageDecisionCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox__ = "DamageDecisionCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_____ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox____ = "DamageDecisionCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name DamageDecisionCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string DamageDecisionCollectionViaComponentInspectionReportGearbox_ = "DamageDecisionCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name DebrisGearboxCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string DebrisGearboxCollectionViaComponentInspectionReportGearbox = "DebrisGearboxCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name DebrisOnMagnetCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string DebrisOnMagnetCollectionViaComponentInspectionReportGearbox = "DebrisOnMagnetCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name ElectricalPumpCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string ElectricalPumpCollectionViaComponentInspectionReportGearbox = "ElectricalPumpCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name FaultCodeAreaCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string FaultCodeAreaCollectionViaComponentInspectionReportBlade = "FaultCodeAreaCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name FaultCodeCauseCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string FaultCodeCauseCollectionViaComponentInspectionReportBlade = "FaultCodeCauseCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name FaultCodeClassificationCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string FaultCodeClassificationCollectionViaComponentInspectionReportBlade = "FaultCodeClassificationCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name FaultCodeTypeCollectionViaComponentInspectionReportBlade</summary>
			public static readonly string FaultCodeTypeCollectionViaComponentInspectionReportBlade = "FaultCodeTypeCollectionViaComponentInspectionReportBlade";
			/// <summary>Member name FilterBlockTypeCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string FilterBlockTypeCollectionViaComponentInspectionReportGearbox = "FilterBlockTypeCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GearboxManufacturerCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string GearboxManufacturerCollectionViaComponentInspectionReportGeneral = "GearboxManufacturerCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name GearboxManufacturerCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string GearboxManufacturerCollectionViaComponentInspectionReportGearbox = "GearboxManufacturerCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GearboxRevisionCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string GearboxRevisionCollectionViaComponentInspectionReportGearbox = "GearboxRevisionCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GearboxTypeCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string GearboxTypeCollectionViaComponentInspectionReportGearbox = "GearboxTypeCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox____________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox____________ = "GearErrorCollectionViaComponentInspectionReportGearbox____________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox_________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox_________ = "GearErrorCollectionViaComponentInspectionReportGearbox_________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox__________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox__________ = "GearErrorCollectionViaComponentInspectionReportGearbox__________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox___________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox___________ = "GearErrorCollectionViaComponentInspectionReportGearbox___________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox_____________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox_____________ = "GearErrorCollectionViaComponentInspectionReportGearbox_____________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox_ = "GearErrorCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox______</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox______ = "GearErrorCollectionViaComponentInspectionReportGearbox______";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox______________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox______________ = "GearErrorCollectionViaComponentInspectionReportGearbox______________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox = "GearErrorCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox________</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox________ = "GearErrorCollectionViaComponentInspectionReportGearbox________";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox___ = "GearErrorCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox____ = "GearErrorCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox_____ = "GearErrorCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox__ = "GearErrorCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name GearErrorCollectionViaComponentInspectionReportGearbox_______</summary>
			public static readonly string GearErrorCollectionViaComponentInspectionReportGearbox_______ = "GearErrorCollectionViaComponentInspectionReportGearbox_______";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox = "GearTypeCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox___ = "GearTypeCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox_ = "GearTypeCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox_____ = "GearTypeCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox____ = "GearTypeCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox__ = "GearTypeCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox_________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox_________ = "GearTypeCollectionViaComponentInspectionReportGearbox_________";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox__________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox__________ = "GearTypeCollectionViaComponentInspectionReportGearbox__________";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox_______</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox_______ = "GearTypeCollectionViaComponentInspectionReportGearbox_______";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox________ = "GearTypeCollectionViaComponentInspectionReportGearbox________";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox___________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox___________ = "GearTypeCollectionViaComponentInspectionReportGearbox___________";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox______________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox______________ = "GearTypeCollectionViaComponentInspectionReportGearbox______________";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox______</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox______ = "GearTypeCollectionViaComponentInspectionReportGearbox______";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox____________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox____________ = "GearTypeCollectionViaComponentInspectionReportGearbox____________";
			/// <summary>Member name GearTypeCollectionViaComponentInspectionReportGearbox_____________</summary>
			public static readonly string GearTypeCollectionViaComponentInspectionReportGearbox_____________ = "GearTypeCollectionViaComponentInspectionReportGearbox_____________";
			/// <summary>Member name GeneratorCoverCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string GeneratorCoverCollectionViaComponentInspectionReportGenerator = "GeneratorCoverCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name GeneratorDriveEndCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string GeneratorDriveEndCollectionViaComponentInspectionReportGenerator = "GeneratorDriveEndCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_ = "GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name GeneratorManufacturerCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string GeneratorManufacturerCollectionViaComponentInspectionReportGearbox = "GeneratorManufacturerCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name GeneratorManufacturerCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string GeneratorManufacturerCollectionViaComponentInspectionReportGenerator = "GeneratorManufacturerCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name GeneratorManufacturerCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string GeneratorManufacturerCollectionViaComponentInspectionReportGeneral = "GeneratorManufacturerCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator = "GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name GeneratorRotorCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string GeneratorRotorCollectionViaComponentInspectionReportGenerator = "GeneratorRotorCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name HousingErrorCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string HousingErrorCollectionViaComponentInspectionReportGearbox_ = "HousingErrorCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name HousingErrorCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string HousingErrorCollectionViaComponentInspectionReportGearbox__ = "HousingErrorCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name HousingErrorCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string HousingErrorCollectionViaComponentInspectionReportGearbox___ = "HousingErrorCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name HousingErrorCollectionViaComponentInspectionReportGearbox____</summary>
			public static readonly string HousingErrorCollectionViaComponentInspectionReportGearbox____ = "HousingErrorCollectionViaComponentInspectionReportGearbox____";
			/// <summary>Member name HousingErrorCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string HousingErrorCollectionViaComponentInspectionReportGearbox = "HousingErrorCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name HousingErrorCollectionViaComponentInspectionReportGearbox_____</summary>
			public static readonly string HousingErrorCollectionViaComponentInspectionReportGearbox_____ = "HousingErrorCollectionViaComponentInspectionReportGearbox_____";
			/// <summary>Member name InlineFilterCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string InlineFilterCollectionViaComponentInspectionReportGearbox = "InlineFilterCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name MagnetPosCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string MagnetPosCollectionViaComponentInspectionReportGearbox = "MagnetPosCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing</summary>
			public static readonly string MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing = "MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing";
			/// <summary>Member name MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing</summary>
			public static readonly string MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing = "MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing";
			/// <summary>Member name MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_</summary>
			public static readonly string MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_ = "MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_";
			/// <summary>Member name MechanicalOilPumpCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string MechanicalOilPumpCollectionViaComponentInspectionReportGearbox = "MechanicalOilPumpCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name NoiseCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string NoiseCollectionViaComponentInspectionReportGearbox = "NoiseCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator_</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator_ = "OhmUnitCollectionViaComponentInspectionReportGenerator_";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator = "OhmUnitCollectionViaComponentInspectionReportGenerator";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator___</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator___ = "OhmUnitCollectionViaComponentInspectionReportGenerator___";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator____</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator____ = "OhmUnitCollectionViaComponentInspectionReportGenerator____";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator__</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator__ = "OhmUnitCollectionViaComponentInspectionReportGenerator__";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator______</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator______ = "OhmUnitCollectionViaComponentInspectionReportGenerator______";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator_____</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator_____ = "OhmUnitCollectionViaComponentInspectionReportGenerator_____";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator________</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator________ = "OhmUnitCollectionViaComponentInspectionReportGenerator________";
			/// <summary>Member name OhmUnitCollectionViaComponentInspectionReportGenerator_______</summary>
			public static readonly string OhmUnitCollectionViaComponentInspectionReportGenerator_______ = "OhmUnitCollectionViaComponentInspectionReportGenerator_______";
			/// <summary>Member name OilLevelCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string OilLevelCollectionViaComponentInspectionReportGearbox = "OilLevelCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name OilTypeCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string OilTypeCollectionViaComponentInspectionReportGearbox = "OilTypeCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name OilTypeCollectionViaComponentInspectionReportMainBearing</summary>
			public static readonly string OilTypeCollectionViaComponentInspectionReportMainBearing = "OilTypeCollectionViaComponentInspectionReportMainBearing";
			/// <summary>Member name OverallGearboxConditionCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string OverallGearboxConditionCollectionViaComponentInspectionReportGearbox = "OverallGearboxConditionCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name ShaftErrorCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string ShaftErrorCollectionViaComponentInspectionReportGearbox___ = "ShaftErrorCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name ShaftErrorCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string ShaftErrorCollectionViaComponentInspectionReportGearbox_ = "ShaftErrorCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name ShaftErrorCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string ShaftErrorCollectionViaComponentInspectionReportGearbox = "ShaftErrorCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name ShaftErrorCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string ShaftErrorCollectionViaComponentInspectionReportGearbox__ = "ShaftErrorCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name ShaftTypeCollectionViaComponentInspectionReportGearbox_</summary>
			public static readonly string ShaftTypeCollectionViaComponentInspectionReportGearbox_ = "ShaftTypeCollectionViaComponentInspectionReportGearbox_";
			/// <summary>Member name ShaftTypeCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string ShaftTypeCollectionViaComponentInspectionReportGearbox = "ShaftTypeCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name ShaftTypeCollectionViaComponentInspectionReportGearbox__</summary>
			public static readonly string ShaftTypeCollectionViaComponentInspectionReportGearbox__ = "ShaftTypeCollectionViaComponentInspectionReportGearbox__";
			/// <summary>Member name ShaftTypeCollectionViaComponentInspectionReportGearbox___</summary>
			public static readonly string ShaftTypeCollectionViaComponentInspectionReportGearbox___ = "ShaftTypeCollectionViaComponentInspectionReportGearbox___";
			/// <summary>Member name ShrinkElementCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string ShrinkElementCollectionViaComponentInspectionReportGearbox = "ShrinkElementCollectionViaComponentInspectionReportGearbox";
			/// <summary>Member name SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP</summary>
			public static readonly string SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP = "SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP";
			/// <summary>Member name SurgeArrestorCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string SurgeArrestorCollectionViaComponentInspectionReportTransformer = "SurgeArrestorCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name TowerHeightCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string TowerHeightCollectionViaComponentInspectionReportGeneral = "TowerHeightCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name TowerTypeCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string TowerTypeCollectionViaComponentInspectionReportGeneral = "TowerTypeCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name TransformerManufacturerCollectionViaComponentInspectionReportTransformer</summary>
			public static readonly string TransformerManufacturerCollectionViaComponentInspectionReportTransformer = "TransformerManufacturerCollectionViaComponentInspectionReportTransformer";
			/// <summary>Member name TransformerManufacturerCollectionViaComponentInspectionReportGeneral</summary>
			public static readonly string TransformerManufacturerCollectionViaComponentInspectionReportGeneral = "TransformerManufacturerCollectionViaComponentInspectionReportGeneral";
			/// <summary>Member name VibrationsCollectionViaComponentInspectionReportGearbox</summary>
			public static readonly string VibrationsCollectionViaComponentInspectionReportGearbox = "VibrationsCollectionViaComponentInspectionReportGearbox";

		}
		#endregion
		
		/// <summary> Static CTor for setting up custom property hashtables. Is executed before the first instance of this entity class or derived classes is constructed. </summary>
		static ComponentInspectionReportEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public ComponentInspectionReportEntity():base("ComponentInspectionReportEntity")
		{
			InitClassEmpty(null, CreateFields());
		}

		/// <summary> CTor</summary>
		/// <remarks>For framework usage.</remarks>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ComponentInspectionReportEntity(IEntityFields2 fields):base("ComponentInspectionReportEntity")
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ComponentInspectionReportEntity</param>
		public ComponentInspectionReportEntity(IValidator validator):base("ComponentInspectionReportEntity")
		{
			InitClassEmpty(validator, CreateFields());
		}
				

		/// <summary> CTor</summary>
		/// <param name="componentInspectionReportId">PK value for ComponentInspectionReport which data should be fetched into this ComponentInspectionReport object</param>
		/// <remarks>The entity is not fetched by this constructor. Use a DataAccessAdapter for that.</remarks>
		public ComponentInspectionReportEntity(System.Int64 componentInspectionReportId):base("ComponentInspectionReportEntity")
		{
			InitClassEmpty(null, CreateFields());
			this.ComponentInspectionReportId = componentInspectionReportId;
		}

		/// <summary> CTor</summary>
		/// <param name="componentInspectionReportId">PK value for ComponentInspectionReport which data should be fetched into this ComponentInspectionReport object</param>
		/// <param name="validator">The custom validator object for this ComponentInspectionReportEntity</param>
		/// <remarks>The entity is not fetched by this constructor. Use a DataAccessAdapter for that.</remarks>
		public ComponentInspectionReportEntity(System.Int64 componentInspectionReportId, IValidator validator):base("ComponentInspectionReportEntity")
		{
			InitClassEmpty(validator, CreateFields());
			this.ComponentInspectionReportId = componentInspectionReportId;
		}

		/// <summary> Protected CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected ComponentInspectionReportEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			if(SerializationHelper.Optimization != SerializationOptimization.Fast) 
			{
				_componentInspectionReportBlade = (EntityCollection<ComponentInspectionReportBladeEntity>)info.GetValue("_componentInspectionReportBlade", typeof(EntityCollection<ComponentInspectionReportBladeEntity>));
				_componentInspectionReportGearbox = (EntityCollection<ComponentInspectionReportGearboxEntity>)info.GetValue("_componentInspectionReportGearbox", typeof(EntityCollection<ComponentInspectionReportGearboxEntity>));
				_componentInspectionReportGeneral = (EntityCollection<ComponentInspectionReportGeneralEntity>)info.GetValue("_componentInspectionReportGeneral", typeof(EntityCollection<ComponentInspectionReportGeneralEntity>));
				_componentInspectionReportGenerator = (EntityCollection<ComponentInspectionReportGeneratorEntity>)info.GetValue("_componentInspectionReportGenerator", typeof(EntityCollection<ComponentInspectionReportGeneratorEntity>));
				_componentInspectionReportMainBearing = (EntityCollection<ComponentInspectionReportMainBearingEntity>)info.GetValue("_componentInspectionReportMainBearing", typeof(EntityCollection<ComponentInspectionReportMainBearingEntity>));
				_componentInspectionReportSkiiP = (EntityCollection<ComponentInspectionReportSkiiPEntity>)info.GetValue("_componentInspectionReportSkiiP", typeof(EntityCollection<ComponentInspectionReportSkiiPEntity>));
				_componentInspectionReportTransformer = (EntityCollection<ComponentInspectionReportTransformerEntity>)info.GetValue("_componentInspectionReportTransformer", typeof(EntityCollection<ComponentInspectionReportTransformerEntity>));
				_actionOnTransformerCollectionViaComponentInspectionReportTransformer = (EntityCollection<ActionOnTransformerEntity>)info.GetValue("_actionOnTransformerCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<ActionOnTransformerEntity>));
				_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator = (EntityCollection<ActionToBeTakenOnGeneratorEntity>)info.GetValue("_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<ActionToBeTakenOnGeneratorEntity>));
				_arcDetectionCollectionViaComponentInspectionReportTransformer = (EntityCollection<ArcDetectionEntity>)info.GetValue("_arcDetectionCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<ArcDetectionEntity>));
				_bearingErrorCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<BearingErrorEntity>)info.GetValue("_bearingErrorCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<BearingErrorEntity>));
				_bearingErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<BearingErrorEntity>)info.GetValue("_bearingErrorCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<BearingErrorEntity>));
				_bearingErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<BearingErrorEntity>)info.GetValue("_bearingErrorCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<BearingErrorEntity>));
				_bearingErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BearingErrorEntity>)info.GetValue("_bearingErrorCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<BearingErrorEntity>));
				_bearingErrorCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<BearingErrorEntity>)info.GetValue("_bearingErrorCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<BearingErrorEntity>));
				_bearingErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<BearingErrorEntity>)info.GetValue("_bearingErrorCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<BearingErrorEntity>));
				_bearingPosCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<BearingPosEntity>)info.GetValue("_bearingPosCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<BearingPosEntity>));
				_bearingPosCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BearingPosEntity>)info.GetValue("_bearingPosCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<BearingPosEntity>));
				_bearingPosCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<BearingPosEntity>)info.GetValue("_bearingPosCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<BearingPosEntity>));
				_bearingPosCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<BearingPosEntity>)info.GetValue("_bearingPosCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<BearingPosEntity>));
				_bearingPosCollectionViaComponentInspectionReportGearbox = (EntityCollection<BearingPosEntity>)info.GetValue("_bearingPosCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<BearingPosEntity>));
				_bearingPosCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<BearingPosEntity>)info.GetValue("_bearingPosCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<BearingPosEntity>));
				_bearingTypeCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BearingTypeEntity>)info.GetValue("_bearingTypeCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<BearingTypeEntity>));
				_bearingTypeCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<BearingTypeEntity>)info.GetValue("_bearingTypeCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<BearingTypeEntity>));
				_bearingTypeCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<BearingTypeEntity>)info.GetValue("_bearingTypeCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<BearingTypeEntity>));
				_bearingTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<BearingTypeEntity>)info.GetValue("_bearingTypeCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<BearingTypeEntity>));
				_bearingTypeCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<BearingTypeEntity>)info.GetValue("_bearingTypeCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<BearingTypeEntity>));
				_bearingTypeCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<BearingTypeEntity>)info.GetValue("_bearingTypeCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<BearingTypeEntity>));
				_bladeColorCollectionViaComponentInspectionReportBlade = (EntityCollection<BladeColorEntity>)info.GetValue("_bladeColorCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<BladeColorEntity>));
				_bladeLengthCollectionViaComponentInspectionReportBlade = (EntityCollection<BladeLengthEntity>)info.GetValue("_bladeLengthCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<BladeLengthEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP______ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP______", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP___ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP___", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP____ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP____", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportGeneral_ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportGeneral_", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportBlade_ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportBlade_", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportBlade = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportGeneral = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportGenerator = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportMainBearing = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportMainBearing", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportTransformer = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP__ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP__", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportGearbox = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________", typeof(EntityCollection<BooleanAnswerEntity>));
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________ = (EntityCollection<BooleanAnswerEntity>)info.GetValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________", typeof(EntityCollection<BooleanAnswerEntity>));
				_bracketsCollectionViaComponentInspectionReportTransformer = (EntityCollection<BracketsEntity>)info.GetValue("_bracketsCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<BracketsEntity>));
				_cableConditionCollectionViaComponentInspectionReportTransformer = (EntityCollection<CableConditionEntity>)info.GetValue("_cableConditionCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<CableConditionEntity>));
				_cableConditionCollectionViaComponentInspectionReportTransformer_ = (EntityCollection<CableConditionEntity>)info.GetValue("_cableConditionCollectionViaComponentInspectionReportTransformer_", typeof(EntityCollection<CableConditionEntity>));
				_climateCollectionViaComponentInspectionReportTransformer = (EntityCollection<ClimateEntity>)info.GetValue("_climateCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<ClimateEntity>));
				_coilConditionCollectionViaComponentInspectionReportTransformer_ = (EntityCollection<CoilConditionEntity>)info.GetValue("_coilConditionCollectionViaComponentInspectionReportTransformer_", typeof(EntityCollection<CoilConditionEntity>));
				_coilConditionCollectionViaComponentInspectionReportTransformer = (EntityCollection<CoilConditionEntity>)info.GetValue("_coilConditionCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<CoilConditionEntity>));
				_componentGroupCollectionViaComponentInspectionReportGeneral = (EntityCollection<ComponentGroupEntity>)info.GetValue("_componentGroupCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<ComponentGroupEntity>));
				_connectionBarsCollectionViaComponentInspectionReportTransformer = (EntityCollection<ConnectionBarsEntity>)info.GetValue("_connectionBarsCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<ConnectionBarsEntity>));
				_controllerTypeCollectionViaComponentInspectionReportGeneral = (EntityCollection<ControllerTypeEntity>)info.GetValue("_controllerTypeCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<ControllerTypeEntity>));
				_couplingCollectionViaComponentInspectionReportGenerator = (EntityCollection<CouplingEntity>)info.GetValue("_couplingCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<CouplingEntity>));
				_couplingCollectionViaComponentInspectionReportGearbox = (EntityCollection<CouplingEntity>)info.GetValue("_couplingCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<CouplingEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox__________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox__________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox__________________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox__________________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox______ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox______", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_______ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_______", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox___________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox___________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_________________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_________________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox________________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox________________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox____________________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox____________________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox___________________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox___________________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_____________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_____________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox____________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox____________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_______________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_______________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox______________ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox______________", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<DamageDecisionEntity>));
				_damageDecisionCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<DamageDecisionEntity>)info.GetValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<DamageDecisionEntity>));
				_debrisGearboxCollectionViaComponentInspectionReportGearbox = (EntityCollection<DebrisGearboxEntity>)info.GetValue("_debrisGearboxCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<DebrisGearboxEntity>));
				_debrisOnMagnetCollectionViaComponentInspectionReportGearbox = (EntityCollection<DebrisOnMagnetEntity>)info.GetValue("_debrisOnMagnetCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<DebrisOnMagnetEntity>));
				_electricalPumpCollectionViaComponentInspectionReportGearbox = (EntityCollection<ElectricalPumpEntity>)info.GetValue("_electricalPumpCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<ElectricalPumpEntity>));
				_faultCodeAreaCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeAreaEntity>)info.GetValue("_faultCodeAreaCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<FaultCodeAreaEntity>));
				_faultCodeCauseCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeCauseEntity>)info.GetValue("_faultCodeCauseCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<FaultCodeCauseEntity>));
				_faultCodeClassificationCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeClassificationEntity>)info.GetValue("_faultCodeClassificationCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<FaultCodeClassificationEntity>));
				_faultCodeTypeCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeTypeEntity>)info.GetValue("_faultCodeTypeCollectionViaComponentInspectionReportBlade", typeof(EntityCollection<FaultCodeTypeEntity>));
				_filterBlockTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<FilterBlockTypeEntity>)info.GetValue("_filterBlockTypeCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<FilterBlockTypeEntity>));
				_gearboxManufacturerCollectionViaComponentInspectionReportGeneral = (EntityCollection<GearboxManufacturerEntity>)info.GetValue("_gearboxManufacturerCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<GearboxManufacturerEntity>));
				_gearboxManufacturerCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearboxManufacturerEntity>)info.GetValue("_gearboxManufacturerCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<GearboxManufacturerEntity>));
				_gearboxRevisionCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearboxRevisionEntity>)info.GetValue("_gearboxRevisionCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<GearboxRevisionEntity>));
				_gearboxTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearboxTypeEntity>)info.GetValue("_gearboxTypeCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<GearboxTypeEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox____________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox____________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox_________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox_________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox__________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox__________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox___________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox___________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox_____________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox_____________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox______ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox______", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox______________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox______________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox________ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox________", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<GearErrorEntity>));
				_gearErrorCollectionViaComponentInspectionReportGearbox_______ = (EntityCollection<GearErrorEntity>)info.GetValue("_gearErrorCollectionViaComponentInspectionReportGearbox_______", typeof(EntityCollection<GearErrorEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox_________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox_________", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox__________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox__________", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox_______ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox_______", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox________", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox___________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox___________", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox______________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox______________", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox______ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox______", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox____________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox____________", typeof(EntityCollection<GearTypeEntity>));
				_gearTypeCollectionViaComponentInspectionReportGearbox_____________ = (EntityCollection<GearTypeEntity>)info.GetValue("_gearTypeCollectionViaComponentInspectionReportGearbox_____________", typeof(EntityCollection<GearTypeEntity>));
				_generatorCoverCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorCoverEntity>)info.GetValue("_generatorCoverCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<GeneratorCoverEntity>));
				_generatorDriveEndCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorDriveEndEntity>)info.GetValue("_generatorDriveEndCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<GeneratorDriveEndEntity>));
				_generatorManufacturerCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<GeneratorManufacturerEntity>)info.GetValue("_generatorManufacturerCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<GeneratorManufacturerEntity>));
				_generatorManufacturerCollectionViaComponentInspectionReportGearbox = (EntityCollection<GeneratorManufacturerEntity>)info.GetValue("_generatorManufacturerCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<GeneratorManufacturerEntity>));
				_generatorManufacturerCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorManufacturerEntity>)info.GetValue("_generatorManufacturerCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<GeneratorManufacturerEntity>));
				_generatorManufacturerCollectionViaComponentInspectionReportGeneral = (EntityCollection<GeneratorManufacturerEntity>)info.GetValue("_generatorManufacturerCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<GeneratorManufacturerEntity>));
				_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorNonDriveEndEntity>)info.GetValue("_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<GeneratorNonDriveEndEntity>));
				_generatorRotorCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorRotorEntity>)info.GetValue("_generatorRotorCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<GeneratorRotorEntity>));
				_housingErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<HousingErrorEntity>)info.GetValue("_housingErrorCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<HousingErrorEntity>));
				_housingErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<HousingErrorEntity>)info.GetValue("_housingErrorCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<HousingErrorEntity>));
				_housingErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<HousingErrorEntity>)info.GetValue("_housingErrorCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<HousingErrorEntity>));
				_housingErrorCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<HousingErrorEntity>)info.GetValue("_housingErrorCollectionViaComponentInspectionReportGearbox____", typeof(EntityCollection<HousingErrorEntity>));
				_housingErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<HousingErrorEntity>)info.GetValue("_housingErrorCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<HousingErrorEntity>));
				_housingErrorCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<HousingErrorEntity>)info.GetValue("_housingErrorCollectionViaComponentInspectionReportGearbox_____", typeof(EntityCollection<HousingErrorEntity>));
				_inlineFilterCollectionViaComponentInspectionReportGearbox = (EntityCollection<InlineFilterEntity>)info.GetValue("_inlineFilterCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<InlineFilterEntity>));
				_magnetPosCollectionViaComponentInspectionReportGearbox = (EntityCollection<MagnetPosEntity>)info.GetValue("_magnetPosCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<MagnetPosEntity>));
				_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing = (EntityCollection<MainBearingErrorLocationEntity>)info.GetValue("_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing", typeof(EntityCollection<MainBearingErrorLocationEntity>));
				_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing = (EntityCollection<MainBearingManufacturerEntity>)info.GetValue("_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing", typeof(EntityCollection<MainBearingManufacturerEntity>));
				_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_ = (EntityCollection<MainBearingManufacturerEntity>)info.GetValue("_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_", typeof(EntityCollection<MainBearingManufacturerEntity>));
				_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox = (EntityCollection<MechanicalOilPumpEntity>)info.GetValue("_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<MechanicalOilPumpEntity>));
				_noiseCollectionViaComponentInspectionReportGearbox = (EntityCollection<NoiseEntity>)info.GetValue("_noiseCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<NoiseEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator_ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator_", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator___ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator___", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator____ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator____", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator__ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator__", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator______ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator______", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator_____ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator_____", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator________ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator________", typeof(EntityCollection<OhmUnitEntity>));
				_ohmUnitCollectionViaComponentInspectionReportGenerator_______ = (EntityCollection<OhmUnitEntity>)info.GetValue("_ohmUnitCollectionViaComponentInspectionReportGenerator_______", typeof(EntityCollection<OhmUnitEntity>));
				_oilLevelCollectionViaComponentInspectionReportGearbox = (EntityCollection<OilLevelEntity>)info.GetValue("_oilLevelCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<OilLevelEntity>));
				_oilTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<OilTypeEntity>)info.GetValue("_oilTypeCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<OilTypeEntity>));
				_oilTypeCollectionViaComponentInspectionReportMainBearing = (EntityCollection<OilTypeEntity>)info.GetValue("_oilTypeCollectionViaComponentInspectionReportMainBearing", typeof(EntityCollection<OilTypeEntity>));
				_overallGearboxConditionCollectionViaComponentInspectionReportGearbox = (EntityCollection<OverallGearboxConditionEntity>)info.GetValue("_overallGearboxConditionCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<OverallGearboxConditionEntity>));
				_shaftErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<ShaftErrorEntity>)info.GetValue("_shaftErrorCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<ShaftErrorEntity>));
				_shaftErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<ShaftErrorEntity>)info.GetValue("_shaftErrorCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<ShaftErrorEntity>));
				_shaftErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<ShaftErrorEntity>)info.GetValue("_shaftErrorCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<ShaftErrorEntity>));
				_shaftErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<ShaftErrorEntity>)info.GetValue("_shaftErrorCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<ShaftErrorEntity>));
				_shaftTypeCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<ShaftTypeEntity>)info.GetValue("_shaftTypeCollectionViaComponentInspectionReportGearbox_", typeof(EntityCollection<ShaftTypeEntity>));
				_shaftTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<ShaftTypeEntity>)info.GetValue("_shaftTypeCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<ShaftTypeEntity>));
				_shaftTypeCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<ShaftTypeEntity>)info.GetValue("_shaftTypeCollectionViaComponentInspectionReportGearbox__", typeof(EntityCollection<ShaftTypeEntity>));
				_shaftTypeCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<ShaftTypeEntity>)info.GetValue("_shaftTypeCollectionViaComponentInspectionReportGearbox___", typeof(EntityCollection<ShaftTypeEntity>));
				_shrinkElementCollectionViaComponentInspectionReportGearbox = (EntityCollection<ShrinkElementEntity>)info.GetValue("_shrinkElementCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<ShrinkElementEntity>));
				_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP = (EntityCollection<SkiipackFailureCauseEntity>)info.GetValue("_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP", typeof(EntityCollection<SkiipackFailureCauseEntity>));
				_surgeArrestorCollectionViaComponentInspectionReportTransformer = (EntityCollection<SurgeArrestorEntity>)info.GetValue("_surgeArrestorCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<SurgeArrestorEntity>));
				_towerHeightCollectionViaComponentInspectionReportGeneral = (EntityCollection<TowerHeightEntity>)info.GetValue("_towerHeightCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<TowerHeightEntity>));
				_towerTypeCollectionViaComponentInspectionReportGeneral = (EntityCollection<TowerTypeEntity>)info.GetValue("_towerTypeCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<TowerTypeEntity>));
				_transformerManufacturerCollectionViaComponentInspectionReportTransformer = (EntityCollection<TransformerManufacturerEntity>)info.GetValue("_transformerManufacturerCollectionViaComponentInspectionReportTransformer", typeof(EntityCollection<TransformerManufacturerEntity>));
				_transformerManufacturerCollectionViaComponentInspectionReportGeneral = (EntityCollection<TransformerManufacturerEntity>)info.GetValue("_transformerManufacturerCollectionViaComponentInspectionReportGeneral", typeof(EntityCollection<TransformerManufacturerEntity>));
				_vibrationsCollectionViaComponentInspectionReportGearbox = (EntityCollection<VibrationsEntity>)info.GetValue("_vibrationsCollectionViaComponentInspectionReportGearbox", typeof(EntityCollection<VibrationsEntity>));
				_booleanAnswer__ = (BooleanAnswerEntity)info.GetValue("_booleanAnswer__", typeof(BooleanAnswerEntity));
				if(_booleanAnswer__!=null)
				{
					_booleanAnswer__.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_booleanAnswer_ = (BooleanAnswerEntity)info.GetValue("_booleanAnswer_", typeof(BooleanAnswerEntity));
				if(_booleanAnswer_!=null)
				{
					_booleanAnswer_.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_booleanAnswer = (BooleanAnswerEntity)info.GetValue("_booleanAnswer", typeof(BooleanAnswerEntity));
				if(_booleanAnswer!=null)
				{
					_booleanAnswer.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_componentInspectionReportType = (ComponentInspectionReportTypeEntity)info.GetValue("_componentInspectionReportType", typeof(ComponentInspectionReportTypeEntity));
				if(_componentInspectionReportType!=null)
				{
					_componentInspectionReportType.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_countryIso = (CountryIsoEntity)info.GetValue("_countryIso", typeof(CountryIsoEntity));
				if(_countryIso!=null)
				{
					_countryIso.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_locationType = (LocationTypeEntity)info.GetValue("_locationType", typeof(LocationTypeEntity));
				if(_locationType!=null)
				{
					_locationType.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_reportType = (ReportTypeEntity)info.GetValue("_reportType", typeof(ReportTypeEntity));
				if(_reportType!=null)
				{
					_reportType.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_sbu = (SbuEntity)info.GetValue("_sbu", typeof(SbuEntity));
				if(_sbu!=null)
				{
					_sbu.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_serviceReportNumberType = (ServiceReportNumberTypeEntity)info.GetValue("_serviceReportNumberType", typeof(ServiceReportNumberTypeEntity));
				if(_serviceReportNumberType!=null)
				{
					_serviceReportNumberType.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_turbineMatrix = (TurbineMatrixEntity)info.GetValue("_turbineMatrix", typeof(TurbineMatrixEntity));
				if(_turbineMatrix!=null)
				{
					_turbineMatrix.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_turbineRunStatus_ = (TurbineRunStatusEntity)info.GetValue("_turbineRunStatus_", typeof(TurbineRunStatusEntity));
				if(_turbineRunStatus_!=null)
				{
					_turbineRunStatus_.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_turbineRunStatus = (TurbineRunStatusEntity)info.GetValue("_turbineRunStatus", typeof(TurbineRunStatusEntity));
				if(_turbineRunStatus!=null)
				{
					_turbineRunStatus.AfterSave+=new EventHandler(OnEntityAfterSave);
				}

				base.FixupDeserialization(FieldInfoProviderSingleton.GetInstance());
			}
			
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		
		/// <summary>Performs the desync setup when an FK field has been changed. The entity referenced based on the FK field will be dereferenced and sync info will be removed.</summary>
		/// <param name="fieldIndex">The fieldindex.</param>
		protected override void PerformDesyncSetupFKFieldChange(int fieldIndex)
		{
			switch((ComponentInspectionReportFieldIndex)fieldIndex)
			{
				case ComponentInspectionReportFieldIndex.ComponentInspectionReportTypeId:
					DesetupSyncComponentInspectionReportType(true, false);
					break;
				case ComponentInspectionReportFieldIndex.ReportTypeId:
					DesetupSyncReportType(true, false);
					break;
				case ComponentInspectionReportFieldIndex.ReconstructionBooleanAnswerId:
					DesetupSyncBooleanAnswer(true, false);
					break;
				case ComponentInspectionReportFieldIndex.CountryIsoid:
					DesetupSyncCountryIso(true, false);
					break;
				case ComponentInspectionReportFieldIndex.TurbineMatrixId:
					DesetupSyncTurbineMatrix(true, false);
					break;
				case ComponentInspectionReportFieldIndex.LocationTypeId:
					DesetupSyncLocationType(true, false);
					break;
				case ComponentInspectionReportFieldIndex.SecondGeneratorBooleanAnswerId:
					DesetupSyncBooleanAnswer_(true, false);
					break;
				case ComponentInspectionReportFieldIndex.BeforeInspectionTurbineRunStatusId:
					DesetupSyncTurbineRunStatus(true, false);
					break;
				case ComponentInspectionReportFieldIndex.ServiceReportNumberTypeId:
					DesetupSyncServiceReportNumberType(true, false);
					break;
				case ComponentInspectionReportFieldIndex.AfterInspectionTurbineRunStatusId:
					DesetupSyncTurbineRunStatus_(true, false);
					break;
				case ComponentInspectionReportFieldIndex.Sbuid:
					DesetupSyncSbu(true, false);
					break;
				case ComponentInspectionReportFieldIndex.MountedOnMainComponentBooleanAnswerId:
					DesetupSyncBooleanAnswer__(true, false);
					break;
				default:
					base.PerformDesyncSetupFKFieldChange(fieldIndex);
					break;
			}
		}
		
		/// <summary> Sets the related entity property to the entity specified. If the property is a collection, it will add the entity specified to that collection.</summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <param name="entity">Entity to set as an related entity</param>
		/// <remarks>Used by prefetch path logic.</remarks>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void SetRelatedEntityProperty(string propertyName, IEntity2 entity)
		{
			switch(propertyName)
			{
				case "BooleanAnswer__":
					this.BooleanAnswer__ = (BooleanAnswerEntity)entity;
					break;
				case "BooleanAnswer_":
					this.BooleanAnswer_ = (BooleanAnswerEntity)entity;
					break;
				case "BooleanAnswer":
					this.BooleanAnswer = (BooleanAnswerEntity)entity;
					break;
				case "ComponentInspectionReportType":
					this.ComponentInspectionReportType = (ComponentInspectionReportTypeEntity)entity;
					break;
				case "CountryIso":
					this.CountryIso = (CountryIsoEntity)entity;
					break;
				case "LocationType":
					this.LocationType = (LocationTypeEntity)entity;
					break;
				case "ReportType":
					this.ReportType = (ReportTypeEntity)entity;
					break;
				case "Sbu":
					this.Sbu = (SbuEntity)entity;
					break;
				case "ServiceReportNumberType":
					this.ServiceReportNumberType = (ServiceReportNumberTypeEntity)entity;
					break;
				case "TurbineMatrix":
					this.TurbineMatrix = (TurbineMatrixEntity)entity;
					break;
				case "TurbineRunStatus_":
					this.TurbineRunStatus_ = (TurbineRunStatusEntity)entity;
					break;
				case "TurbineRunStatus":
					this.TurbineRunStatus = (TurbineRunStatusEntity)entity;
					break;
				case "ComponentInspectionReportBlade":
					this.ComponentInspectionReportBlade.Add((ComponentInspectionReportBladeEntity)entity);
					break;
				case "ComponentInspectionReportGearbox":
					this.ComponentInspectionReportGearbox.Add((ComponentInspectionReportGearboxEntity)entity);
					break;
				case "ComponentInspectionReportGeneral":
					this.ComponentInspectionReportGeneral.Add((ComponentInspectionReportGeneralEntity)entity);
					break;
				case "ComponentInspectionReportGenerator":
					this.ComponentInspectionReportGenerator.Add((ComponentInspectionReportGeneratorEntity)entity);
					break;
				case "ComponentInspectionReportMainBearing":
					this.ComponentInspectionReportMainBearing.Add((ComponentInspectionReportMainBearingEntity)entity);
					break;
				case "ComponentInspectionReportSkiiP":
					this.ComponentInspectionReportSkiiP.Add((ComponentInspectionReportSkiiPEntity)entity);
					break;
				case "ComponentInspectionReportTransformer":
					this.ComponentInspectionReportTransformer.Add((ComponentInspectionReportTransformerEntity)entity);
					break;
				case "ActionOnTransformerCollectionViaComponentInspectionReportTransformer":
					this.ActionOnTransformerCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.ActionOnTransformerCollectionViaComponentInspectionReportTransformer.Add((ActionOnTransformerEntity)entity);
					this.ActionOnTransformerCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator":
					this.ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator.Add((ActionToBeTakenOnGeneratorEntity)entity);
					this.ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "ArcDetectionCollectionViaComponentInspectionReportTransformer":
					this.ArcDetectionCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.ArcDetectionCollectionViaComponentInspectionReportTransformer.Add((ArcDetectionEntity)entity);
					this.ArcDetectionCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "BearingErrorCollectionViaComponentInspectionReportGearbox____":
					this.BearingErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.BearingErrorCollectionViaComponentInspectionReportGearbox____.Add((BearingErrorEntity)entity);
					this.BearingErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "BearingErrorCollectionViaComponentInspectionReportGearbox":
					this.BearingErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.BearingErrorCollectionViaComponentInspectionReportGearbox.Add((BearingErrorEntity)entity);
					this.BearingErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "BearingErrorCollectionViaComponentInspectionReportGearbox___":
					this.BearingErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.BearingErrorCollectionViaComponentInspectionReportGearbox___.Add((BearingErrorEntity)entity);
					this.BearingErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "BearingErrorCollectionViaComponentInspectionReportGearbox_":
					this.BearingErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.BearingErrorCollectionViaComponentInspectionReportGearbox_.Add((BearingErrorEntity)entity);
					this.BearingErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "BearingErrorCollectionViaComponentInspectionReportGearbox_____":
					this.BearingErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.BearingErrorCollectionViaComponentInspectionReportGearbox_____.Add((BearingErrorEntity)entity);
					this.BearingErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "BearingErrorCollectionViaComponentInspectionReportGearbox__":
					this.BearingErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.BearingErrorCollectionViaComponentInspectionReportGearbox__.Add((BearingErrorEntity)entity);
					this.BearingErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "BearingPosCollectionViaComponentInspectionReportGearbox____":
					this.BearingPosCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.BearingPosCollectionViaComponentInspectionReportGearbox____.Add((BearingPosEntity)entity);
					this.BearingPosCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "BearingPosCollectionViaComponentInspectionReportGearbox_":
					this.BearingPosCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.BearingPosCollectionViaComponentInspectionReportGearbox_.Add((BearingPosEntity)entity);
					this.BearingPosCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "BearingPosCollectionViaComponentInspectionReportGearbox__":
					this.BearingPosCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.BearingPosCollectionViaComponentInspectionReportGearbox__.Add((BearingPosEntity)entity);
					this.BearingPosCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "BearingPosCollectionViaComponentInspectionReportGearbox___":
					this.BearingPosCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.BearingPosCollectionViaComponentInspectionReportGearbox___.Add((BearingPosEntity)entity);
					this.BearingPosCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "BearingPosCollectionViaComponentInspectionReportGearbox":
					this.BearingPosCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.BearingPosCollectionViaComponentInspectionReportGearbox.Add((BearingPosEntity)entity);
					this.BearingPosCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "BearingPosCollectionViaComponentInspectionReportGearbox_____":
					this.BearingPosCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.BearingPosCollectionViaComponentInspectionReportGearbox_____.Add((BearingPosEntity)entity);
					this.BearingPosCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "BearingTypeCollectionViaComponentInspectionReportGearbox_":
					this.BearingTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.BearingTypeCollectionViaComponentInspectionReportGearbox_.Add((BearingTypeEntity)entity);
					this.BearingTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "BearingTypeCollectionViaComponentInspectionReportGearbox__":
					this.BearingTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.BearingTypeCollectionViaComponentInspectionReportGearbox__.Add((BearingTypeEntity)entity);
					this.BearingTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "BearingTypeCollectionViaComponentInspectionReportGearbox___":
					this.BearingTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.BearingTypeCollectionViaComponentInspectionReportGearbox___.Add((BearingTypeEntity)entity);
					this.BearingTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "BearingTypeCollectionViaComponentInspectionReportGearbox":
					this.BearingTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.BearingTypeCollectionViaComponentInspectionReportGearbox.Add((BearingTypeEntity)entity);
					this.BearingTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "BearingTypeCollectionViaComponentInspectionReportGearbox____":
					this.BearingTypeCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.BearingTypeCollectionViaComponentInspectionReportGearbox____.Add((BearingTypeEntity)entity);
					this.BearingTypeCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "BearingTypeCollectionViaComponentInspectionReportGearbox_____":
					this.BearingTypeCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.BearingTypeCollectionViaComponentInspectionReportGearbox_____.Add((BearingTypeEntity)entity);
					this.BearingTypeCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "BladeColorCollectionViaComponentInspectionReportBlade":
					this.BladeColorCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.BladeColorCollectionViaComponentInspectionReportBlade.Add((BladeColorEntity)entity);
					this.BladeColorCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "BladeLengthCollectionViaComponentInspectionReportBlade":
					this.BladeLengthCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.BladeLengthCollectionViaComponentInspectionReportBlade.Add((BladeLengthEntity)entity);
					this.BladeLengthCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP______":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP______.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP______.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP______.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP____":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP____.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP____.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP____.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportGeneral_":
					this.BooleanAnswerCollectionViaComponentInspectionReportGeneral_.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportGeneral_.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportGeneral_.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportBlade_":
					this.BooleanAnswerCollectionViaComponentInspectionReportBlade_.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportBlade_.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportBlade_.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportBlade":
					this.BooleanAnswerCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportBlade.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportGeneral":
					this.BooleanAnswerCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportGeneral.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportGenerator":
					this.BooleanAnswerCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportGenerator.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportMainBearing":
					this.BooleanAnswerCollectionViaComponentInspectionReportMainBearing.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportMainBearing.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportMainBearing.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportTransformer":
					this.BooleanAnswerCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportTransformer.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP__.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportGearbox":
					this.BooleanAnswerCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportGearbox.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportGearbox_":
					this.BooleanAnswerCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportGearbox_.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________.IsReadOnly = true;
					break;
				case "BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________":
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________.IsReadOnly = false;
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________.Add((BooleanAnswerEntity)entity);
					this.BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________.IsReadOnly = true;
					break;
				case "BracketsCollectionViaComponentInspectionReportTransformer":
					this.BracketsCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.BracketsCollectionViaComponentInspectionReportTransformer.Add((BracketsEntity)entity);
					this.BracketsCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "CableConditionCollectionViaComponentInspectionReportTransformer":
					this.CableConditionCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.CableConditionCollectionViaComponentInspectionReportTransformer.Add((CableConditionEntity)entity);
					this.CableConditionCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "CableConditionCollectionViaComponentInspectionReportTransformer_":
					this.CableConditionCollectionViaComponentInspectionReportTransformer_.IsReadOnly = false;
					this.CableConditionCollectionViaComponentInspectionReportTransformer_.Add((CableConditionEntity)entity);
					this.CableConditionCollectionViaComponentInspectionReportTransformer_.IsReadOnly = true;
					break;
				case "ClimateCollectionViaComponentInspectionReportTransformer":
					this.ClimateCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.ClimateCollectionViaComponentInspectionReportTransformer.Add((ClimateEntity)entity);
					this.ClimateCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "CoilConditionCollectionViaComponentInspectionReportTransformer_":
					this.CoilConditionCollectionViaComponentInspectionReportTransformer_.IsReadOnly = false;
					this.CoilConditionCollectionViaComponentInspectionReportTransformer_.Add((CoilConditionEntity)entity);
					this.CoilConditionCollectionViaComponentInspectionReportTransformer_.IsReadOnly = true;
					break;
				case "CoilConditionCollectionViaComponentInspectionReportTransformer":
					this.CoilConditionCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.CoilConditionCollectionViaComponentInspectionReportTransformer.Add((CoilConditionEntity)entity);
					this.CoilConditionCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "ComponentGroupCollectionViaComponentInspectionReportGeneral":
					this.ComponentGroupCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.ComponentGroupCollectionViaComponentInspectionReportGeneral.Add((ComponentGroupEntity)entity);
					this.ComponentGroupCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "ConnectionBarsCollectionViaComponentInspectionReportTransformer":
					this.ConnectionBarsCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.ConnectionBarsCollectionViaComponentInspectionReportTransformer.Add((ConnectionBarsEntity)entity);
					this.ConnectionBarsCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "ControllerTypeCollectionViaComponentInspectionReportGeneral":
					this.ControllerTypeCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.ControllerTypeCollectionViaComponentInspectionReportGeneral.Add((ControllerTypeEntity)entity);
					this.ControllerTypeCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "CouplingCollectionViaComponentInspectionReportGenerator":
					this.CouplingCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.CouplingCollectionViaComponentInspectionReportGenerator.Add((CouplingEntity)entity);
					this.CouplingCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "CouplingCollectionViaComponentInspectionReportGearbox":
					this.CouplingCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.CouplingCollectionViaComponentInspectionReportGearbox.Add((CouplingEntity)entity);
					this.CouplingCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox__________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox__________________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__________________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__________________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__________________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox______":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox______.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox______.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox______.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_______":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_______.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_______.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_______.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox___________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_________________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_________________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_________________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_________________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox________________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox________________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox________________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox________________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox____________________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____________________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____________________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____________________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox___________________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___________________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___________________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___________________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_____________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_____________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox____________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_______________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_______________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_______________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_______________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox______________":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox______________.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox______________.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox______________.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox___":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox__":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_____":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_____.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox____":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "DamageDecisionCollectionViaComponentInspectionReportGearbox_":
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_.Add((DamageDecisionEntity)entity);
					this.DamageDecisionCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "DebrisGearboxCollectionViaComponentInspectionReportGearbox":
					this.DebrisGearboxCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.DebrisGearboxCollectionViaComponentInspectionReportGearbox.Add((DebrisGearboxEntity)entity);
					this.DebrisGearboxCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "DebrisOnMagnetCollectionViaComponentInspectionReportGearbox":
					this.DebrisOnMagnetCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.DebrisOnMagnetCollectionViaComponentInspectionReportGearbox.Add((DebrisOnMagnetEntity)entity);
					this.DebrisOnMagnetCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "ElectricalPumpCollectionViaComponentInspectionReportGearbox":
					this.ElectricalPumpCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.ElectricalPumpCollectionViaComponentInspectionReportGearbox.Add((ElectricalPumpEntity)entity);
					this.ElectricalPumpCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "FaultCodeAreaCollectionViaComponentInspectionReportBlade":
					this.FaultCodeAreaCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.FaultCodeAreaCollectionViaComponentInspectionReportBlade.Add((FaultCodeAreaEntity)entity);
					this.FaultCodeAreaCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "FaultCodeCauseCollectionViaComponentInspectionReportBlade":
					this.FaultCodeCauseCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.FaultCodeCauseCollectionViaComponentInspectionReportBlade.Add((FaultCodeCauseEntity)entity);
					this.FaultCodeCauseCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "FaultCodeClassificationCollectionViaComponentInspectionReportBlade":
					this.FaultCodeClassificationCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.FaultCodeClassificationCollectionViaComponentInspectionReportBlade.Add((FaultCodeClassificationEntity)entity);
					this.FaultCodeClassificationCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "FaultCodeTypeCollectionViaComponentInspectionReportBlade":
					this.FaultCodeTypeCollectionViaComponentInspectionReportBlade.IsReadOnly = false;
					this.FaultCodeTypeCollectionViaComponentInspectionReportBlade.Add((FaultCodeTypeEntity)entity);
					this.FaultCodeTypeCollectionViaComponentInspectionReportBlade.IsReadOnly = true;
					break;
				case "FilterBlockTypeCollectionViaComponentInspectionReportGearbox":
					this.FilterBlockTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.FilterBlockTypeCollectionViaComponentInspectionReportGearbox.Add((FilterBlockTypeEntity)entity);
					this.FilterBlockTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GearboxManufacturerCollectionViaComponentInspectionReportGeneral":
					this.GearboxManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.GearboxManufacturerCollectionViaComponentInspectionReportGeneral.Add((GearboxManufacturerEntity)entity);
					this.GearboxManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "GearboxManufacturerCollectionViaComponentInspectionReportGearbox":
					this.GearboxManufacturerCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.GearboxManufacturerCollectionViaComponentInspectionReportGearbox.Add((GearboxManufacturerEntity)entity);
					this.GearboxManufacturerCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GearboxRevisionCollectionViaComponentInspectionReportGearbox":
					this.GearboxRevisionCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.GearboxRevisionCollectionViaComponentInspectionReportGearbox.Add((GearboxRevisionEntity)entity);
					this.GearboxRevisionCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GearboxTypeCollectionViaComponentInspectionReportGearbox":
					this.GearboxTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.GearboxTypeCollectionViaComponentInspectionReportGearbox.Add((GearboxTypeEntity)entity);
					this.GearboxTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox____________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox____________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox____________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox____________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox_________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox_________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox_________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox_________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox__________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox__________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox__________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox__________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox___________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox___________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox___________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox___________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox_____________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox_____________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox_":
					this.GearErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox_.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox______":
					this.GearErrorCollectionViaComponentInspectionReportGearbox______.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox______.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox______.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox______________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox______________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox______________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox______________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox":
					this.GearErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox________":
					this.GearErrorCollectionViaComponentInspectionReportGearbox________.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox________.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox________.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox___":
					this.GearErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox___.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox____":
					this.GearErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox____.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox_____":
					this.GearErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox_____.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox__":
					this.GearErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox__.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "GearErrorCollectionViaComponentInspectionReportGearbox_______":
					this.GearErrorCollectionViaComponentInspectionReportGearbox_______.IsReadOnly = false;
					this.GearErrorCollectionViaComponentInspectionReportGearbox_______.Add((GearErrorEntity)entity);
					this.GearErrorCollectionViaComponentInspectionReportGearbox_______.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox":
					this.GearTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox___":
					this.GearTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox___.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox_":
					this.GearTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox_.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox_____":
					this.GearTypeCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox_____.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox____":
					this.GearTypeCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox____.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox__":
					this.GearTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox__.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox_________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox_________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox_________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox_________.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox__________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox__________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox__________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox__________.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox_______":
					this.GearTypeCollectionViaComponentInspectionReportGearbox_______.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox_______.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox_______.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox________.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox___________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox___________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox___________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox___________.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox______________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox______________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox______________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox______________.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox______":
					this.GearTypeCollectionViaComponentInspectionReportGearbox______.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox______.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox______.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox____________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox____________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox____________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox____________.IsReadOnly = true;
					break;
				case "GearTypeCollectionViaComponentInspectionReportGearbox_____________":
					this.GearTypeCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly = false;
					this.GearTypeCollectionViaComponentInspectionReportGearbox_____________.Add((GearTypeEntity)entity);
					this.GearTypeCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly = true;
					break;
				case "GeneratorCoverCollectionViaComponentInspectionReportGenerator":
					this.GeneratorCoverCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.GeneratorCoverCollectionViaComponentInspectionReportGenerator.Add((GeneratorCoverEntity)entity);
					this.GeneratorCoverCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "GeneratorDriveEndCollectionViaComponentInspectionReportGenerator":
					this.GeneratorDriveEndCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.GeneratorDriveEndCollectionViaComponentInspectionReportGenerator.Add((GeneratorDriveEndEntity)entity);
					this.GeneratorDriveEndCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_":
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_.Add((GeneratorManufacturerEntity)entity);
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "GeneratorManufacturerCollectionViaComponentInspectionReportGearbox":
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGearbox.Add((GeneratorManufacturerEntity)entity);
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "GeneratorManufacturerCollectionViaComponentInspectionReportGenerator":
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGenerator.Add((GeneratorManufacturerEntity)entity);
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "GeneratorManufacturerCollectionViaComponentInspectionReportGeneral":
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGeneral.Add((GeneratorManufacturerEntity)entity);
					this.GeneratorManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator":
					this.GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator.Add((GeneratorNonDriveEndEntity)entity);
					this.GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "GeneratorRotorCollectionViaComponentInspectionReportGenerator":
					this.GeneratorRotorCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.GeneratorRotorCollectionViaComponentInspectionReportGenerator.Add((GeneratorRotorEntity)entity);
					this.GeneratorRotorCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "HousingErrorCollectionViaComponentInspectionReportGearbox_":
					this.HousingErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.HousingErrorCollectionViaComponentInspectionReportGearbox_.Add((HousingErrorEntity)entity);
					this.HousingErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "HousingErrorCollectionViaComponentInspectionReportGearbox__":
					this.HousingErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.HousingErrorCollectionViaComponentInspectionReportGearbox__.Add((HousingErrorEntity)entity);
					this.HousingErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "HousingErrorCollectionViaComponentInspectionReportGearbox___":
					this.HousingErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.HousingErrorCollectionViaComponentInspectionReportGearbox___.Add((HousingErrorEntity)entity);
					this.HousingErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "HousingErrorCollectionViaComponentInspectionReportGearbox____":
					this.HousingErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly = false;
					this.HousingErrorCollectionViaComponentInspectionReportGearbox____.Add((HousingErrorEntity)entity);
					this.HousingErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly = true;
					break;
				case "HousingErrorCollectionViaComponentInspectionReportGearbox":
					this.HousingErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.HousingErrorCollectionViaComponentInspectionReportGearbox.Add((HousingErrorEntity)entity);
					this.HousingErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "HousingErrorCollectionViaComponentInspectionReportGearbox_____":
					this.HousingErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = false;
					this.HousingErrorCollectionViaComponentInspectionReportGearbox_____.Add((HousingErrorEntity)entity);
					this.HousingErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly = true;
					break;
				case "InlineFilterCollectionViaComponentInspectionReportGearbox":
					this.InlineFilterCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.InlineFilterCollectionViaComponentInspectionReportGearbox.Add((InlineFilterEntity)entity);
					this.InlineFilterCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "MagnetPosCollectionViaComponentInspectionReportGearbox":
					this.MagnetPosCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.MagnetPosCollectionViaComponentInspectionReportGearbox.Add((MagnetPosEntity)entity);
					this.MagnetPosCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing":
					this.MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing.IsReadOnly = false;
					this.MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing.Add((MainBearingErrorLocationEntity)entity);
					this.MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing.IsReadOnly = true;
					break;
				case "MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing":
					this.MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing.IsReadOnly = false;
					this.MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing.Add((MainBearingManufacturerEntity)entity);
					this.MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing.IsReadOnly = true;
					break;
				case "MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_":
					this.MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_.IsReadOnly = false;
					this.MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_.Add((MainBearingManufacturerEntity)entity);
					this.MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_.IsReadOnly = true;
					break;
				case "MechanicalOilPumpCollectionViaComponentInspectionReportGearbox":
					this.MechanicalOilPumpCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.MechanicalOilPumpCollectionViaComponentInspectionReportGearbox.Add((MechanicalOilPumpEntity)entity);
					this.MechanicalOilPumpCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "NoiseCollectionViaComponentInspectionReportGearbox":
					this.NoiseCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.NoiseCollectionViaComponentInspectionReportGearbox.Add((NoiseEntity)entity);
					this.NoiseCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator_":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator___":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator___.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator___.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator___.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator____":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator____.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator____.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator____.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator__":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator__.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator__.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator__.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator______":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator______.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator______.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator______.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator_____":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_____.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_____.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_____.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator________":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator________.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator________.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator________.IsReadOnly = true;
					break;
				case "OhmUnitCollectionViaComponentInspectionReportGenerator_______":
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_______.IsReadOnly = false;
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_______.Add((OhmUnitEntity)entity);
					this.OhmUnitCollectionViaComponentInspectionReportGenerator_______.IsReadOnly = true;
					break;
				case "OilLevelCollectionViaComponentInspectionReportGearbox":
					this.OilLevelCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.OilLevelCollectionViaComponentInspectionReportGearbox.Add((OilLevelEntity)entity);
					this.OilLevelCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "OilTypeCollectionViaComponentInspectionReportGearbox":
					this.OilTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.OilTypeCollectionViaComponentInspectionReportGearbox.Add((OilTypeEntity)entity);
					this.OilTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "OilTypeCollectionViaComponentInspectionReportMainBearing":
					this.OilTypeCollectionViaComponentInspectionReportMainBearing.IsReadOnly = false;
					this.OilTypeCollectionViaComponentInspectionReportMainBearing.Add((OilTypeEntity)entity);
					this.OilTypeCollectionViaComponentInspectionReportMainBearing.IsReadOnly = true;
					break;
				case "OverallGearboxConditionCollectionViaComponentInspectionReportGearbox":
					this.OverallGearboxConditionCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.OverallGearboxConditionCollectionViaComponentInspectionReportGearbox.Add((OverallGearboxConditionEntity)entity);
					this.OverallGearboxConditionCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "ShaftErrorCollectionViaComponentInspectionReportGearbox___":
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox___.Add((ShaftErrorEntity)entity);
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "ShaftErrorCollectionViaComponentInspectionReportGearbox_":
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox_.Add((ShaftErrorEntity)entity);
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "ShaftErrorCollectionViaComponentInspectionReportGearbox":
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox.Add((ShaftErrorEntity)entity);
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "ShaftErrorCollectionViaComponentInspectionReportGearbox__":
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox__.Add((ShaftErrorEntity)entity);
					this.ShaftErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "ShaftTypeCollectionViaComponentInspectionReportGearbox_":
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly = false;
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox_.Add((ShaftTypeEntity)entity);
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly = true;
					break;
				case "ShaftTypeCollectionViaComponentInspectionReportGearbox":
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox.Add((ShaftTypeEntity)entity);
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "ShaftTypeCollectionViaComponentInspectionReportGearbox__":
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly = false;
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox__.Add((ShaftTypeEntity)entity);
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly = true;
					break;
				case "ShaftTypeCollectionViaComponentInspectionReportGearbox___":
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly = false;
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox___.Add((ShaftTypeEntity)entity);
					this.ShaftTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly = true;
					break;
				case "ShrinkElementCollectionViaComponentInspectionReportGearbox":
					this.ShrinkElementCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.ShrinkElementCollectionViaComponentInspectionReportGearbox.Add((ShrinkElementEntity)entity);
					this.ShrinkElementCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;
				case "SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP":
					this.SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP.IsReadOnly = false;
					this.SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP.Add((SkiipackFailureCauseEntity)entity);
					this.SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP.IsReadOnly = true;
					break;
				case "SurgeArrestorCollectionViaComponentInspectionReportTransformer":
					this.SurgeArrestorCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.SurgeArrestorCollectionViaComponentInspectionReportTransformer.Add((SurgeArrestorEntity)entity);
					this.SurgeArrestorCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "TowerHeightCollectionViaComponentInspectionReportGeneral":
					this.TowerHeightCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.TowerHeightCollectionViaComponentInspectionReportGeneral.Add((TowerHeightEntity)entity);
					this.TowerHeightCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "TowerTypeCollectionViaComponentInspectionReportGeneral":
					this.TowerTypeCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.TowerTypeCollectionViaComponentInspectionReportGeneral.Add((TowerTypeEntity)entity);
					this.TowerTypeCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "TransformerManufacturerCollectionViaComponentInspectionReportTransformer":
					this.TransformerManufacturerCollectionViaComponentInspectionReportTransformer.IsReadOnly = false;
					this.TransformerManufacturerCollectionViaComponentInspectionReportTransformer.Add((TransformerManufacturerEntity)entity);
					this.TransformerManufacturerCollectionViaComponentInspectionReportTransformer.IsReadOnly = true;
					break;
				case "TransformerManufacturerCollectionViaComponentInspectionReportGeneral":
					this.TransformerManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly = false;
					this.TransformerManufacturerCollectionViaComponentInspectionReportGeneral.Add((TransformerManufacturerEntity)entity);
					this.TransformerManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly = true;
					break;
				case "VibrationsCollectionViaComponentInspectionReportGearbox":
					this.VibrationsCollectionViaComponentInspectionReportGearbox.IsReadOnly = false;
					this.VibrationsCollectionViaComponentInspectionReportGearbox.Add((VibrationsEntity)entity);
					this.VibrationsCollectionViaComponentInspectionReportGearbox.IsReadOnly = true;
					break;

				default:
					break;
			}
		}
#if !CF		
		/// <summary>Checks if the relation mapped by the property with the name specified is a one way / single sided relation. If the passed in name is null, it
		/// will return true if the entity has any single-sided relation</summary>
		/// <param name="propertyName">Name of the property which is mapped onto the relation to check, or null to check if the entity has any relation/ which is single sided</param>
		/// <returns>true if the relation is single sided / one way (so the opposite relation isn't present), false otherwise</returns>
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected override bool CheckOneWayRelations(string propertyName)
		{
			// use template trick to calculate the # of single-sided / oneway relations
			int numberOfOneWayRelations = 0;
			switch(propertyName)
			{
				case null:
					return ((numberOfOneWayRelations > 0) || base.CheckOneWayRelations(null));













				default:
					return base.CheckOneWayRelations(propertyName);
			}
		}
#endif
		/// <summary> Sets the internal parameter related to the fieldname passed to the instance relatedEntity. </summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		/// <param name="fieldName">Name of field mapped onto the relation which resolves in the instance relatedEntity</param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void SetRelatedEntity(IEntity2 relatedEntity, string fieldName)
		{
			switch(fieldName)
			{
				case "BooleanAnswer__":
					SetupSyncBooleanAnswer__(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "BooleanAnswer_":
					SetupSyncBooleanAnswer_(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "BooleanAnswer":
					SetupSyncBooleanAnswer(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportType":
					SetupSyncComponentInspectionReportType(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "CountryIso":
					SetupSyncCountryIso(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "LocationType":
					SetupSyncLocationType(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ReportType":
					SetupSyncReportType(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "Sbu":
					SetupSyncSbu(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ServiceReportNumberType":
					SetupSyncServiceReportNumberType(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "TurbineMatrix":
					SetupSyncTurbineMatrix(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "TurbineRunStatus_":
					SetupSyncTurbineRunStatus_(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "TurbineRunStatus":
					SetupSyncTurbineRunStatus(relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportBlade":
					this.ComponentInspectionReportBlade.Add((ComponentInspectionReportBladeEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportGearbox":
					this.ComponentInspectionReportGearbox.Add((ComponentInspectionReportGearboxEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportGeneral":
					this.ComponentInspectionReportGeneral.Add((ComponentInspectionReportGeneralEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportGenerator":
					this.ComponentInspectionReportGenerator.Add((ComponentInspectionReportGeneratorEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportMainBearing":
					this.ComponentInspectionReportMainBearing.Add((ComponentInspectionReportMainBearingEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportSkiiP":
					this.ComponentInspectionReportSkiiP.Add((ComponentInspectionReportSkiiPEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportTransformer":
					this.ComponentInspectionReportTransformer.Add((ComponentInspectionReportTransformerEntity)relatedEntity);
					OnRelatedEntitySet(relatedEntity, fieldName);
					break;

				default:
					break;
			}
		}

		/// <summary> Unsets the internal parameter related to the fieldname passed to the instance relatedEntity. Reverses the actions taken by SetRelatedEntity() </summary>
		/// <param name="relatedEntity">Instance to unset as the related entity of type entityType</param>
		/// <param name="fieldName">Name of field mapped onto the relation which resolves in the instance relatedEntity</param>
		/// <param name="signalRelatedEntityManyToOne">if set to true it will notify the manytoone side, if applicable.</param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void UnsetRelatedEntity(IEntity2 relatedEntity, string fieldName, bool signalRelatedEntityManyToOne)
		{
			switch(fieldName)
			{
				case "BooleanAnswer__":
					DesetupSyncBooleanAnswer__(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "BooleanAnswer_":
					DesetupSyncBooleanAnswer_(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "BooleanAnswer":
					DesetupSyncBooleanAnswer(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportType":
					DesetupSyncComponentInspectionReportType(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "CountryIso":
					DesetupSyncCountryIso(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "LocationType":
					DesetupSyncLocationType(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ReportType":
					DesetupSyncReportType(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "Sbu":
					DesetupSyncSbu(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ServiceReportNumberType":
					DesetupSyncServiceReportNumberType(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "TurbineMatrix":
					DesetupSyncTurbineMatrix(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "TurbineRunStatus_":
					DesetupSyncTurbineRunStatus_(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "TurbineRunStatus":
					DesetupSyncTurbineRunStatus(false, true);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportBlade":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportBlade, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportGearbox":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportGearbox, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportGeneral":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportGeneral, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportGenerator":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportGenerator, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportMainBearing":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportMainBearing, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportSkiiP":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportSkiiP, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;
				case "ComponentInspectionReportTransformer":
					base.PerformRelatedEntityRemoval(this.ComponentInspectionReportTransformer, relatedEntity, signalRelatedEntityManyToOne);
					OnRelatedEntityUnset(relatedEntity, fieldName);
					break;

				default:
					break;
			}
		}

		/// <summary> Gets a collection of related entities referenced by this entity which depend on this entity (this entity is the PK side of their FK fields). These entities will have to be persisted after this entity during a recursive save.</summary>
		/// <returns>Collection with 0 or more IEntity2 objects, referenced by this entity</returns>
		public override List<IEntity2> GetDependingRelatedEntities()
		{
			List<IEntity2> toReturn = new List<IEntity2>();

			return toReturn;
		}
		
		/// <summary> Gets a collection of related entities referenced by this entity which this entity depends on (this entity is the FK side of their PK fields). These
		/// entities will have to be persisted before this entity during a recursive save.</summary>
		/// <returns>Collection with 0 or more IEntity2 objects, referenced by this entity</returns>
		public override List<IEntity2> GetDependentRelatedEntities()
		{
			List<IEntity2> toReturn = new List<IEntity2>();
			if(_booleanAnswer__!=null)
			{
				toReturn.Add(_booleanAnswer__);
			}
			if(_booleanAnswer_!=null)
			{
				toReturn.Add(_booleanAnswer_);
			}
			if(_booleanAnswer!=null)
			{
				toReturn.Add(_booleanAnswer);
			}
			if(_componentInspectionReportType!=null)
			{
				toReturn.Add(_componentInspectionReportType);
			}
			if(_countryIso!=null)
			{
				toReturn.Add(_countryIso);
			}
			if(_locationType!=null)
			{
				toReturn.Add(_locationType);
			}
			if(_reportType!=null)
			{
				toReturn.Add(_reportType);
			}
			if(_sbu!=null)
			{
				toReturn.Add(_sbu);
			}
			if(_serviceReportNumberType!=null)
			{
				toReturn.Add(_serviceReportNumberType);
			}
			if(_turbineMatrix!=null)
			{
				toReturn.Add(_turbineMatrix);
			}
			if(_turbineRunStatus_!=null)
			{
				toReturn.Add(_turbineRunStatus_);
			}
			if(_turbineRunStatus!=null)
			{
				toReturn.Add(_turbineRunStatus);
			}

			return toReturn;
		}
		
		/// <summary>Gets a list of all entity collections stored as member variables in this entity. The contents of the ArrayList is used by the DataAccessAdapter to perform recursive saves. Only 1:n related collections are returned.</summary>
		/// <returns>Collection with 0 or more IEntityCollection2 objects, referenced by this entity</returns>
		public override List<IEntityCollection2> GetMemberEntityCollections()
		{
			List<IEntityCollection2> toReturn = new List<IEntityCollection2>();
			toReturn.Add(this.ComponentInspectionReportBlade);
			toReturn.Add(this.ComponentInspectionReportGearbox);
			toReturn.Add(this.ComponentInspectionReportGeneral);
			toReturn.Add(this.ComponentInspectionReportGenerator);
			toReturn.Add(this.ComponentInspectionReportMainBearing);
			toReturn.Add(this.ComponentInspectionReportSkiiP);
			toReturn.Add(this.ComponentInspectionReportTransformer);

			return toReturn;
		}
		


		/// <summary>ISerializable member. Does custom serialization so event handlers do not get serialized. Serializes members of this entity class and uses the base class' implementation to serialize the rest.</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void GetObjectData(SerializationInfo info, StreamingContext context)
		{
			if (SerializationHelper.Optimization != SerializationOptimization.Fast) 
			{
				info.AddValue("_componentInspectionReportBlade", ((_componentInspectionReportBlade!=null) && (_componentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportBlade:null);
				info.AddValue("_componentInspectionReportGearbox", ((_componentInspectionReportGearbox!=null) && (_componentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportGearbox:null);
				info.AddValue("_componentInspectionReportGeneral", ((_componentInspectionReportGeneral!=null) && (_componentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportGeneral:null);
				info.AddValue("_componentInspectionReportGenerator", ((_componentInspectionReportGenerator!=null) && (_componentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportGenerator:null);
				info.AddValue("_componentInspectionReportMainBearing", ((_componentInspectionReportMainBearing!=null) && (_componentInspectionReportMainBearing.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportMainBearing:null);
				info.AddValue("_componentInspectionReportSkiiP", ((_componentInspectionReportSkiiP!=null) && (_componentInspectionReportSkiiP.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportSkiiP:null);
				info.AddValue("_componentInspectionReportTransformer", ((_componentInspectionReportTransformer!=null) && (_componentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_componentInspectionReportTransformer:null);
				info.AddValue("_actionOnTransformerCollectionViaComponentInspectionReportTransformer", ((_actionOnTransformerCollectionViaComponentInspectionReportTransformer!=null) && (_actionOnTransformerCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_actionOnTransformerCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator", ((_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator!=null) && (_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_arcDetectionCollectionViaComponentInspectionReportTransformer", ((_arcDetectionCollectionViaComponentInspectionReportTransformer!=null) && (_arcDetectionCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_arcDetectionCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_bearingErrorCollectionViaComponentInspectionReportGearbox____", ((_bearingErrorCollectionViaComponentInspectionReportGearbox____!=null) && (_bearingErrorCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_bearingErrorCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_bearingErrorCollectionViaComponentInspectionReportGearbox", ((_bearingErrorCollectionViaComponentInspectionReportGearbox!=null) && (_bearingErrorCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_bearingErrorCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_bearingErrorCollectionViaComponentInspectionReportGearbox___", ((_bearingErrorCollectionViaComponentInspectionReportGearbox___!=null) && (_bearingErrorCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_bearingErrorCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_bearingErrorCollectionViaComponentInspectionReportGearbox_", ((_bearingErrorCollectionViaComponentInspectionReportGearbox_!=null) && (_bearingErrorCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_bearingErrorCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_bearingErrorCollectionViaComponentInspectionReportGearbox_____", ((_bearingErrorCollectionViaComponentInspectionReportGearbox_____!=null) && (_bearingErrorCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_bearingErrorCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_bearingErrorCollectionViaComponentInspectionReportGearbox__", ((_bearingErrorCollectionViaComponentInspectionReportGearbox__!=null) && (_bearingErrorCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_bearingErrorCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_bearingPosCollectionViaComponentInspectionReportGearbox____", ((_bearingPosCollectionViaComponentInspectionReportGearbox____!=null) && (_bearingPosCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_bearingPosCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_bearingPosCollectionViaComponentInspectionReportGearbox_", ((_bearingPosCollectionViaComponentInspectionReportGearbox_!=null) && (_bearingPosCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_bearingPosCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_bearingPosCollectionViaComponentInspectionReportGearbox__", ((_bearingPosCollectionViaComponentInspectionReportGearbox__!=null) && (_bearingPosCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_bearingPosCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_bearingPosCollectionViaComponentInspectionReportGearbox___", ((_bearingPosCollectionViaComponentInspectionReportGearbox___!=null) && (_bearingPosCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_bearingPosCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_bearingPosCollectionViaComponentInspectionReportGearbox", ((_bearingPosCollectionViaComponentInspectionReportGearbox!=null) && (_bearingPosCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_bearingPosCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_bearingPosCollectionViaComponentInspectionReportGearbox_____", ((_bearingPosCollectionViaComponentInspectionReportGearbox_____!=null) && (_bearingPosCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_bearingPosCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_bearingTypeCollectionViaComponentInspectionReportGearbox_", ((_bearingTypeCollectionViaComponentInspectionReportGearbox_!=null) && (_bearingTypeCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_bearingTypeCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_bearingTypeCollectionViaComponentInspectionReportGearbox__", ((_bearingTypeCollectionViaComponentInspectionReportGearbox__!=null) && (_bearingTypeCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_bearingTypeCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_bearingTypeCollectionViaComponentInspectionReportGearbox___", ((_bearingTypeCollectionViaComponentInspectionReportGearbox___!=null) && (_bearingTypeCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_bearingTypeCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_bearingTypeCollectionViaComponentInspectionReportGearbox", ((_bearingTypeCollectionViaComponentInspectionReportGearbox!=null) && (_bearingTypeCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_bearingTypeCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_bearingTypeCollectionViaComponentInspectionReportGearbox____", ((_bearingTypeCollectionViaComponentInspectionReportGearbox____!=null) && (_bearingTypeCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_bearingTypeCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_bearingTypeCollectionViaComponentInspectionReportGearbox_____", ((_bearingTypeCollectionViaComponentInspectionReportGearbox_____!=null) && (_bearingTypeCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_bearingTypeCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_bladeColorCollectionViaComponentInspectionReportBlade", ((_bladeColorCollectionViaComponentInspectionReportBlade!=null) && (_bladeColorCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_bladeColorCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_bladeLengthCollectionViaComponentInspectionReportBlade", ((_bladeLengthCollectionViaComponentInspectionReportBlade!=null) && (_bladeLengthCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_bladeLengthCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP______", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP______!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP______.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP______:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP___", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP___!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP___.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP___:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP____", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP____!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP____.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP____:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportGeneral_", ((_booleanAnswerCollectionViaComponentInspectionReportGeneral_!=null) && (_booleanAnswerCollectionViaComponentInspectionReportGeneral_.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportGeneral_:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportBlade_", ((_booleanAnswerCollectionViaComponentInspectionReportBlade_!=null) && (_booleanAnswerCollectionViaComponentInspectionReportBlade_.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportBlade_:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportBlade", ((_booleanAnswerCollectionViaComponentInspectionReportBlade!=null) && (_booleanAnswerCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportGeneral", ((_booleanAnswerCollectionViaComponentInspectionReportGeneral!=null) && (_booleanAnswerCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportGenerator", ((_booleanAnswerCollectionViaComponentInspectionReportGenerator!=null) && (_booleanAnswerCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportMainBearing", ((_booleanAnswerCollectionViaComponentInspectionReportMainBearing!=null) && (_booleanAnswerCollectionViaComponentInspectionReportMainBearing.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportMainBearing:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportTransformer", ((_booleanAnswerCollectionViaComponentInspectionReportTransformer!=null) && (_booleanAnswerCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP__", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP__!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP__.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP__:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportGearbox", ((_booleanAnswerCollectionViaComponentInspectionReportGearbox!=null) && (_booleanAnswerCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportGearbox_", ((_booleanAnswerCollectionViaComponentInspectionReportGearbox_!=null) && (_booleanAnswerCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________:null);
				info.AddValue("_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________", ((_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________!=null) && (_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________.Count>0) && !this.MarkedForDeletion)?_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________:null);
				info.AddValue("_bracketsCollectionViaComponentInspectionReportTransformer", ((_bracketsCollectionViaComponentInspectionReportTransformer!=null) && (_bracketsCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_bracketsCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_cableConditionCollectionViaComponentInspectionReportTransformer", ((_cableConditionCollectionViaComponentInspectionReportTransformer!=null) && (_cableConditionCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_cableConditionCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_cableConditionCollectionViaComponentInspectionReportTransformer_", ((_cableConditionCollectionViaComponentInspectionReportTransformer_!=null) && (_cableConditionCollectionViaComponentInspectionReportTransformer_.Count>0) && !this.MarkedForDeletion)?_cableConditionCollectionViaComponentInspectionReportTransformer_:null);
				info.AddValue("_climateCollectionViaComponentInspectionReportTransformer", ((_climateCollectionViaComponentInspectionReportTransformer!=null) && (_climateCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_climateCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_coilConditionCollectionViaComponentInspectionReportTransformer_", ((_coilConditionCollectionViaComponentInspectionReportTransformer_!=null) && (_coilConditionCollectionViaComponentInspectionReportTransformer_.Count>0) && !this.MarkedForDeletion)?_coilConditionCollectionViaComponentInspectionReportTransformer_:null);
				info.AddValue("_coilConditionCollectionViaComponentInspectionReportTransformer", ((_coilConditionCollectionViaComponentInspectionReportTransformer!=null) && (_coilConditionCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_coilConditionCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_componentGroupCollectionViaComponentInspectionReportGeneral", ((_componentGroupCollectionViaComponentInspectionReportGeneral!=null) && (_componentGroupCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_componentGroupCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_connectionBarsCollectionViaComponentInspectionReportTransformer", ((_connectionBarsCollectionViaComponentInspectionReportTransformer!=null) && (_connectionBarsCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_connectionBarsCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_controllerTypeCollectionViaComponentInspectionReportGeneral", ((_controllerTypeCollectionViaComponentInspectionReportGeneral!=null) && (_controllerTypeCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_controllerTypeCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_couplingCollectionViaComponentInspectionReportGenerator", ((_couplingCollectionViaComponentInspectionReportGenerator!=null) && (_couplingCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_couplingCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_couplingCollectionViaComponentInspectionReportGearbox", ((_couplingCollectionViaComponentInspectionReportGearbox!=null) && (_couplingCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_couplingCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox__________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox__________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox__________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox__________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox__________________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox__________________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox__________________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox__________________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox______", ((_damageDecisionCollectionViaComponentInspectionReportGearbox______!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox______.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox______:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_______", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_______!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_______.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_______:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox___________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox___________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox___________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox___________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_________________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_________________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_________________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_________________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox________________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox________________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox________________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox________________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox____________________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox____________________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox____________________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox____________________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox___________________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox___________________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox___________________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox___________________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_____________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_____________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_____________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_____________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox____________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox____________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox____________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox____________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_______________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_______________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_______________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_______________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox______________", ((_damageDecisionCollectionViaComponentInspectionReportGearbox______________!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox______________.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox______________:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox___", ((_damageDecisionCollectionViaComponentInspectionReportGearbox___!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox", ((_damageDecisionCollectionViaComponentInspectionReportGearbox!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox__", ((_damageDecisionCollectionViaComponentInspectionReportGearbox__!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_____", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_____!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox____", ((_damageDecisionCollectionViaComponentInspectionReportGearbox____!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_damageDecisionCollectionViaComponentInspectionReportGearbox_", ((_damageDecisionCollectionViaComponentInspectionReportGearbox_!=null) && (_damageDecisionCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_damageDecisionCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_debrisGearboxCollectionViaComponentInspectionReportGearbox", ((_debrisGearboxCollectionViaComponentInspectionReportGearbox!=null) && (_debrisGearboxCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_debrisGearboxCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_debrisOnMagnetCollectionViaComponentInspectionReportGearbox", ((_debrisOnMagnetCollectionViaComponentInspectionReportGearbox!=null) && (_debrisOnMagnetCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_debrisOnMagnetCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_electricalPumpCollectionViaComponentInspectionReportGearbox", ((_electricalPumpCollectionViaComponentInspectionReportGearbox!=null) && (_electricalPumpCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_electricalPumpCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_faultCodeAreaCollectionViaComponentInspectionReportBlade", ((_faultCodeAreaCollectionViaComponentInspectionReportBlade!=null) && (_faultCodeAreaCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_faultCodeAreaCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_faultCodeCauseCollectionViaComponentInspectionReportBlade", ((_faultCodeCauseCollectionViaComponentInspectionReportBlade!=null) && (_faultCodeCauseCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_faultCodeCauseCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_faultCodeClassificationCollectionViaComponentInspectionReportBlade", ((_faultCodeClassificationCollectionViaComponentInspectionReportBlade!=null) && (_faultCodeClassificationCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_faultCodeClassificationCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_faultCodeTypeCollectionViaComponentInspectionReportBlade", ((_faultCodeTypeCollectionViaComponentInspectionReportBlade!=null) && (_faultCodeTypeCollectionViaComponentInspectionReportBlade.Count>0) && !this.MarkedForDeletion)?_faultCodeTypeCollectionViaComponentInspectionReportBlade:null);
				info.AddValue("_filterBlockTypeCollectionViaComponentInspectionReportGearbox", ((_filterBlockTypeCollectionViaComponentInspectionReportGearbox!=null) && (_filterBlockTypeCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_filterBlockTypeCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_gearboxManufacturerCollectionViaComponentInspectionReportGeneral", ((_gearboxManufacturerCollectionViaComponentInspectionReportGeneral!=null) && (_gearboxManufacturerCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_gearboxManufacturerCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_gearboxManufacturerCollectionViaComponentInspectionReportGearbox", ((_gearboxManufacturerCollectionViaComponentInspectionReportGearbox!=null) && (_gearboxManufacturerCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_gearboxManufacturerCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_gearboxRevisionCollectionViaComponentInspectionReportGearbox", ((_gearboxRevisionCollectionViaComponentInspectionReportGearbox!=null) && (_gearboxRevisionCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_gearboxRevisionCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_gearboxTypeCollectionViaComponentInspectionReportGearbox", ((_gearboxTypeCollectionViaComponentInspectionReportGearbox!=null) && (_gearboxTypeCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_gearboxTypeCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox____________", ((_gearErrorCollectionViaComponentInspectionReportGearbox____________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox____________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox____________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox_________", ((_gearErrorCollectionViaComponentInspectionReportGearbox_________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox_________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox_________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox__________", ((_gearErrorCollectionViaComponentInspectionReportGearbox__________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox__________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox__________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox___________", ((_gearErrorCollectionViaComponentInspectionReportGearbox___________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox___________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox___________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox_____________", ((_gearErrorCollectionViaComponentInspectionReportGearbox_____________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox_____________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox_____________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox_", ((_gearErrorCollectionViaComponentInspectionReportGearbox_!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox______", ((_gearErrorCollectionViaComponentInspectionReportGearbox______!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox______.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox______:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox______________", ((_gearErrorCollectionViaComponentInspectionReportGearbox______________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox______________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox______________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox", ((_gearErrorCollectionViaComponentInspectionReportGearbox!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox________", ((_gearErrorCollectionViaComponentInspectionReportGearbox________!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox________.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox________:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox___", ((_gearErrorCollectionViaComponentInspectionReportGearbox___!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox____", ((_gearErrorCollectionViaComponentInspectionReportGearbox____!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox_____", ((_gearErrorCollectionViaComponentInspectionReportGearbox_____!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox__", ((_gearErrorCollectionViaComponentInspectionReportGearbox__!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_gearErrorCollectionViaComponentInspectionReportGearbox_______", ((_gearErrorCollectionViaComponentInspectionReportGearbox_______!=null) && (_gearErrorCollectionViaComponentInspectionReportGearbox_______.Count>0) && !this.MarkedForDeletion)?_gearErrorCollectionViaComponentInspectionReportGearbox_______:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox", ((_gearTypeCollectionViaComponentInspectionReportGearbox!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox___", ((_gearTypeCollectionViaComponentInspectionReportGearbox___!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox_", ((_gearTypeCollectionViaComponentInspectionReportGearbox_!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox_____", ((_gearTypeCollectionViaComponentInspectionReportGearbox_____!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox____", ((_gearTypeCollectionViaComponentInspectionReportGearbox____!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox__", ((_gearTypeCollectionViaComponentInspectionReportGearbox__!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox_________", ((_gearTypeCollectionViaComponentInspectionReportGearbox_________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox_________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox_________:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox__________", ((_gearTypeCollectionViaComponentInspectionReportGearbox__________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox__________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox__________:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox_______", ((_gearTypeCollectionViaComponentInspectionReportGearbox_______!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox_______.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox_______:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox________", ((_gearTypeCollectionViaComponentInspectionReportGearbox________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox________:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox___________", ((_gearTypeCollectionViaComponentInspectionReportGearbox___________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox___________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox___________:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox______________", ((_gearTypeCollectionViaComponentInspectionReportGearbox______________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox______________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox______________:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox______", ((_gearTypeCollectionViaComponentInspectionReportGearbox______!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox______.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox______:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox____________", ((_gearTypeCollectionViaComponentInspectionReportGearbox____________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox____________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox____________:null);
				info.AddValue("_gearTypeCollectionViaComponentInspectionReportGearbox_____________", ((_gearTypeCollectionViaComponentInspectionReportGearbox_____________!=null) && (_gearTypeCollectionViaComponentInspectionReportGearbox_____________.Count>0) && !this.MarkedForDeletion)?_gearTypeCollectionViaComponentInspectionReportGearbox_____________:null);
				info.AddValue("_generatorCoverCollectionViaComponentInspectionReportGenerator", ((_generatorCoverCollectionViaComponentInspectionReportGenerator!=null) && (_generatorCoverCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_generatorCoverCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_generatorDriveEndCollectionViaComponentInspectionReportGenerator", ((_generatorDriveEndCollectionViaComponentInspectionReportGenerator!=null) && (_generatorDriveEndCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_generatorDriveEndCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_generatorManufacturerCollectionViaComponentInspectionReportGearbox_", ((_generatorManufacturerCollectionViaComponentInspectionReportGearbox_!=null) && (_generatorManufacturerCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_generatorManufacturerCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_generatorManufacturerCollectionViaComponentInspectionReportGearbox", ((_generatorManufacturerCollectionViaComponentInspectionReportGearbox!=null) && (_generatorManufacturerCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_generatorManufacturerCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_generatorManufacturerCollectionViaComponentInspectionReportGenerator", ((_generatorManufacturerCollectionViaComponentInspectionReportGenerator!=null) && (_generatorManufacturerCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_generatorManufacturerCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_generatorManufacturerCollectionViaComponentInspectionReportGeneral", ((_generatorManufacturerCollectionViaComponentInspectionReportGeneral!=null) && (_generatorManufacturerCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_generatorManufacturerCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator", ((_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator!=null) && (_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_generatorRotorCollectionViaComponentInspectionReportGenerator", ((_generatorRotorCollectionViaComponentInspectionReportGenerator!=null) && (_generatorRotorCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_generatorRotorCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_housingErrorCollectionViaComponentInspectionReportGearbox_", ((_housingErrorCollectionViaComponentInspectionReportGearbox_!=null) && (_housingErrorCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_housingErrorCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_housingErrorCollectionViaComponentInspectionReportGearbox__", ((_housingErrorCollectionViaComponentInspectionReportGearbox__!=null) && (_housingErrorCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_housingErrorCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_housingErrorCollectionViaComponentInspectionReportGearbox___", ((_housingErrorCollectionViaComponentInspectionReportGearbox___!=null) && (_housingErrorCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_housingErrorCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_housingErrorCollectionViaComponentInspectionReportGearbox____", ((_housingErrorCollectionViaComponentInspectionReportGearbox____!=null) && (_housingErrorCollectionViaComponentInspectionReportGearbox____.Count>0) && !this.MarkedForDeletion)?_housingErrorCollectionViaComponentInspectionReportGearbox____:null);
				info.AddValue("_housingErrorCollectionViaComponentInspectionReportGearbox", ((_housingErrorCollectionViaComponentInspectionReportGearbox!=null) && (_housingErrorCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_housingErrorCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_housingErrorCollectionViaComponentInspectionReportGearbox_____", ((_housingErrorCollectionViaComponentInspectionReportGearbox_____!=null) && (_housingErrorCollectionViaComponentInspectionReportGearbox_____.Count>0) && !this.MarkedForDeletion)?_housingErrorCollectionViaComponentInspectionReportGearbox_____:null);
				info.AddValue("_inlineFilterCollectionViaComponentInspectionReportGearbox", ((_inlineFilterCollectionViaComponentInspectionReportGearbox!=null) && (_inlineFilterCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_inlineFilterCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_magnetPosCollectionViaComponentInspectionReportGearbox", ((_magnetPosCollectionViaComponentInspectionReportGearbox!=null) && (_magnetPosCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_magnetPosCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing", ((_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing!=null) && (_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing.Count>0) && !this.MarkedForDeletion)?_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing:null);
				info.AddValue("_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing", ((_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing!=null) && (_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing.Count>0) && !this.MarkedForDeletion)?_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing:null);
				info.AddValue("_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_", ((_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_!=null) && (_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_.Count>0) && !this.MarkedForDeletion)?_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_:null);
				info.AddValue("_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox", ((_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox!=null) && (_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_noiseCollectionViaComponentInspectionReportGearbox", ((_noiseCollectionViaComponentInspectionReportGearbox!=null) && (_noiseCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_noiseCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator_", ((_ohmUnitCollectionViaComponentInspectionReportGenerator_!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator_.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator_:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator", ((_ohmUnitCollectionViaComponentInspectionReportGenerator!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator___", ((_ohmUnitCollectionViaComponentInspectionReportGenerator___!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator___.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator___:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator____", ((_ohmUnitCollectionViaComponentInspectionReportGenerator____!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator____.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator____:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator__", ((_ohmUnitCollectionViaComponentInspectionReportGenerator__!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator__.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator__:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator______", ((_ohmUnitCollectionViaComponentInspectionReportGenerator______!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator______.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator______:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator_____", ((_ohmUnitCollectionViaComponentInspectionReportGenerator_____!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator_____.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator_____:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator________", ((_ohmUnitCollectionViaComponentInspectionReportGenerator________!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator________.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator________:null);
				info.AddValue("_ohmUnitCollectionViaComponentInspectionReportGenerator_______", ((_ohmUnitCollectionViaComponentInspectionReportGenerator_______!=null) && (_ohmUnitCollectionViaComponentInspectionReportGenerator_______.Count>0) && !this.MarkedForDeletion)?_ohmUnitCollectionViaComponentInspectionReportGenerator_______:null);
				info.AddValue("_oilLevelCollectionViaComponentInspectionReportGearbox", ((_oilLevelCollectionViaComponentInspectionReportGearbox!=null) && (_oilLevelCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_oilLevelCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_oilTypeCollectionViaComponentInspectionReportGearbox", ((_oilTypeCollectionViaComponentInspectionReportGearbox!=null) && (_oilTypeCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_oilTypeCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_oilTypeCollectionViaComponentInspectionReportMainBearing", ((_oilTypeCollectionViaComponentInspectionReportMainBearing!=null) && (_oilTypeCollectionViaComponentInspectionReportMainBearing.Count>0) && !this.MarkedForDeletion)?_oilTypeCollectionViaComponentInspectionReportMainBearing:null);
				info.AddValue("_overallGearboxConditionCollectionViaComponentInspectionReportGearbox", ((_overallGearboxConditionCollectionViaComponentInspectionReportGearbox!=null) && (_overallGearboxConditionCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_overallGearboxConditionCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_shaftErrorCollectionViaComponentInspectionReportGearbox___", ((_shaftErrorCollectionViaComponentInspectionReportGearbox___!=null) && (_shaftErrorCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_shaftErrorCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_shaftErrorCollectionViaComponentInspectionReportGearbox_", ((_shaftErrorCollectionViaComponentInspectionReportGearbox_!=null) && (_shaftErrorCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_shaftErrorCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_shaftErrorCollectionViaComponentInspectionReportGearbox", ((_shaftErrorCollectionViaComponentInspectionReportGearbox!=null) && (_shaftErrorCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_shaftErrorCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_shaftErrorCollectionViaComponentInspectionReportGearbox__", ((_shaftErrorCollectionViaComponentInspectionReportGearbox__!=null) && (_shaftErrorCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_shaftErrorCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_shaftTypeCollectionViaComponentInspectionReportGearbox_", ((_shaftTypeCollectionViaComponentInspectionReportGearbox_!=null) && (_shaftTypeCollectionViaComponentInspectionReportGearbox_.Count>0) && !this.MarkedForDeletion)?_shaftTypeCollectionViaComponentInspectionReportGearbox_:null);
				info.AddValue("_shaftTypeCollectionViaComponentInspectionReportGearbox", ((_shaftTypeCollectionViaComponentInspectionReportGearbox!=null) && (_shaftTypeCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_shaftTypeCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_shaftTypeCollectionViaComponentInspectionReportGearbox__", ((_shaftTypeCollectionViaComponentInspectionReportGearbox__!=null) && (_shaftTypeCollectionViaComponentInspectionReportGearbox__.Count>0) && !this.MarkedForDeletion)?_shaftTypeCollectionViaComponentInspectionReportGearbox__:null);
				info.AddValue("_shaftTypeCollectionViaComponentInspectionReportGearbox___", ((_shaftTypeCollectionViaComponentInspectionReportGearbox___!=null) && (_shaftTypeCollectionViaComponentInspectionReportGearbox___.Count>0) && !this.MarkedForDeletion)?_shaftTypeCollectionViaComponentInspectionReportGearbox___:null);
				info.AddValue("_shrinkElementCollectionViaComponentInspectionReportGearbox", ((_shrinkElementCollectionViaComponentInspectionReportGearbox!=null) && (_shrinkElementCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_shrinkElementCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP", ((_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP!=null) && (_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP.Count>0) && !this.MarkedForDeletion)?_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP:null);
				info.AddValue("_surgeArrestorCollectionViaComponentInspectionReportTransformer", ((_surgeArrestorCollectionViaComponentInspectionReportTransformer!=null) && (_surgeArrestorCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_surgeArrestorCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_towerHeightCollectionViaComponentInspectionReportGeneral", ((_towerHeightCollectionViaComponentInspectionReportGeneral!=null) && (_towerHeightCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_towerHeightCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_towerTypeCollectionViaComponentInspectionReportGeneral", ((_towerTypeCollectionViaComponentInspectionReportGeneral!=null) && (_towerTypeCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_towerTypeCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_transformerManufacturerCollectionViaComponentInspectionReportTransformer", ((_transformerManufacturerCollectionViaComponentInspectionReportTransformer!=null) && (_transformerManufacturerCollectionViaComponentInspectionReportTransformer.Count>0) && !this.MarkedForDeletion)?_transformerManufacturerCollectionViaComponentInspectionReportTransformer:null);
				info.AddValue("_transformerManufacturerCollectionViaComponentInspectionReportGeneral", ((_transformerManufacturerCollectionViaComponentInspectionReportGeneral!=null) && (_transformerManufacturerCollectionViaComponentInspectionReportGeneral.Count>0) && !this.MarkedForDeletion)?_transformerManufacturerCollectionViaComponentInspectionReportGeneral:null);
				info.AddValue("_vibrationsCollectionViaComponentInspectionReportGearbox", ((_vibrationsCollectionViaComponentInspectionReportGearbox!=null) && (_vibrationsCollectionViaComponentInspectionReportGearbox.Count>0) && !this.MarkedForDeletion)?_vibrationsCollectionViaComponentInspectionReportGearbox:null);
				info.AddValue("_booleanAnswer__", (!this.MarkedForDeletion?_booleanAnswer__:null));
				info.AddValue("_booleanAnswer_", (!this.MarkedForDeletion?_booleanAnswer_:null));
				info.AddValue("_booleanAnswer", (!this.MarkedForDeletion?_booleanAnswer:null));
				info.AddValue("_componentInspectionReportType", (!this.MarkedForDeletion?_componentInspectionReportType:null));
				info.AddValue("_countryIso", (!this.MarkedForDeletion?_countryIso:null));
				info.AddValue("_locationType", (!this.MarkedForDeletion?_locationType:null));
				info.AddValue("_reportType", (!this.MarkedForDeletion?_reportType:null));
				info.AddValue("_sbu", (!this.MarkedForDeletion?_sbu:null));
				info.AddValue("_serviceReportNumberType", (!this.MarkedForDeletion?_serviceReportNumberType:null));
				info.AddValue("_turbineMatrix", (!this.MarkedForDeletion?_turbineMatrix:null));
				info.AddValue("_turbineRunStatus_", (!this.MarkedForDeletion?_turbineRunStatus_:null));
				info.AddValue("_turbineRunStatus", (!this.MarkedForDeletion?_turbineRunStatus:null));

			}
			
			// __LLBLGENPRO_USER_CODE_REGION_START GetObjectInfo
			// __LLBLGENPRO_USER_CODE_REGION_END
			base.GetObjectData(info, context);
		}

		/// <summary>Returns true if the original value for the field with the fieldIndex passed in, read from the persistent storage was NULL, false otherwise.
		/// Should not be used for testing if the current value is NULL, use <see cref="TestCurrentFieldValueForNull"/> for that.</summary>
		/// <param name="fieldIndex">Index of the field to test if that field was NULL in the persistent storage</param>
		/// <returns>true if the field with the passed in index was NULL in the persistent storage, false otherwise</returns>
		public bool TestOriginalFieldValueForNull(ComponentInspectionReportFieldIndex fieldIndex)
		{
			return base.Fields[(int)fieldIndex].IsNull;
		}
		
		/// <summary>Returns true if the current value for the field with the fieldIndex passed in represents null/not defined, false otherwise.
		/// Should not be used for testing if the original value (read from the db) is NULL</summary>
		/// <param name="fieldIndex">Index of the field to test if its currentvalue is null/undefined</param>
		/// <returns>true if the field's value isn't defined yet, false otherwise</returns>
		public bool TestCurrentFieldValueForNull(ComponentInspectionReportFieldIndex fieldIndex)
		{
			return base.CheckIfCurrentFieldValueIsNull((int)fieldIndex);
		}

				
		/// <summary>Gets a list of all the EntityRelation objects the type of this instance has.</summary>
		/// <returns>A list of all the EntityRelation objects the type of this instance has. Hierarchy relations are excluded.</returns>
		public override List<IEntityRelation> GetAllRelations()
		{
			return new ComponentInspectionReportRelations().GetAllRelations();
		}
		

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportBlade' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportBladeFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportGearbox' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportGearboxFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportGeneral' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportGeneralFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportGenerator' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportGeneratorFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportMainBearing' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportMainBearing()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportMainBearingFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportSkiiP' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportSkiiP()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportSkiiPFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentInspectionReportTransformer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportTransformerFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ActionOnTransformer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActionOnTransformerCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.ActionOnTransformerEntityUsingActionOnTransformerId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ActionToBeTakenOnGenerator' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.ActionToBeTakenOnGeneratorEntityUsingActionToBeTakenOnGeneratorId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ArcDetection' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoArcDetectionCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.ArcDetectionEntityUsingTransformerArcDetectionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingErrorCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage5BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingErrorCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage1BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingErrorCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage4BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingErrorCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage2BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingErrorCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage6BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingErrorCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage3BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingPosCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition5BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingPosCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition2BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingPosCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition3BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingPosCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition4BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingPosCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition1BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingPosCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition6BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingTypeCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation2BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingTypeCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation3BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingTypeCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation4BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingTypeCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation1BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingTypeCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation5BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BearingType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBearingTypeCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation6BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BladeColor' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBladeColorCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.BladeColorEntityUsingBladeColorId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BladeLength' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBladeLengthCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.BladeLengthEntityUsingBladeLengthId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv520BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv524BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv525yBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv526yBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv523BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv524BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv525BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv526BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv521BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportGeneral_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.BooleanAnswerEntityUsingGeneralPicturesIncludedBooleanAnswerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportBlade_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.BooleanAnswerEntityUsingBladeClaimRelevantBooleanAnswerId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.BooleanAnswerEntityUsingBladePicturesIncludedBooleanAnswerId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.BooleanAnswerEntityUsingGeneralClaimRelevantBooleanAnswerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv521BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiPclaimRelevantBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.BooleanAnswerEntityUsingGeneratorClaimRelevantBooleanAnswerId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportMainBearing()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportMainBearingEntity.Relations.BooleanAnswerEntityUsingMainBearingClaimRelevantBooleanAnswerId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv525BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.BooleanAnswerEntityUsingTransformerClaimRelevantBooleanAnswerId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv526xBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv525xBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv524yBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BooleanAnswerEntityUsingGearboxOffLineFilterId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.BooleanAnswerEntityUsingGearboxClaimRelevantBooleanAnswerId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv523BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv522BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv526BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv522BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswerCollectionViaComponentInspectionReportSkiiP________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv524xBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Brackets' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBracketsCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.BracketsEntityUsingBracketsId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CableCondition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCableConditionCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.CableConditionEntityUsingHvcableConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CableCondition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCableConditionCollectionViaComponentInspectionReportTransformer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.CableConditionEntityUsingLvcableConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Climate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoClimateCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.ClimateEntityUsingClimateId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CoilCondition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCoilConditionCollectionViaComponentInspectionReportTransformer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.CoilConditionEntityUsingLvcoilConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CoilCondition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCoilConditionCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.CoilConditionEntityUsingHvcoilConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ComponentGroup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentGroupCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.ComponentGroupEntityUsingGeneralComponentGroupId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ConnectionBars' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoConnectionBarsCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.ConnectionBarsEntityUsingConnectionBarsId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ControllerType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoControllerTypeCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.ControllerTypeEntityUsingGeneralControllerTypeId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Coupling' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCouplingCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.CouplingEntityUsingCouplingId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Coupling' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCouplingCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.CouplingEntityUsingGearboxCouplingId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision12DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision13DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision14DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox__________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision7DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision10DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision11DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision15DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision6DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision5DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox____________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision9DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox___________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision8DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision2DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision1DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision4DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision3DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision4DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision2DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision3DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision6DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision5DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DamageDecision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDamageDecisionCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision1DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DebrisGearbox' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDebrisGearboxCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DebrisGearboxEntityUsingGearboxDebrisGearBoxId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DebrisOnMagnet' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDebrisOnMagnetCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.DebrisOnMagnetEntityUsingGearboxDebrisOnMagnetId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ElectricalPump' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoElectricalPumpCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ElectricalPumpEntityUsingGearboxElectricalPumpId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FaultCodeArea' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFaultCodeAreaCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeAreaEntityUsingBladeFaultCodeAreaId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FaultCodeCause' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFaultCodeCauseCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeCauseEntityUsingBladeFaultCodeCauseId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FaultCodeClassification' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFaultCodeClassificationCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeClassificationEntityUsingBladeFaultCodeClassificationId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FaultCodeType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFaultCodeTypeCollectionViaComponentInspectionReportBlade()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeTypeEntityUsingBladeFaultCodeTypeId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FilterBlockType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFilterBlockTypeCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.FilterBlockTypeEntityUsingGearboxFilterBlockTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearboxManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearboxManufacturerCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.GearboxManufacturerEntityUsingGeneralGearboxManufacturerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearboxManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearboxManufacturerCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearboxManufacturerEntityUsingGearboxManufacturerId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearboxRevision' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearboxRevisionCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearboxRevisionEntityUsingGearboxRevisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearboxType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearboxTypeCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearboxTypeEntityUsingGearboxTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage7GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage14GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage15GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage6GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage8GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage2GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage11GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage9GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage1GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage13GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage4GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage5GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage10GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage3GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearErrorCollectionViaComponentInspectionReportGearbox_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage12GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation1GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation4GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation2GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation6GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation5GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation3GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation13GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation14GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation11GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation12GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation15GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation9GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation10GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation7GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GearType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGearTypeCollectionViaComponentInspectionReportGearbox_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation8GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorCover' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorCoverCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorCoverEntityUsingGeneratorCoverId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorDriveEnd' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorDriveEndCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorDriveEndEntityUsingGeneratorDriveEndId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorManufacturerCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GeneratorManufacturerEntityUsingGearboxGeneratorManufacturerId2, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorManufacturerCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.GeneratorManufacturerEntityUsingGearboxGeneratorManufacturerId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorManufacturerCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorManufacturerEntityUsingGeneratorManufacturerId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorManufacturerCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.GeneratorManufacturerEntityUsingGeneralGeneratorManufacturerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorNonDriveEnd' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorNonDriveEndEntityUsingGeneratorNonDriveEndId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GeneratorRotor' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGeneratorRotorCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorRotorEntityUsingGeneratorRotorId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HousingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHousingErrorCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxPlanetStage2HousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HousingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHousingErrorCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxHelicalStageHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HousingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHousingErrorCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxFrontPlateHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HousingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHousingErrorCollectionViaComponentInspectionReportGearbox____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxAuxStageHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HousingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHousingErrorCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxPlanetStage1HousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HousingError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHousingErrorCollectionViaComponentInspectionReportGearbox_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxHsstageHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'InlineFilter' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoInlineFilterCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.InlineFilterEntityUsingGearboxInLineFilterId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MagnetPos' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMagnetPosCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.MagnetPosEntityUsingGearboxDebrisStagesMagnetPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MainBearingErrorLocation' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportMainBearingEntity.Relations.MainBearingErrorLocationEntityUsingMainBearingErrorLocationId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MainBearingManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMainBearingManufacturerCollectionViaComponentInspectionReportMainBearing()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportMainBearingEntity.Relations.MainBearingManufacturerEntityUsingMainBearingManufacturerId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MainBearingManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportMainBearingEntity.Relations.MainBearingManufacturerEntityUsingMainBearingTypeId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MechanicalOilPump' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMechanicalOilPumpCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.MechanicalOilPumpEntityUsingGearboxMechanicalOilPumpId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Noise' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNoiseCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.NoiseEntityUsingGearboxNoiseId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingVgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingUgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingUvohmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingUwohmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingWgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingKgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingVwohmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingMgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OhmUnit' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOhmUnitCollectionViaComponentInspectionReportGenerator_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingLgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OilLevel' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOilLevelCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.OilLevelEntityUsingGearboxOilLevelId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OilType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOilTypeCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.OilTypeEntityUsingGearboxOilTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OilType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOilTypeCollectionViaComponentInspectionReportMainBearing()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportMainBearingEntity.Relations.OilTypeEntityUsingMainBearingLubricationOilTypeId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OverallGearboxCondition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOverallGearboxConditionCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.OverallGearboxConditionEntityUsingGearboxOverallGearboxConditionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftErrorCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage4ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftErrorCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage2ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftErrorCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage1ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftError' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftErrorCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage3ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftTypeCollectionViaComponentInspectionReportGearbox_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation2ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftTypeCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation1ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftTypeCollectionViaComponentInspectionReportGearbox__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation3ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShaftType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShaftTypeCollectionViaComponentInspectionReportGearbox___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation4ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShrinkElement' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShrinkElementCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShrinkElementEntityUsingGearboxShrinkElementId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SkiipackFailureCause' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportSkiiPEntity.Relations.SkiipackFailureCauseEntityUsingSkiiPcauseId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurgeArrestor' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurgeArrestorCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.SurgeArrestorEntityUsingSurgeArrestorId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TowerHeight' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTowerHeightCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.TowerHeightEntityUsingGeneralTowerHeightId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TowerType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTowerTypeCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.TowerTypeEntityUsingGeneralTowerTypeId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TransformerManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTransformerManufacturerCollectionViaComponentInspectionReportTransformer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportTransformerEntity.Relations.TransformerManufacturerEntityUsingTransformerManufacturerId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TransformerManufacturer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTransformerManufacturerCollectionViaComponentInspectionReportGeneral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGeneralEntity.Relations.TransformerManufacturerEntityUsingGeneralTransformerManufacturerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Vibrations' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoVibrationsCollectionViaComponentInspectionReportGearbox()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
			bucket.Relations.Add(ComponentInspectionReportGearboxEntity.Relations.VibrationsEntityUsingGearboxVibrationsId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportFields.ComponentInspectionReportId, null, ComparisonOperator.Equal, this.ComponentInspectionReportId, "ComponentInspectionReportEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(BooleanAnswerFields.BooleanAnswerId, null, ComparisonOperator.Equal, this.MountedOnMainComponentBooleanAnswerId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(BooleanAnswerFields.BooleanAnswerId, null, ComparisonOperator.Equal, this.SecondGeneratorBooleanAnswerId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'BooleanAnswer' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBooleanAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(BooleanAnswerFields.BooleanAnswerId, null, ComparisonOperator.Equal, this.ReconstructionBooleanAnswerId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'ComponentInspectionReportType' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoComponentInspectionReportType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ComponentInspectionReportTypeFields.ComponentInspectionReportTypeId, null, ComparisonOperator.Equal, this.ComponentInspectionReportTypeId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'CountryIso' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCountryIso()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CountryIsoFields.CountryIsoid, null, ComparisonOperator.Equal, this.CountryIsoid));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'LocationType' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLocationType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(LocationTypeFields.LocationTypeId, null, ComparisonOperator.Equal, this.LocationTypeId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'ReportType' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoReportType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ReportTypeFields.ReportTypeId, null, ComparisonOperator.Equal, this.ReportTypeId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'Sbu' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSbu()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SbuFields.Sbuid, null, ComparisonOperator.Equal, this.Sbuid));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'ServiceReportNumberType' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoServiceReportNumberType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ServiceReportNumberTypeFields.ServiceReportNumberTypeId, null, ComparisonOperator.Equal, this.ServiceReportNumberTypeId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'TurbineMatrix' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTurbineMatrix()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TurbineMatrixFields.TurbineMatrixId, null, ComparisonOperator.Equal, this.TurbineMatrixId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'TurbineRunStatus' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTurbineRunStatus_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TurbineRunStatusFields.TurbineRunStatusId, null, ComparisonOperator.Equal, this.AfterInspectionTurbineRunStatusId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'TurbineRunStatus' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTurbineRunStatus()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TurbineRunStatusFields.TurbineRunStatusId, null, ComparisonOperator.Equal, this.BeforeInspectionTurbineRunStatusId));
			return bucket;
		}

	
		
		/// <summary>Creates entity fields object for this entity. Used in constructor to setup this entity in a polymorphic scenario.</summary>
		protected virtual IEntityFields2 CreateFields()
		{
			return EntityFieldsFactory.CreateEntityFieldsObject(Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity);
		}

		/// <summary>
		/// Creates the ITypeDefaultValue instance used to provide default values for value types which aren't of type nullable(of T)
		/// </summary>
		/// <returns></returns>
		protected override ITypeDefaultValue CreateTypeDefaultValueProvider()
		{
			return new TypeDefaultValue();
		}

		/// <summary>Creates a new instance of the factory related to this entity</summary>
		protected override IEntityFactory2 CreateEntityFactory()
		{
			return EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportEntityFactory));
		}
#if !CF
		/// <summary>Adds the member collections to the collections queue (base first)</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		protected override void AddToMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue) 
		{
			base.AddToMemberEntityCollectionsQueue(collectionsQueue);
			collectionsQueue.Enqueue(this._componentInspectionReportBlade);
			collectionsQueue.Enqueue(this._componentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._componentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._componentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._componentInspectionReportMainBearing);
			collectionsQueue.Enqueue(this._componentInspectionReportSkiiP);
			collectionsQueue.Enqueue(this._componentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._actionOnTransformerCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._arcDetectionCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._bearingErrorCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._bearingErrorCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._bearingErrorCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._bearingErrorCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._bearingErrorCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._bearingErrorCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._bearingPosCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._bearingPosCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._bearingPosCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._bearingPosCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._bearingPosCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._bearingPosCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._bearingTypeCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._bearingTypeCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._bearingTypeCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._bearingTypeCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._bearingTypeCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._bearingTypeCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._bladeColorCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._bladeLengthCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_____);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP______);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP____);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_______);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportGeneral_);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportBlade_);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportMainBearing);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP______________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP____________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________);
			collectionsQueue.Enqueue(this._booleanAnswerCollectionViaComponentInspectionReportSkiiP________________);
			collectionsQueue.Enqueue(this._bracketsCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._cableConditionCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._cableConditionCollectionViaComponentInspectionReportTransformer_);
			collectionsQueue.Enqueue(this._climateCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._coilConditionCollectionViaComponentInspectionReportTransformer_);
			collectionsQueue.Enqueue(this._coilConditionCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._componentGroupCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._connectionBarsCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._controllerTypeCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._couplingCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._couplingCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox__________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox__________________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox______);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_______);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox___________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_________________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox________________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox____________________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox___________________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_____________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox____________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_______________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox______________);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._damageDecisionCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._debrisGearboxCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._debrisOnMagnetCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._electricalPumpCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._faultCodeAreaCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._faultCodeCauseCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._faultCodeClassificationCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._faultCodeTypeCollectionViaComponentInspectionReportBlade);
			collectionsQueue.Enqueue(this._filterBlockTypeCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._gearboxManufacturerCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._gearboxManufacturerCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._gearboxRevisionCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._gearboxTypeCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox____________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox_________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox__________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox___________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox_____________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox______);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox______________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox________);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._gearErrorCollectionViaComponentInspectionReportGearbox_______);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox_________);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox__________);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox_______);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox________);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox___________);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox______________);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox______);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox____________);
			collectionsQueue.Enqueue(this._gearTypeCollectionViaComponentInspectionReportGearbox_____________);
			collectionsQueue.Enqueue(this._generatorCoverCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._generatorDriveEndCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._generatorManufacturerCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._generatorManufacturerCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._generatorManufacturerCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._generatorManufacturerCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._generatorNonDriveEndCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._generatorRotorCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._housingErrorCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._housingErrorCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._housingErrorCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._housingErrorCollectionViaComponentInspectionReportGearbox____);
			collectionsQueue.Enqueue(this._housingErrorCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._housingErrorCollectionViaComponentInspectionReportGearbox_____);
			collectionsQueue.Enqueue(this._inlineFilterCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._magnetPosCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing);
			collectionsQueue.Enqueue(this._mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing);
			collectionsQueue.Enqueue(this._mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_);
			collectionsQueue.Enqueue(this._mechanicalOilPumpCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._noiseCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator_);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator___);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator____);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator__);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator______);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator_____);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator________);
			collectionsQueue.Enqueue(this._ohmUnitCollectionViaComponentInspectionReportGenerator_______);
			collectionsQueue.Enqueue(this._oilLevelCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._oilTypeCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._oilTypeCollectionViaComponentInspectionReportMainBearing);
			collectionsQueue.Enqueue(this._overallGearboxConditionCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._shaftErrorCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._shaftErrorCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._shaftErrorCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._shaftErrorCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._shaftTypeCollectionViaComponentInspectionReportGearbox_);
			collectionsQueue.Enqueue(this._shaftTypeCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._shaftTypeCollectionViaComponentInspectionReportGearbox__);
			collectionsQueue.Enqueue(this._shaftTypeCollectionViaComponentInspectionReportGearbox___);
			collectionsQueue.Enqueue(this._shrinkElementCollectionViaComponentInspectionReportGearbox);
			collectionsQueue.Enqueue(this._skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP);
			collectionsQueue.Enqueue(this._surgeArrestorCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._towerHeightCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._towerTypeCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._transformerManufacturerCollectionViaComponentInspectionReportTransformer);
			collectionsQueue.Enqueue(this._transformerManufacturerCollectionViaComponentInspectionReportGeneral);
			collectionsQueue.Enqueue(this._vibrationsCollectionViaComponentInspectionReportGearbox);
		}
		
		/// <summary>Gets the member collections queue from the queue (base first)</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		protected override void GetFromMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue)
		{
			base.GetFromMemberEntityCollectionsQueue(collectionsQueue);
			this._componentInspectionReportBlade = (EntityCollection<ComponentInspectionReportBladeEntity>) collectionsQueue.Dequeue();
			this._componentInspectionReportGearbox = (EntityCollection<ComponentInspectionReportGearboxEntity>) collectionsQueue.Dequeue();
			this._componentInspectionReportGeneral = (EntityCollection<ComponentInspectionReportGeneralEntity>) collectionsQueue.Dequeue();
			this._componentInspectionReportGenerator = (EntityCollection<ComponentInspectionReportGeneratorEntity>) collectionsQueue.Dequeue();
			this._componentInspectionReportMainBearing = (EntityCollection<ComponentInspectionReportMainBearingEntity>) collectionsQueue.Dequeue();
			this._componentInspectionReportSkiiP = (EntityCollection<ComponentInspectionReportSkiiPEntity>) collectionsQueue.Dequeue();
			this._componentInspectionReportTransformer = (EntityCollection<ComponentInspectionReportTransformerEntity>) collectionsQueue.Dequeue();
			this._actionOnTransformerCollectionViaComponentInspectionReportTransformer = (EntityCollection<ActionOnTransformerEntity>) collectionsQueue.Dequeue();
			this._actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator = (EntityCollection<ActionToBeTakenOnGeneratorEntity>) collectionsQueue.Dequeue();
			this._arcDetectionCollectionViaComponentInspectionReportTransformer = (EntityCollection<ArcDetectionEntity>) collectionsQueue.Dequeue();
			this._bearingErrorCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<BearingErrorEntity>) collectionsQueue.Dequeue();
			this._bearingErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<BearingErrorEntity>) collectionsQueue.Dequeue();
			this._bearingErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<BearingErrorEntity>) collectionsQueue.Dequeue();
			this._bearingErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BearingErrorEntity>) collectionsQueue.Dequeue();
			this._bearingErrorCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<BearingErrorEntity>) collectionsQueue.Dequeue();
			this._bearingErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<BearingErrorEntity>) collectionsQueue.Dequeue();
			this._bearingPosCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<BearingPosEntity>) collectionsQueue.Dequeue();
			this._bearingPosCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BearingPosEntity>) collectionsQueue.Dequeue();
			this._bearingPosCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<BearingPosEntity>) collectionsQueue.Dequeue();
			this._bearingPosCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<BearingPosEntity>) collectionsQueue.Dequeue();
			this._bearingPosCollectionViaComponentInspectionReportGearbox = (EntityCollection<BearingPosEntity>) collectionsQueue.Dequeue();
			this._bearingPosCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<BearingPosEntity>) collectionsQueue.Dequeue();
			this._bearingTypeCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BearingTypeEntity>) collectionsQueue.Dequeue();
			this._bearingTypeCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<BearingTypeEntity>) collectionsQueue.Dequeue();
			this._bearingTypeCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<BearingTypeEntity>) collectionsQueue.Dequeue();
			this._bearingTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<BearingTypeEntity>) collectionsQueue.Dequeue();
			this._bearingTypeCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<BearingTypeEntity>) collectionsQueue.Dequeue();
			this._bearingTypeCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<BearingTypeEntity>) collectionsQueue.Dequeue();
			this._bladeColorCollectionViaComponentInspectionReportBlade = (EntityCollection<BladeColorEntity>) collectionsQueue.Dequeue();
			this._bladeLengthCollectionViaComponentInspectionReportBlade = (EntityCollection<BladeLengthEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_____ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP______ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP____ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_______ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportGeneral_ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportBlade_ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportBlade = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportGeneral = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportGenerator = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportMainBearing = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportTransformer = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportGearbox = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP______________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP____________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._booleanAnswerCollectionViaComponentInspectionReportSkiiP________________ = (EntityCollection<BooleanAnswerEntity>) collectionsQueue.Dequeue();
			this._bracketsCollectionViaComponentInspectionReportTransformer = (EntityCollection<BracketsEntity>) collectionsQueue.Dequeue();
			this._cableConditionCollectionViaComponentInspectionReportTransformer = (EntityCollection<CableConditionEntity>) collectionsQueue.Dequeue();
			this._cableConditionCollectionViaComponentInspectionReportTransformer_ = (EntityCollection<CableConditionEntity>) collectionsQueue.Dequeue();
			this._climateCollectionViaComponentInspectionReportTransformer = (EntityCollection<ClimateEntity>) collectionsQueue.Dequeue();
			this._coilConditionCollectionViaComponentInspectionReportTransformer_ = (EntityCollection<CoilConditionEntity>) collectionsQueue.Dequeue();
			this._coilConditionCollectionViaComponentInspectionReportTransformer = (EntityCollection<CoilConditionEntity>) collectionsQueue.Dequeue();
			this._componentGroupCollectionViaComponentInspectionReportGeneral = (EntityCollection<ComponentGroupEntity>) collectionsQueue.Dequeue();
			this._connectionBarsCollectionViaComponentInspectionReportTransformer = (EntityCollection<ConnectionBarsEntity>) collectionsQueue.Dequeue();
			this._controllerTypeCollectionViaComponentInspectionReportGeneral = (EntityCollection<ControllerTypeEntity>) collectionsQueue.Dequeue();
			this._couplingCollectionViaComponentInspectionReportGenerator = (EntityCollection<CouplingEntity>) collectionsQueue.Dequeue();
			this._couplingCollectionViaComponentInspectionReportGearbox = (EntityCollection<CouplingEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox__________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox__________________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox______ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_______ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox___________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_________________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox________________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox____________________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox___________________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_____________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox____________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_______________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox______________ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._damageDecisionCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<DamageDecisionEntity>) collectionsQueue.Dequeue();
			this._debrisGearboxCollectionViaComponentInspectionReportGearbox = (EntityCollection<DebrisGearboxEntity>) collectionsQueue.Dequeue();
			this._debrisOnMagnetCollectionViaComponentInspectionReportGearbox = (EntityCollection<DebrisOnMagnetEntity>) collectionsQueue.Dequeue();
			this._electricalPumpCollectionViaComponentInspectionReportGearbox = (EntityCollection<ElectricalPumpEntity>) collectionsQueue.Dequeue();
			this._faultCodeAreaCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeAreaEntity>) collectionsQueue.Dequeue();
			this._faultCodeCauseCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeCauseEntity>) collectionsQueue.Dequeue();
			this._faultCodeClassificationCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeClassificationEntity>) collectionsQueue.Dequeue();
			this._faultCodeTypeCollectionViaComponentInspectionReportBlade = (EntityCollection<FaultCodeTypeEntity>) collectionsQueue.Dequeue();
			this._filterBlockTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<FilterBlockTypeEntity>) collectionsQueue.Dequeue();
			this._gearboxManufacturerCollectionViaComponentInspectionReportGeneral = (EntityCollection<GearboxManufacturerEntity>) collectionsQueue.Dequeue();
			this._gearboxManufacturerCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearboxManufacturerEntity>) collectionsQueue.Dequeue();
			this._gearboxRevisionCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearboxRevisionEntity>) collectionsQueue.Dequeue();
			this._gearboxTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearboxTypeEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox____________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox_________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox__________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox___________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox_____________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox______ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox______________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox________ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearErrorCollectionViaComponentInspectionReportGearbox_______ = (EntityCollection<GearErrorEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox_________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox__________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox_______ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox___________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox______________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox______ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox____________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._gearTypeCollectionViaComponentInspectionReportGearbox_____________ = (EntityCollection<GearTypeEntity>) collectionsQueue.Dequeue();
			this._generatorCoverCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorCoverEntity>) collectionsQueue.Dequeue();
			this._generatorDriveEndCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorDriveEndEntity>) collectionsQueue.Dequeue();
			this._generatorManufacturerCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<GeneratorManufacturerEntity>) collectionsQueue.Dequeue();
			this._generatorManufacturerCollectionViaComponentInspectionReportGearbox = (EntityCollection<GeneratorManufacturerEntity>) collectionsQueue.Dequeue();
			this._generatorManufacturerCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorManufacturerEntity>) collectionsQueue.Dequeue();
			this._generatorManufacturerCollectionViaComponentInspectionReportGeneral = (EntityCollection<GeneratorManufacturerEntity>) collectionsQueue.Dequeue();
			this._generatorNonDriveEndCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorNonDriveEndEntity>) collectionsQueue.Dequeue();
			this._generatorRotorCollectionViaComponentInspectionReportGenerator = (EntityCollection<GeneratorRotorEntity>) collectionsQueue.Dequeue();
			this._housingErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<HousingErrorEntity>) collectionsQueue.Dequeue();
			this._housingErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<HousingErrorEntity>) collectionsQueue.Dequeue();
			this._housingErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<HousingErrorEntity>) collectionsQueue.Dequeue();
			this._housingErrorCollectionViaComponentInspectionReportGearbox____ = (EntityCollection<HousingErrorEntity>) collectionsQueue.Dequeue();
			this._housingErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<HousingErrorEntity>) collectionsQueue.Dequeue();
			this._housingErrorCollectionViaComponentInspectionReportGearbox_____ = (EntityCollection<HousingErrorEntity>) collectionsQueue.Dequeue();
			this._inlineFilterCollectionViaComponentInspectionReportGearbox = (EntityCollection<InlineFilterEntity>) collectionsQueue.Dequeue();
			this._magnetPosCollectionViaComponentInspectionReportGearbox = (EntityCollection<MagnetPosEntity>) collectionsQueue.Dequeue();
			this._mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing = (EntityCollection<MainBearingErrorLocationEntity>) collectionsQueue.Dequeue();
			this._mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing = (EntityCollection<MainBearingManufacturerEntity>) collectionsQueue.Dequeue();
			this._mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_ = (EntityCollection<MainBearingManufacturerEntity>) collectionsQueue.Dequeue();
			this._mechanicalOilPumpCollectionViaComponentInspectionReportGearbox = (EntityCollection<MechanicalOilPumpEntity>) collectionsQueue.Dequeue();
			this._noiseCollectionViaComponentInspectionReportGearbox = (EntityCollection<NoiseEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator_ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator___ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator____ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator__ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator______ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator_____ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator________ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._ohmUnitCollectionViaComponentInspectionReportGenerator_______ = (EntityCollection<OhmUnitEntity>) collectionsQueue.Dequeue();
			this._oilLevelCollectionViaComponentInspectionReportGearbox = (EntityCollection<OilLevelEntity>) collectionsQueue.Dequeue();
			this._oilTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<OilTypeEntity>) collectionsQueue.Dequeue();
			this._oilTypeCollectionViaComponentInspectionReportMainBearing = (EntityCollection<OilTypeEntity>) collectionsQueue.Dequeue();
			this._overallGearboxConditionCollectionViaComponentInspectionReportGearbox = (EntityCollection<OverallGearboxConditionEntity>) collectionsQueue.Dequeue();
			this._shaftErrorCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<ShaftErrorEntity>) collectionsQueue.Dequeue();
			this._shaftErrorCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<ShaftErrorEntity>) collectionsQueue.Dequeue();
			this._shaftErrorCollectionViaComponentInspectionReportGearbox = (EntityCollection<ShaftErrorEntity>) collectionsQueue.Dequeue();
			this._shaftErrorCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<ShaftErrorEntity>) collectionsQueue.Dequeue();
			this._shaftTypeCollectionViaComponentInspectionReportGearbox_ = (EntityCollection<ShaftTypeEntity>) collectionsQueue.Dequeue();
			this._shaftTypeCollectionViaComponentInspectionReportGearbox = (EntityCollection<ShaftTypeEntity>) collectionsQueue.Dequeue();
			this._shaftTypeCollectionViaComponentInspectionReportGearbox__ = (EntityCollection<ShaftTypeEntity>) collectionsQueue.Dequeue();
			this._shaftTypeCollectionViaComponentInspectionReportGearbox___ = (EntityCollection<ShaftTypeEntity>) collectionsQueue.Dequeue();
			this._shrinkElementCollectionViaComponentInspectionReportGearbox = (EntityCollection<ShrinkElementEntity>) collectionsQueue.Dequeue();
			this._skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP = (EntityCollection<SkiipackFailureCauseEntity>) collectionsQueue.Dequeue();
			this._surgeArrestorCollectionViaComponentInspectionReportTransformer = (EntityCollection<SurgeArrestorEntity>) collectionsQueue.Dequeue();
			this._towerHeightCollectionViaComponentInspectionReportGeneral = (EntityCollection<TowerHeightEntity>) collectionsQueue.Dequeue();
			this._towerTypeCollectionViaComponentInspectionReportGeneral = (EntityCollection<TowerTypeEntity>) collectionsQueue.Dequeue();
			this._transformerManufacturerCollectionViaComponentInspectionReportTransformer = (EntityCollection<TransformerManufacturerEntity>) collectionsQueue.Dequeue();
			this._transformerManufacturerCollectionViaComponentInspectionReportGeneral = (EntityCollection<TransformerManufacturerEntity>) collectionsQueue.Dequeue();
			this._vibrationsCollectionViaComponentInspectionReportGearbox = (EntityCollection<VibrationsEntity>) collectionsQueue.Dequeue();
		}
		
		/// <summary>Determines whether the entity has populated member collections</summary>
		/// <returns>true if the entity has populated member collections.</returns>
		protected override bool HasPopulatedMemberEntityCollections()
		{
			if (this._componentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._componentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._componentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._componentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._componentInspectionReportMainBearing != null)
			{
				return true;
			}
			if (this._componentInspectionReportSkiiP != null)
			{
				return true;
			}
			if (this._componentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._actionOnTransformerCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._arcDetectionCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._bearingErrorCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._bearingErrorCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._bearingErrorCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._bearingErrorCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._bearingErrorCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._bearingErrorCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._bearingPosCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._bearingPosCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._bearingPosCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._bearingPosCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._bearingPosCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._bearingPosCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._bearingTypeCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._bearingTypeCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._bearingTypeCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._bearingTypeCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._bearingTypeCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._bearingTypeCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._bladeColorCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._bladeLengthCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_____ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP______ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP____ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_______ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportGeneral_ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportBlade_ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportMainBearing != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP__ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP______________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP____________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________ != null)
			{
				return true;
			}
			if (this._booleanAnswerCollectionViaComponentInspectionReportSkiiP________________ != null)
			{
				return true;
			}
			if (this._bracketsCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._cableConditionCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._cableConditionCollectionViaComponentInspectionReportTransformer_ != null)
			{
				return true;
			}
			if (this._climateCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._coilConditionCollectionViaComponentInspectionReportTransformer_ != null)
			{
				return true;
			}
			if (this._coilConditionCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._componentGroupCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._connectionBarsCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._controllerTypeCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._couplingCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._couplingCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox__________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox__________________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox______ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_______ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox___________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_________________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox________________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox____________________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox___________________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_____________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox____________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_______________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox______________ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._damageDecisionCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._debrisGearboxCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._debrisOnMagnetCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._electricalPumpCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._faultCodeAreaCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._faultCodeCauseCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._faultCodeClassificationCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._faultCodeTypeCollectionViaComponentInspectionReportBlade != null)
			{
				return true;
			}
			if (this._filterBlockTypeCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._gearboxManufacturerCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._gearboxManufacturerCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._gearboxRevisionCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._gearboxTypeCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox____________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox_________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox__________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox___________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox_____________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox______ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox______________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox________ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._gearErrorCollectionViaComponentInspectionReportGearbox_______ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox_________ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox__________ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox_______ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox________ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox___________ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox______________ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox______ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox____________ != null)
			{
				return true;
			}
			if (this._gearTypeCollectionViaComponentInspectionReportGearbox_____________ != null)
			{
				return true;
			}
			if (this._generatorCoverCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._generatorDriveEndCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._generatorManufacturerCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._generatorManufacturerCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._generatorManufacturerCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._generatorManufacturerCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._generatorNonDriveEndCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._generatorRotorCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._housingErrorCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._housingErrorCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._housingErrorCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._housingErrorCollectionViaComponentInspectionReportGearbox____ != null)
			{
				return true;
			}
			if (this._housingErrorCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._housingErrorCollectionViaComponentInspectionReportGearbox_____ != null)
			{
				return true;
			}
			if (this._inlineFilterCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._magnetPosCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing != null)
			{
				return true;
			}
			if (this._mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing != null)
			{
				return true;
			}
			if (this._mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_ != null)
			{
				return true;
			}
			if (this._mechanicalOilPumpCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._noiseCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator_ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator___ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator____ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator__ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator______ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator_____ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator________ != null)
			{
				return true;
			}
			if (this._ohmUnitCollectionViaComponentInspectionReportGenerator_______ != null)
			{
				return true;
			}
			if (this._oilLevelCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._oilTypeCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._oilTypeCollectionViaComponentInspectionReportMainBearing != null)
			{
				return true;
			}
			if (this._overallGearboxConditionCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._shaftErrorCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._shaftErrorCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._shaftErrorCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._shaftErrorCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._shaftTypeCollectionViaComponentInspectionReportGearbox_ != null)
			{
				return true;
			}
			if (this._shaftTypeCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._shaftTypeCollectionViaComponentInspectionReportGearbox__ != null)
			{
				return true;
			}
			if (this._shaftTypeCollectionViaComponentInspectionReportGearbox___ != null)
			{
				return true;
			}
			if (this._shrinkElementCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			if (this._skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP != null)
			{
				return true;
			}
			if (this._surgeArrestorCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._towerHeightCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._towerTypeCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._transformerManufacturerCollectionViaComponentInspectionReportTransformer != null)
			{
				return true;
			}
			if (this._transformerManufacturerCollectionViaComponentInspectionReportGeneral != null)
			{
				return true;
			}
			if (this._vibrationsCollectionViaComponentInspectionReportGearbox != null)
			{
				return true;
			}
			return base.HasPopulatedMemberEntityCollections();
		}
		
		/// <summary>Creates the member entity collections queue.</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		/// <param name="requiredQueue">The required queue.</param>
		protected override void CreateMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue, Queue<bool> requiredQueue) 
		{
			base.CreateMemberEntityCollectionsQueue(collectionsQueue, requiredQueue);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportBladeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportBladeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportGearboxEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGearboxEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportGeneralEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGeneralEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportGeneratorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGeneratorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportMainBearingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportMainBearingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportSkiiPEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportSkiiPEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentInspectionReportTransformerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportTransformerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActionOnTransformerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActionOnTransformerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActionToBeTakenOnGeneratorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActionToBeTakenOnGeneratorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ArcDetectionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ArcDetectionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BladeColorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BladeColorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BladeLengthEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BladeLengthEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BracketsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BracketsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CableConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CableConditionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CableConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CableConditionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ClimateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClimateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CoilConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CoilConditionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CoilConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CoilConditionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ComponentGroupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentGroupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ConnectionBarsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ConnectionBarsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ControllerTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ControllerTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CouplingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouplingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CouplingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouplingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DebrisGearboxEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DebrisGearboxEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DebrisOnMagnetEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DebrisOnMagnetEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ElectricalPumpEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ElectricalPumpEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FaultCodeAreaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeAreaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FaultCodeCauseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeCauseEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FaultCodeClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeClassificationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FaultCodeTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FilterBlockTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FilterBlockTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearboxManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearboxManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearboxRevisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxRevisionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearboxTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorCoverEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorCoverEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorDriveEndEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorDriveEndEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorNonDriveEndEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorNonDriveEndEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GeneratorRotorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorRotorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<InlineFilterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(InlineFilterEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MagnetPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MagnetPosEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MainBearingErrorLocationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingErrorLocationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MainBearingManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MainBearingManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MechanicalOilPumpEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MechanicalOilPumpEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NoiseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NoiseEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OilLevelEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilLevelEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OilTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OilTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OverallGearboxConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OverallGearboxConditionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShrinkElementEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShrinkElementEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SkiipackFailureCauseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SkiipackFailureCauseEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurgeArrestorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurgeArrestorEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TowerHeightEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TowerHeightEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TowerTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TowerTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TransformerManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TransformerManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TransformerManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TransformerManufacturerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<VibrationsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(VibrationsEntityFactory))) : null);
		}
#endif
		/// <summary>
		/// Gets all related data objects, stored by name. The name is the field name mapped onto the relation for that particular data element. 
		/// </summary>
		/// <returns>Dictionary with per name the related referenced data element, which can be an entity collection or an entity or null</returns>
		public override Dictionary<string, object> GetRelatedData()
		{
			Dictionary<string, object> toReturn = new Dictionary<string, object>();
			toReturn.Add("BooleanAnswer__", _booleanAnswer__);
			toReturn.Add("BooleanAnswer_", _booleanAnswer_);
			toReturn.Add("BooleanAnswer", _booleanAnswer);
			toReturn.Add("ComponentInspectionReportType", _componentInspectionReportType);
			toReturn.Add("CountryIso", _countryIso);
			toReturn.Add("LocationType", _locationType);
			toReturn.Add("ReportType", _reportType);
			toReturn.Add("Sbu", _sbu);
			toReturn.Add("ServiceReportNumberType", _serviceReportNumberType);
			toReturn.Add("TurbineMatrix", _turbineMatrix);
			toReturn.Add("TurbineRunStatus_", _turbineRunStatus_);
			toReturn.Add("TurbineRunStatus", _turbineRunStatus);
			toReturn.Add("ComponentInspectionReportBlade", _componentInspectionReportBlade);
			toReturn.Add("ComponentInspectionReportGearbox", _componentInspectionReportGearbox);
			toReturn.Add("ComponentInspectionReportGeneral", _componentInspectionReportGeneral);
			toReturn.Add("ComponentInspectionReportGenerator", _componentInspectionReportGenerator);
			toReturn.Add("ComponentInspectionReportMainBearing", _componentInspectionReportMainBearing);
			toReturn.Add("ComponentInspectionReportSkiiP", _componentInspectionReportSkiiP);
			toReturn.Add("ComponentInspectionReportTransformer", _componentInspectionReportTransformer);
			toReturn.Add("ActionOnTransformerCollectionViaComponentInspectionReportTransformer", _actionOnTransformerCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator", _actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("ArcDetectionCollectionViaComponentInspectionReportTransformer", _arcDetectionCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("BearingErrorCollectionViaComponentInspectionReportGearbox____", _bearingErrorCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("BearingErrorCollectionViaComponentInspectionReportGearbox", _bearingErrorCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("BearingErrorCollectionViaComponentInspectionReportGearbox___", _bearingErrorCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("BearingErrorCollectionViaComponentInspectionReportGearbox_", _bearingErrorCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("BearingErrorCollectionViaComponentInspectionReportGearbox_____", _bearingErrorCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("BearingErrorCollectionViaComponentInspectionReportGearbox__", _bearingErrorCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("BearingPosCollectionViaComponentInspectionReportGearbox____", _bearingPosCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("BearingPosCollectionViaComponentInspectionReportGearbox_", _bearingPosCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("BearingPosCollectionViaComponentInspectionReportGearbox__", _bearingPosCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("BearingPosCollectionViaComponentInspectionReportGearbox___", _bearingPosCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("BearingPosCollectionViaComponentInspectionReportGearbox", _bearingPosCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("BearingPosCollectionViaComponentInspectionReportGearbox_____", _bearingPosCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("BearingTypeCollectionViaComponentInspectionReportGearbox_", _bearingTypeCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("BearingTypeCollectionViaComponentInspectionReportGearbox__", _bearingTypeCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("BearingTypeCollectionViaComponentInspectionReportGearbox___", _bearingTypeCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("BearingTypeCollectionViaComponentInspectionReportGearbox", _bearingTypeCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("BearingTypeCollectionViaComponentInspectionReportGearbox____", _bearingTypeCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("BearingTypeCollectionViaComponentInspectionReportGearbox_____", _bearingTypeCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("BladeColorCollectionViaComponentInspectionReportBlade", _bladeColorCollectionViaComponentInspectionReportBlade);
			toReturn.Add("BladeLengthCollectionViaComponentInspectionReportBlade", _bladeLengthCollectionViaComponentInspectionReportBlade);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_____);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP______", _booleanAnswerCollectionViaComponentInspectionReportSkiiP______);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP___", _booleanAnswerCollectionViaComponentInspectionReportSkiiP___);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP____", _booleanAnswerCollectionViaComponentInspectionReportSkiiP____);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP__________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_______);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportGeneral_", _booleanAnswerCollectionViaComponentInspectionReportGeneral_);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportBlade_", _booleanAnswerCollectionViaComponentInspectionReportBlade_);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportBlade", _booleanAnswerCollectionViaComponentInspectionReportBlade);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportGeneral", _booleanAnswerCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP", _booleanAnswerCollectionViaComponentInspectionReportSkiiP);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportGenerator", _booleanAnswerCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportMainBearing", _booleanAnswerCollectionViaComponentInspectionReportMainBearing);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP___________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportTransformer", _booleanAnswerCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP__", _booleanAnswerCollectionViaComponentInspectionReportSkiiP__);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportGearbox", _booleanAnswerCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportGearbox_", _booleanAnswerCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP______________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP____________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________);
			toReturn.Add("BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________", _booleanAnswerCollectionViaComponentInspectionReportSkiiP________________);
			toReturn.Add("BracketsCollectionViaComponentInspectionReportTransformer", _bracketsCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("CableConditionCollectionViaComponentInspectionReportTransformer", _cableConditionCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("CableConditionCollectionViaComponentInspectionReportTransformer_", _cableConditionCollectionViaComponentInspectionReportTransformer_);
			toReturn.Add("ClimateCollectionViaComponentInspectionReportTransformer", _climateCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("CoilConditionCollectionViaComponentInspectionReportTransformer_", _coilConditionCollectionViaComponentInspectionReportTransformer_);
			toReturn.Add("CoilConditionCollectionViaComponentInspectionReportTransformer", _coilConditionCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("ComponentGroupCollectionViaComponentInspectionReportGeneral", _componentGroupCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("ConnectionBarsCollectionViaComponentInspectionReportTransformer", _connectionBarsCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("ControllerTypeCollectionViaComponentInspectionReportGeneral", _controllerTypeCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("CouplingCollectionViaComponentInspectionReportGenerator", _couplingCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("CouplingCollectionViaComponentInspectionReportGearbox", _couplingCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox________", _damageDecisionCollectionViaComponentInspectionReportGearbox________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_________", _damageDecisionCollectionViaComponentInspectionReportGearbox_________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox__________", _damageDecisionCollectionViaComponentInspectionReportGearbox__________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox__________________", _damageDecisionCollectionViaComponentInspectionReportGearbox__________________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox______", _damageDecisionCollectionViaComponentInspectionReportGearbox______);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_______", _damageDecisionCollectionViaComponentInspectionReportGearbox_______);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox___________", _damageDecisionCollectionViaComponentInspectionReportGearbox___________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_________________", _damageDecisionCollectionViaComponentInspectionReportGearbox_________________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox________________", _damageDecisionCollectionViaComponentInspectionReportGearbox________________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox____________________", _damageDecisionCollectionViaComponentInspectionReportGearbox____________________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox___________________", _damageDecisionCollectionViaComponentInspectionReportGearbox___________________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_____________", _damageDecisionCollectionViaComponentInspectionReportGearbox_____________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox____________", _damageDecisionCollectionViaComponentInspectionReportGearbox____________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_______________", _damageDecisionCollectionViaComponentInspectionReportGearbox_______________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox______________", _damageDecisionCollectionViaComponentInspectionReportGearbox______________);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox___", _damageDecisionCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox", _damageDecisionCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox__", _damageDecisionCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_____", _damageDecisionCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox____", _damageDecisionCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("DamageDecisionCollectionViaComponentInspectionReportGearbox_", _damageDecisionCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("DebrisGearboxCollectionViaComponentInspectionReportGearbox", _debrisGearboxCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("DebrisOnMagnetCollectionViaComponentInspectionReportGearbox", _debrisOnMagnetCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("ElectricalPumpCollectionViaComponentInspectionReportGearbox", _electricalPumpCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("FaultCodeAreaCollectionViaComponentInspectionReportBlade", _faultCodeAreaCollectionViaComponentInspectionReportBlade);
			toReturn.Add("FaultCodeCauseCollectionViaComponentInspectionReportBlade", _faultCodeCauseCollectionViaComponentInspectionReportBlade);
			toReturn.Add("FaultCodeClassificationCollectionViaComponentInspectionReportBlade", _faultCodeClassificationCollectionViaComponentInspectionReportBlade);
			toReturn.Add("FaultCodeTypeCollectionViaComponentInspectionReportBlade", _faultCodeTypeCollectionViaComponentInspectionReportBlade);
			toReturn.Add("FilterBlockTypeCollectionViaComponentInspectionReportGearbox", _filterBlockTypeCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GearboxManufacturerCollectionViaComponentInspectionReportGeneral", _gearboxManufacturerCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("GearboxManufacturerCollectionViaComponentInspectionReportGearbox", _gearboxManufacturerCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GearboxRevisionCollectionViaComponentInspectionReportGearbox", _gearboxRevisionCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GearboxTypeCollectionViaComponentInspectionReportGearbox", _gearboxTypeCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox____________", _gearErrorCollectionViaComponentInspectionReportGearbox____________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox_________", _gearErrorCollectionViaComponentInspectionReportGearbox_________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox__________", _gearErrorCollectionViaComponentInspectionReportGearbox__________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox___________", _gearErrorCollectionViaComponentInspectionReportGearbox___________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox_____________", _gearErrorCollectionViaComponentInspectionReportGearbox_____________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox_", _gearErrorCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox______", _gearErrorCollectionViaComponentInspectionReportGearbox______);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox______________", _gearErrorCollectionViaComponentInspectionReportGearbox______________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox", _gearErrorCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox________", _gearErrorCollectionViaComponentInspectionReportGearbox________);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox___", _gearErrorCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox____", _gearErrorCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox_____", _gearErrorCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox__", _gearErrorCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("GearErrorCollectionViaComponentInspectionReportGearbox_______", _gearErrorCollectionViaComponentInspectionReportGearbox_______);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox", _gearTypeCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox___", _gearTypeCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox_", _gearTypeCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox_____", _gearTypeCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox____", _gearTypeCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox__", _gearTypeCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox_________", _gearTypeCollectionViaComponentInspectionReportGearbox_________);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox__________", _gearTypeCollectionViaComponentInspectionReportGearbox__________);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox_______", _gearTypeCollectionViaComponentInspectionReportGearbox_______);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox________", _gearTypeCollectionViaComponentInspectionReportGearbox________);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox___________", _gearTypeCollectionViaComponentInspectionReportGearbox___________);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox______________", _gearTypeCollectionViaComponentInspectionReportGearbox______________);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox______", _gearTypeCollectionViaComponentInspectionReportGearbox______);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox____________", _gearTypeCollectionViaComponentInspectionReportGearbox____________);
			toReturn.Add("GearTypeCollectionViaComponentInspectionReportGearbox_____________", _gearTypeCollectionViaComponentInspectionReportGearbox_____________);
			toReturn.Add("GeneratorCoverCollectionViaComponentInspectionReportGenerator", _generatorCoverCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("GeneratorDriveEndCollectionViaComponentInspectionReportGenerator", _generatorDriveEndCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_", _generatorManufacturerCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("GeneratorManufacturerCollectionViaComponentInspectionReportGearbox", _generatorManufacturerCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("GeneratorManufacturerCollectionViaComponentInspectionReportGenerator", _generatorManufacturerCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("GeneratorManufacturerCollectionViaComponentInspectionReportGeneral", _generatorManufacturerCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator", _generatorNonDriveEndCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("GeneratorRotorCollectionViaComponentInspectionReportGenerator", _generatorRotorCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("HousingErrorCollectionViaComponentInspectionReportGearbox_", _housingErrorCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("HousingErrorCollectionViaComponentInspectionReportGearbox__", _housingErrorCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("HousingErrorCollectionViaComponentInspectionReportGearbox___", _housingErrorCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("HousingErrorCollectionViaComponentInspectionReportGearbox____", _housingErrorCollectionViaComponentInspectionReportGearbox____);
			toReturn.Add("HousingErrorCollectionViaComponentInspectionReportGearbox", _housingErrorCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("HousingErrorCollectionViaComponentInspectionReportGearbox_____", _housingErrorCollectionViaComponentInspectionReportGearbox_____);
			toReturn.Add("InlineFilterCollectionViaComponentInspectionReportGearbox", _inlineFilterCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("MagnetPosCollectionViaComponentInspectionReportGearbox", _magnetPosCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing", _mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing);
			toReturn.Add("MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing", _mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing);
			toReturn.Add("MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_", _mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_);
			toReturn.Add("MechanicalOilPumpCollectionViaComponentInspectionReportGearbox", _mechanicalOilPumpCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("NoiseCollectionViaComponentInspectionReportGearbox", _noiseCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator_", _ohmUnitCollectionViaComponentInspectionReportGenerator_);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator", _ohmUnitCollectionViaComponentInspectionReportGenerator);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator___", _ohmUnitCollectionViaComponentInspectionReportGenerator___);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator____", _ohmUnitCollectionViaComponentInspectionReportGenerator____);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator__", _ohmUnitCollectionViaComponentInspectionReportGenerator__);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator______", _ohmUnitCollectionViaComponentInspectionReportGenerator______);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator_____", _ohmUnitCollectionViaComponentInspectionReportGenerator_____);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator________", _ohmUnitCollectionViaComponentInspectionReportGenerator________);
			toReturn.Add("OhmUnitCollectionViaComponentInspectionReportGenerator_______", _ohmUnitCollectionViaComponentInspectionReportGenerator_______);
			toReturn.Add("OilLevelCollectionViaComponentInspectionReportGearbox", _oilLevelCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("OilTypeCollectionViaComponentInspectionReportGearbox", _oilTypeCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("OilTypeCollectionViaComponentInspectionReportMainBearing", _oilTypeCollectionViaComponentInspectionReportMainBearing);
			toReturn.Add("OverallGearboxConditionCollectionViaComponentInspectionReportGearbox", _overallGearboxConditionCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("ShaftErrorCollectionViaComponentInspectionReportGearbox___", _shaftErrorCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("ShaftErrorCollectionViaComponentInspectionReportGearbox_", _shaftErrorCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("ShaftErrorCollectionViaComponentInspectionReportGearbox", _shaftErrorCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("ShaftErrorCollectionViaComponentInspectionReportGearbox__", _shaftErrorCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("ShaftTypeCollectionViaComponentInspectionReportGearbox_", _shaftTypeCollectionViaComponentInspectionReportGearbox_);
			toReturn.Add("ShaftTypeCollectionViaComponentInspectionReportGearbox", _shaftTypeCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("ShaftTypeCollectionViaComponentInspectionReportGearbox__", _shaftTypeCollectionViaComponentInspectionReportGearbox__);
			toReturn.Add("ShaftTypeCollectionViaComponentInspectionReportGearbox___", _shaftTypeCollectionViaComponentInspectionReportGearbox___);
			toReturn.Add("ShrinkElementCollectionViaComponentInspectionReportGearbox", _shrinkElementCollectionViaComponentInspectionReportGearbox);
			toReturn.Add("SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP", _skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP);
			toReturn.Add("SurgeArrestorCollectionViaComponentInspectionReportTransformer", _surgeArrestorCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("TowerHeightCollectionViaComponentInspectionReportGeneral", _towerHeightCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("TowerTypeCollectionViaComponentInspectionReportGeneral", _towerTypeCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("TransformerManufacturerCollectionViaComponentInspectionReportTransformer", _transformerManufacturerCollectionViaComponentInspectionReportTransformer);
			toReturn.Add("TransformerManufacturerCollectionViaComponentInspectionReportGeneral", _transformerManufacturerCollectionViaComponentInspectionReportGeneral);
			toReturn.Add("VibrationsCollectionViaComponentInspectionReportGearbox", _vibrationsCollectionViaComponentInspectionReportGearbox);

			return toReturn;
		}
		
		/// <summary> Adds the internals to the active context. </summary>
		protected override void AddInternalsToContext()
		{
			if(_componentInspectionReportBlade!=null)
			{
				_componentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportGearbox!=null)
			{
				_componentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportGeneral!=null)
			{
				_componentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportGenerator!=null)
			{
				_componentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportMainBearing!=null)
			{
				_componentInspectionReportMainBearing.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportSkiiP!=null)
			{
				_componentInspectionReportSkiiP.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportTransformer!=null)
			{
				_componentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_actionOnTransformerCollectionViaComponentInspectionReportTransformer!=null)
			{
				_actionOnTransformerCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator!=null)
			{
				_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_arcDetectionCollectionViaComponentInspectionReportTransformer!=null)
			{
				_arcDetectionCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_bearingErrorCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_bearingErrorCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_bearingErrorCollectionViaComponentInspectionReportGearbox!=null)
			{
				_bearingErrorCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_bearingErrorCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_bearingErrorCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_bearingErrorCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_bearingErrorCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_bearingErrorCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_bearingErrorCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_bearingErrorCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_bearingErrorCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_bearingPosCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_bearingPosCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_bearingPosCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_bearingPosCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_bearingPosCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_bearingPosCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_bearingPosCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_bearingPosCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_bearingPosCollectionViaComponentInspectionReportGearbox!=null)
			{
				_bearingPosCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_bearingPosCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_bearingPosCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_bearingTypeCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_bearingTypeCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_bearingTypeCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_bearingTypeCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_bearingTypeCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_bearingTypeCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_bearingTypeCollectionViaComponentInspectionReportGearbox!=null)
			{
				_bearingTypeCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_bearingTypeCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_bearingTypeCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_bearingTypeCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_bearingTypeCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_bladeColorCollectionViaComponentInspectionReportBlade!=null)
			{
				_bladeColorCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_bladeLengthCollectionViaComponentInspectionReportBlade!=null)
			{
				_bladeLengthCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP______!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP______.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP___!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP___.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP____!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP____.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportGeneral_!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportGeneral_.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportBlade_!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportBlade_.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportBlade!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportGeneral!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportGenerator!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportMainBearing!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportMainBearing.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportTransformer!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP__!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP__.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportGearbox!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________!=null)
			{
				_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________.ActiveContext = base.ActiveContext;
			}
			if(_bracketsCollectionViaComponentInspectionReportTransformer!=null)
			{
				_bracketsCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_cableConditionCollectionViaComponentInspectionReportTransformer!=null)
			{
				_cableConditionCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_cableConditionCollectionViaComponentInspectionReportTransformer_!=null)
			{
				_cableConditionCollectionViaComponentInspectionReportTransformer_.ActiveContext = base.ActiveContext;
			}
			if(_climateCollectionViaComponentInspectionReportTransformer!=null)
			{
				_climateCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_coilConditionCollectionViaComponentInspectionReportTransformer_!=null)
			{
				_coilConditionCollectionViaComponentInspectionReportTransformer_.ActiveContext = base.ActiveContext;
			}
			if(_coilConditionCollectionViaComponentInspectionReportTransformer!=null)
			{
				_coilConditionCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_componentGroupCollectionViaComponentInspectionReportGeneral!=null)
			{
				_componentGroupCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_connectionBarsCollectionViaComponentInspectionReportTransformer!=null)
			{
				_connectionBarsCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_controllerTypeCollectionViaComponentInspectionReportGeneral!=null)
			{
				_controllerTypeCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_couplingCollectionViaComponentInspectionReportGenerator!=null)
			{
				_couplingCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_couplingCollectionViaComponentInspectionReportGearbox!=null)
			{
				_couplingCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox__________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox__________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox__________________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox__________________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox______!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox______.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_______!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_______.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox___________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox___________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_________________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_________________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox________________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox________________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox____________________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox____________________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox___________________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox___________________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_____________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_____________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox____________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox____________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_______________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_______________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox______________!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox______________.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_damageDecisionCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_damageDecisionCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_debrisGearboxCollectionViaComponentInspectionReportGearbox!=null)
			{
				_debrisGearboxCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_debrisOnMagnetCollectionViaComponentInspectionReportGearbox!=null)
			{
				_debrisOnMagnetCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_electricalPumpCollectionViaComponentInspectionReportGearbox!=null)
			{
				_electricalPumpCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_faultCodeAreaCollectionViaComponentInspectionReportBlade!=null)
			{
				_faultCodeAreaCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_faultCodeCauseCollectionViaComponentInspectionReportBlade!=null)
			{
				_faultCodeCauseCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_faultCodeClassificationCollectionViaComponentInspectionReportBlade!=null)
			{
				_faultCodeClassificationCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_faultCodeTypeCollectionViaComponentInspectionReportBlade!=null)
			{
				_faultCodeTypeCollectionViaComponentInspectionReportBlade.ActiveContext = base.ActiveContext;
			}
			if(_filterBlockTypeCollectionViaComponentInspectionReportGearbox!=null)
			{
				_filterBlockTypeCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_gearboxManufacturerCollectionViaComponentInspectionReportGeneral!=null)
			{
				_gearboxManufacturerCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_gearboxManufacturerCollectionViaComponentInspectionReportGearbox!=null)
			{
				_gearboxManufacturerCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_gearboxRevisionCollectionViaComponentInspectionReportGearbox!=null)
			{
				_gearboxRevisionCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_gearboxTypeCollectionViaComponentInspectionReportGearbox!=null)
			{
				_gearboxTypeCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox____________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox____________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox_________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox_________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox__________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox__________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox___________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox___________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox_____________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox_____________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox______!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox______.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox______________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox______________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox________!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox________.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_gearErrorCollectionViaComponentInspectionReportGearbox_______!=null)
			{
				_gearErrorCollectionViaComponentInspectionReportGearbox_______.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox_________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox_________.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox__________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox__________.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox_______!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox_______.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox________.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox___________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox___________.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox______________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox______________.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox______!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox______.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox____________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox____________.ActiveContext = base.ActiveContext;
			}
			if(_gearTypeCollectionViaComponentInspectionReportGearbox_____________!=null)
			{
				_gearTypeCollectionViaComponentInspectionReportGearbox_____________.ActiveContext = base.ActiveContext;
			}
			if(_generatorCoverCollectionViaComponentInspectionReportGenerator!=null)
			{
				_generatorCoverCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_generatorDriveEndCollectionViaComponentInspectionReportGenerator!=null)
			{
				_generatorDriveEndCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_generatorManufacturerCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_generatorManufacturerCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_generatorManufacturerCollectionViaComponentInspectionReportGearbox!=null)
			{
				_generatorManufacturerCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_generatorManufacturerCollectionViaComponentInspectionReportGenerator!=null)
			{
				_generatorManufacturerCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_generatorManufacturerCollectionViaComponentInspectionReportGeneral!=null)
			{
				_generatorManufacturerCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator!=null)
			{
				_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_generatorRotorCollectionViaComponentInspectionReportGenerator!=null)
			{
				_generatorRotorCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_housingErrorCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_housingErrorCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_housingErrorCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_housingErrorCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_housingErrorCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_housingErrorCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_housingErrorCollectionViaComponentInspectionReportGearbox____!=null)
			{
				_housingErrorCollectionViaComponentInspectionReportGearbox____.ActiveContext = base.ActiveContext;
			}
			if(_housingErrorCollectionViaComponentInspectionReportGearbox!=null)
			{
				_housingErrorCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_housingErrorCollectionViaComponentInspectionReportGearbox_____!=null)
			{
				_housingErrorCollectionViaComponentInspectionReportGearbox_____.ActiveContext = base.ActiveContext;
			}
			if(_inlineFilterCollectionViaComponentInspectionReportGearbox!=null)
			{
				_inlineFilterCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_magnetPosCollectionViaComponentInspectionReportGearbox!=null)
			{
				_magnetPosCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing!=null)
			{
				_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing.ActiveContext = base.ActiveContext;
			}
			if(_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing!=null)
			{
				_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing.ActiveContext = base.ActiveContext;
			}
			if(_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_!=null)
			{
				_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_.ActiveContext = base.ActiveContext;
			}
			if(_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox!=null)
			{
				_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_noiseCollectionViaComponentInspectionReportGearbox!=null)
			{
				_noiseCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator_!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator_.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator___!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator___.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator____!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator____.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator__!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator__.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator______!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator______.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator_____!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator_____.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator________!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator________.ActiveContext = base.ActiveContext;
			}
			if(_ohmUnitCollectionViaComponentInspectionReportGenerator_______!=null)
			{
				_ohmUnitCollectionViaComponentInspectionReportGenerator_______.ActiveContext = base.ActiveContext;
			}
			if(_oilLevelCollectionViaComponentInspectionReportGearbox!=null)
			{
				_oilLevelCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_oilTypeCollectionViaComponentInspectionReportGearbox!=null)
			{
				_oilTypeCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_oilTypeCollectionViaComponentInspectionReportMainBearing!=null)
			{
				_oilTypeCollectionViaComponentInspectionReportMainBearing.ActiveContext = base.ActiveContext;
			}
			if(_overallGearboxConditionCollectionViaComponentInspectionReportGearbox!=null)
			{
				_overallGearboxConditionCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_shaftErrorCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_shaftErrorCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_shaftErrorCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_shaftErrorCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_shaftErrorCollectionViaComponentInspectionReportGearbox!=null)
			{
				_shaftErrorCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_shaftErrorCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_shaftErrorCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_shaftTypeCollectionViaComponentInspectionReportGearbox_!=null)
			{
				_shaftTypeCollectionViaComponentInspectionReportGearbox_.ActiveContext = base.ActiveContext;
			}
			if(_shaftTypeCollectionViaComponentInspectionReportGearbox!=null)
			{
				_shaftTypeCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_shaftTypeCollectionViaComponentInspectionReportGearbox__!=null)
			{
				_shaftTypeCollectionViaComponentInspectionReportGearbox__.ActiveContext = base.ActiveContext;
			}
			if(_shaftTypeCollectionViaComponentInspectionReportGearbox___!=null)
			{
				_shaftTypeCollectionViaComponentInspectionReportGearbox___.ActiveContext = base.ActiveContext;
			}
			if(_shrinkElementCollectionViaComponentInspectionReportGearbox!=null)
			{
				_shrinkElementCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP!=null)
			{
				_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP.ActiveContext = base.ActiveContext;
			}
			if(_surgeArrestorCollectionViaComponentInspectionReportTransformer!=null)
			{
				_surgeArrestorCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_towerHeightCollectionViaComponentInspectionReportGeneral!=null)
			{
				_towerHeightCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_towerTypeCollectionViaComponentInspectionReportGeneral!=null)
			{
				_towerTypeCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_transformerManufacturerCollectionViaComponentInspectionReportTransformer!=null)
			{
				_transformerManufacturerCollectionViaComponentInspectionReportTransformer.ActiveContext = base.ActiveContext;
			}
			if(_transformerManufacturerCollectionViaComponentInspectionReportGeneral!=null)
			{
				_transformerManufacturerCollectionViaComponentInspectionReportGeneral.ActiveContext = base.ActiveContext;
			}
			if(_vibrationsCollectionViaComponentInspectionReportGearbox!=null)
			{
				_vibrationsCollectionViaComponentInspectionReportGearbox.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswer__!=null)
			{
				_booleanAnswer__.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswer_!=null)
			{
				_booleanAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_booleanAnswer!=null)
			{
				_booleanAnswer.ActiveContext = base.ActiveContext;
			}
			if(_componentInspectionReportType!=null)
			{
				_componentInspectionReportType.ActiveContext = base.ActiveContext;
			}
			if(_countryIso!=null)
			{
				_countryIso.ActiveContext = base.ActiveContext;
			}
			if(_locationType!=null)
			{
				_locationType.ActiveContext = base.ActiveContext;
			}
			if(_reportType!=null)
			{
				_reportType.ActiveContext = base.ActiveContext;
			}
			if(_sbu!=null)
			{
				_sbu.ActiveContext = base.ActiveContext;
			}
			if(_serviceReportNumberType!=null)
			{
				_serviceReportNumberType.ActiveContext = base.ActiveContext;
			}
			if(_turbineMatrix!=null)
			{
				_turbineMatrix.ActiveContext = base.ActiveContext;
			}
			if(_turbineRunStatus_!=null)
			{
				_turbineRunStatus_.ActiveContext = base.ActiveContext;
			}
			if(_turbineRunStatus!=null)
			{
				_turbineRunStatus.ActiveContext = base.ActiveContext;
			}

		}

		/// <summary> Initializes the class members</summary>
		protected virtual void InitClassMembers()
		{

			_componentInspectionReportBlade = null;
			_componentInspectionReportGearbox = null;
			_componentInspectionReportGeneral = null;
			_componentInspectionReportGenerator = null;
			_componentInspectionReportMainBearing = null;
			_componentInspectionReportSkiiP = null;
			_componentInspectionReportTransformer = null;
			_actionOnTransformerCollectionViaComponentInspectionReportTransformer = null;
			_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator = null;
			_arcDetectionCollectionViaComponentInspectionReportTransformer = null;
			_bearingErrorCollectionViaComponentInspectionReportGearbox____ = null;
			_bearingErrorCollectionViaComponentInspectionReportGearbox = null;
			_bearingErrorCollectionViaComponentInspectionReportGearbox___ = null;
			_bearingErrorCollectionViaComponentInspectionReportGearbox_ = null;
			_bearingErrorCollectionViaComponentInspectionReportGearbox_____ = null;
			_bearingErrorCollectionViaComponentInspectionReportGearbox__ = null;
			_bearingPosCollectionViaComponentInspectionReportGearbox____ = null;
			_bearingPosCollectionViaComponentInspectionReportGearbox_ = null;
			_bearingPosCollectionViaComponentInspectionReportGearbox__ = null;
			_bearingPosCollectionViaComponentInspectionReportGearbox___ = null;
			_bearingPosCollectionViaComponentInspectionReportGearbox = null;
			_bearingPosCollectionViaComponentInspectionReportGearbox_____ = null;
			_bearingTypeCollectionViaComponentInspectionReportGearbox_ = null;
			_bearingTypeCollectionViaComponentInspectionReportGearbox__ = null;
			_bearingTypeCollectionViaComponentInspectionReportGearbox___ = null;
			_bearingTypeCollectionViaComponentInspectionReportGearbox = null;
			_bearingTypeCollectionViaComponentInspectionReportGearbox____ = null;
			_bearingTypeCollectionViaComponentInspectionReportGearbox_____ = null;
			_bladeColorCollectionViaComponentInspectionReportBlade = null;
			_bladeLengthCollectionViaComponentInspectionReportBlade = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP______ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP___ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP____ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportGeneral_ = null;
			_booleanAnswerCollectionViaComponentInspectionReportBlade_ = null;
			_booleanAnswerCollectionViaComponentInspectionReportBlade = null;
			_booleanAnswerCollectionViaComponentInspectionReportGeneral = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_ = null;
			_booleanAnswerCollectionViaComponentInspectionReportGenerator = null;
			_booleanAnswerCollectionViaComponentInspectionReportMainBearing = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportTransformer = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP__ = null;
			_booleanAnswerCollectionViaComponentInspectionReportGearbox = null;
			_booleanAnswerCollectionViaComponentInspectionReportGearbox_ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________ = null;
			_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________ = null;
			_bracketsCollectionViaComponentInspectionReportTransformer = null;
			_cableConditionCollectionViaComponentInspectionReportTransformer = null;
			_cableConditionCollectionViaComponentInspectionReportTransformer_ = null;
			_climateCollectionViaComponentInspectionReportTransformer = null;
			_coilConditionCollectionViaComponentInspectionReportTransformer_ = null;
			_coilConditionCollectionViaComponentInspectionReportTransformer = null;
			_componentGroupCollectionViaComponentInspectionReportGeneral = null;
			_connectionBarsCollectionViaComponentInspectionReportTransformer = null;
			_controllerTypeCollectionViaComponentInspectionReportGeneral = null;
			_couplingCollectionViaComponentInspectionReportGenerator = null;
			_couplingCollectionViaComponentInspectionReportGearbox = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox__________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox__________________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox______ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_______ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox___________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_________________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox________________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox____________________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox___________________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_____________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox____________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_______________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox______________ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox___ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox__ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_____ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox____ = null;
			_damageDecisionCollectionViaComponentInspectionReportGearbox_ = null;
			_debrisGearboxCollectionViaComponentInspectionReportGearbox = null;
			_debrisOnMagnetCollectionViaComponentInspectionReportGearbox = null;
			_electricalPumpCollectionViaComponentInspectionReportGearbox = null;
			_faultCodeAreaCollectionViaComponentInspectionReportBlade = null;
			_faultCodeCauseCollectionViaComponentInspectionReportBlade = null;
			_faultCodeClassificationCollectionViaComponentInspectionReportBlade = null;
			_faultCodeTypeCollectionViaComponentInspectionReportBlade = null;
			_filterBlockTypeCollectionViaComponentInspectionReportGearbox = null;
			_gearboxManufacturerCollectionViaComponentInspectionReportGeneral = null;
			_gearboxManufacturerCollectionViaComponentInspectionReportGearbox = null;
			_gearboxRevisionCollectionViaComponentInspectionReportGearbox = null;
			_gearboxTypeCollectionViaComponentInspectionReportGearbox = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox____________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox_________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox__________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox___________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox_____________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox_ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox______ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox______________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox________ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox___ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox____ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox_____ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox__ = null;
			_gearErrorCollectionViaComponentInspectionReportGearbox_______ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox___ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox_ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox_____ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox____ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox__ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox_________ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox__________ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox_______ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox________ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox___________ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox______________ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox______ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox____________ = null;
			_gearTypeCollectionViaComponentInspectionReportGearbox_____________ = null;
			_generatorCoverCollectionViaComponentInspectionReportGenerator = null;
			_generatorDriveEndCollectionViaComponentInspectionReportGenerator = null;
			_generatorManufacturerCollectionViaComponentInspectionReportGearbox_ = null;
			_generatorManufacturerCollectionViaComponentInspectionReportGearbox = null;
			_generatorManufacturerCollectionViaComponentInspectionReportGenerator = null;
			_generatorManufacturerCollectionViaComponentInspectionReportGeneral = null;
			_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator = null;
			_generatorRotorCollectionViaComponentInspectionReportGenerator = null;
			_housingErrorCollectionViaComponentInspectionReportGearbox_ = null;
			_housingErrorCollectionViaComponentInspectionReportGearbox__ = null;
			_housingErrorCollectionViaComponentInspectionReportGearbox___ = null;
			_housingErrorCollectionViaComponentInspectionReportGearbox____ = null;
			_housingErrorCollectionViaComponentInspectionReportGearbox = null;
			_housingErrorCollectionViaComponentInspectionReportGearbox_____ = null;
			_inlineFilterCollectionViaComponentInspectionReportGearbox = null;
			_magnetPosCollectionViaComponentInspectionReportGearbox = null;
			_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing = null;
			_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing = null;
			_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_ = null;
			_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox = null;
			_noiseCollectionViaComponentInspectionReportGearbox = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator_ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator___ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator____ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator__ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator______ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator_____ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator________ = null;
			_ohmUnitCollectionViaComponentInspectionReportGenerator_______ = null;
			_oilLevelCollectionViaComponentInspectionReportGearbox = null;
			_oilTypeCollectionViaComponentInspectionReportGearbox = null;
			_oilTypeCollectionViaComponentInspectionReportMainBearing = null;
			_overallGearboxConditionCollectionViaComponentInspectionReportGearbox = null;
			_shaftErrorCollectionViaComponentInspectionReportGearbox___ = null;
			_shaftErrorCollectionViaComponentInspectionReportGearbox_ = null;
			_shaftErrorCollectionViaComponentInspectionReportGearbox = null;
			_shaftErrorCollectionViaComponentInspectionReportGearbox__ = null;
			_shaftTypeCollectionViaComponentInspectionReportGearbox_ = null;
			_shaftTypeCollectionViaComponentInspectionReportGearbox = null;
			_shaftTypeCollectionViaComponentInspectionReportGearbox__ = null;
			_shaftTypeCollectionViaComponentInspectionReportGearbox___ = null;
			_shrinkElementCollectionViaComponentInspectionReportGearbox = null;
			_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP = null;
			_surgeArrestorCollectionViaComponentInspectionReportTransformer = null;
			_towerHeightCollectionViaComponentInspectionReportGeneral = null;
			_towerTypeCollectionViaComponentInspectionReportGeneral = null;
			_transformerManufacturerCollectionViaComponentInspectionReportTransformer = null;
			_transformerManufacturerCollectionViaComponentInspectionReportGeneral = null;
			_vibrationsCollectionViaComponentInspectionReportGearbox = null;
			_booleanAnswer__ = null;
			_booleanAnswer_ = null;
			_booleanAnswer = null;
			_componentInspectionReportType = null;
			_countryIso = null;
			_locationType = null;
			_reportType = null;
			_sbu = null;
			_serviceReportNumberType = null;
			_turbineMatrix = null;
			_turbineRunStatus_ = null;
			_turbineRunStatus = null;

			PerformDependencyInjection();
			
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		#region Custom Property Hashtable Setup
		/// <summary> Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();

			Dictionary<string, string> fieldHashtable = null;
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ComponentInspectionReportId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ComponentInspectionReportTypeId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ComponentInspectionReportStateId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Cirtemplate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ReportTypeId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ReconstructionBooleanAnswerId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("CimcaseNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ReasonForService", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("TurbineNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Brand", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			_fieldsCustomProperties.Add("CountryIsoid", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("SiteName", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("TurbineMatrixId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("LocationTypeId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("LocalTurbineId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("SecondGeneratorBooleanAnswerId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("BeforeInspectionTurbineRunStatusId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("CommisioningDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("InstallationDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("FailureDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("InspectionDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ServiceReportNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ServiceReportNumberTypeId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ServiceEngineer", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("RunHours", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Generator1Hrs", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Generator2Hrs", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("TotalProduction", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("AfterInspectionTurbineRunStatusId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Quantity", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("AlarmLogNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Description", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("DescriptionConsquential", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ConductedBy", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Sbuid", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("CirtemplateGuid", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("VestasItemNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Deleted", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("DeletedBy", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("NotificationNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("MountedOnMainComponentBooleanAnswerId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("ComponentUpTowerSolutionId", fieldHashtable);

            //new added fields 

            _fieldsCustomProperties.Add("ComponentInspectionReportName", fieldHashtable);
            fieldHashtable = new Dictionary<string, string>();

            _fieldsCustomProperties.Add("ComponentInspectionReportVersion", fieldHashtable);
            fieldHashtable = new Dictionary<string, string>();

            _fieldsCustomProperties.Add("TemplateVersion", fieldHashtable);
            fieldHashtable = new Dictionary<string, string>();


            _fieldsCustomProperties.Add("AdditionalInfo", fieldHashtable);
            fieldHashtable = new Dictionary<string, string>();

            _fieldsCustomProperties.Add("InternalComments", fieldHashtable);
            fieldHashtable = new Dictionary<string, string>();

            _fieldsCustomProperties.Add("SBURecommendation", fieldHashtable);
            fieldHashtable = new Dictionary<string, string>();

        }
        #endregion

        /// <summary> Removes the sync logic for member _booleanAnswer__</summary>
        /// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
        /// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
        private void DesetupSyncBooleanAnswer__(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _booleanAnswer__, new PropertyChangedEventHandler( OnBooleanAnswer__PropertyChanged ), "BooleanAnswer__", ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingMountedOnMainComponentBooleanAnswerId, true, signalRelatedEntity, "ComponentInspectionReport__", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.MountedOnMainComponentBooleanAnswerId } );		
			_booleanAnswer__ = null;
		}

		/// <summary> setups the sync logic for member _booleanAnswer__</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncBooleanAnswer__(IEntity2 relatedEntity)
		{
			DesetupSyncBooleanAnswer__(true, true);
			_booleanAnswer__ = (BooleanAnswerEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _booleanAnswer__, new PropertyChangedEventHandler( OnBooleanAnswer__PropertyChanged ), "BooleanAnswer__", ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingMountedOnMainComponentBooleanAnswerId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnBooleanAnswer__PropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _booleanAnswer_</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncBooleanAnswer_(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _booleanAnswer_, new PropertyChangedEventHandler( OnBooleanAnswer_PropertyChanged ), "BooleanAnswer_", ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingSecondGeneratorBooleanAnswerId, true, signalRelatedEntity, "ComponentInspectionReport_", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.SecondGeneratorBooleanAnswerId } );		
			_booleanAnswer_ = null;
		}

		/// <summary> setups the sync logic for member _booleanAnswer_</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncBooleanAnswer_(IEntity2 relatedEntity)
		{
			DesetupSyncBooleanAnswer_(true, true);
			_booleanAnswer_ = (BooleanAnswerEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _booleanAnswer_, new PropertyChangedEventHandler( OnBooleanAnswer_PropertyChanged ), "BooleanAnswer_", ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingSecondGeneratorBooleanAnswerId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnBooleanAnswer_PropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _booleanAnswer</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncBooleanAnswer(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _booleanAnswer, new PropertyChangedEventHandler( OnBooleanAnswerPropertyChanged ), "BooleanAnswer", ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingReconstructionBooleanAnswerId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.ReconstructionBooleanAnswerId } );		
			_booleanAnswer = null;
		}

		/// <summary> setups the sync logic for member _booleanAnswer</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncBooleanAnswer(IEntity2 relatedEntity)
		{
			DesetupSyncBooleanAnswer(true, true);
			_booleanAnswer = (BooleanAnswerEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _booleanAnswer, new PropertyChangedEventHandler( OnBooleanAnswerPropertyChanged ), "BooleanAnswer", ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingReconstructionBooleanAnswerId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnBooleanAnswerPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _componentInspectionReportType</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncComponentInspectionReportType(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _componentInspectionReportType, new PropertyChangedEventHandler( OnComponentInspectionReportTypePropertyChanged ), "ComponentInspectionReportType", ComponentInspectionReportEntity.Relations.ComponentInspectionReportTypeEntityUsingComponentInspectionReportTypeId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.ComponentInspectionReportTypeId } );		
			_componentInspectionReportType = null;
		}

		/// <summary> setups the sync logic for member _componentInspectionReportType</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncComponentInspectionReportType(IEntity2 relatedEntity)
		{
			DesetupSyncComponentInspectionReportType(true, true);
			_componentInspectionReportType = (ComponentInspectionReportTypeEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _componentInspectionReportType, new PropertyChangedEventHandler( OnComponentInspectionReportTypePropertyChanged ), "ComponentInspectionReportType", ComponentInspectionReportEntity.Relations.ComponentInspectionReportTypeEntityUsingComponentInspectionReportTypeId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnComponentInspectionReportTypePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _countryIso</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncCountryIso(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _countryIso, new PropertyChangedEventHandler( OnCountryIsoPropertyChanged ), "CountryIso", ComponentInspectionReportEntity.Relations.CountryIsoEntityUsingCountryIsoid, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.CountryIsoid } );		
			_countryIso = null;
		}

		/// <summary> setups the sync logic for member _countryIso</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncCountryIso(IEntity2 relatedEntity)
		{
			DesetupSyncCountryIso(true, true);
			_countryIso = (CountryIsoEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _countryIso, new PropertyChangedEventHandler( OnCountryIsoPropertyChanged ), "CountryIso", ComponentInspectionReportEntity.Relations.CountryIsoEntityUsingCountryIsoid, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnCountryIsoPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _locationType</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncLocationType(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _locationType, new PropertyChangedEventHandler( OnLocationTypePropertyChanged ), "LocationType", ComponentInspectionReportEntity.Relations.LocationTypeEntityUsingLocationTypeId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.LocationTypeId } );		
			_locationType = null;
		}

		/// <summary> setups the sync logic for member _locationType</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncLocationType(IEntity2 relatedEntity)
		{
			DesetupSyncLocationType(true, true);
			_locationType = (LocationTypeEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _locationType, new PropertyChangedEventHandler( OnLocationTypePropertyChanged ), "LocationType", ComponentInspectionReportEntity.Relations.LocationTypeEntityUsingLocationTypeId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnLocationTypePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _reportType</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncReportType(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _reportType, new PropertyChangedEventHandler( OnReportTypePropertyChanged ), "ReportType", ComponentInspectionReportEntity.Relations.ReportTypeEntityUsingReportTypeId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.ReportTypeId } );		
			_reportType = null;
		}

		/// <summary> setups the sync logic for member _reportType</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncReportType(IEntity2 relatedEntity)
		{
			DesetupSyncReportType(true, true);
			_reportType = (ReportTypeEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _reportType, new PropertyChangedEventHandler( OnReportTypePropertyChanged ), "ReportType", ComponentInspectionReportEntity.Relations.ReportTypeEntityUsingReportTypeId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnReportTypePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _sbu</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncSbu(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _sbu, new PropertyChangedEventHandler( OnSbuPropertyChanged ), "Sbu", ComponentInspectionReportEntity.Relations.SbuEntityUsingSbuid, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.Sbuid } );		
			_sbu = null;
		}

		/// <summary> setups the sync logic for member _sbu</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncSbu(IEntity2 relatedEntity)
		{
			DesetupSyncSbu(true, true);
			_sbu = (SbuEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _sbu, new PropertyChangedEventHandler( OnSbuPropertyChanged ), "Sbu", ComponentInspectionReportEntity.Relations.SbuEntityUsingSbuid, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnSbuPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _serviceReportNumberType</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncServiceReportNumberType(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _serviceReportNumberType, new PropertyChangedEventHandler( OnServiceReportNumberTypePropertyChanged ), "ServiceReportNumberType", ComponentInspectionReportEntity.Relations.ServiceReportNumberTypeEntityUsingServiceReportNumberTypeId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.ServiceReportNumberTypeId } );		
			_serviceReportNumberType = null;
		}

		/// <summary> setups the sync logic for member _serviceReportNumberType</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncServiceReportNumberType(IEntity2 relatedEntity)
		{
			DesetupSyncServiceReportNumberType(true, true);
			_serviceReportNumberType = (ServiceReportNumberTypeEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _serviceReportNumberType, new PropertyChangedEventHandler( OnServiceReportNumberTypePropertyChanged ), "ServiceReportNumberType", ComponentInspectionReportEntity.Relations.ServiceReportNumberTypeEntityUsingServiceReportNumberTypeId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnServiceReportNumberTypePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _turbineMatrix</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncTurbineMatrix(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _turbineMatrix, new PropertyChangedEventHandler( OnTurbineMatrixPropertyChanged ), "TurbineMatrix", ComponentInspectionReportEntity.Relations.TurbineMatrixEntityUsingTurbineMatrixId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.TurbineMatrixId } );		
			_turbineMatrix = null;
		}

		/// <summary> setups the sync logic for member _turbineMatrix</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncTurbineMatrix(IEntity2 relatedEntity)
		{
			DesetupSyncTurbineMatrix(true, true);
			_turbineMatrix = (TurbineMatrixEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _turbineMatrix, new PropertyChangedEventHandler( OnTurbineMatrixPropertyChanged ), "TurbineMatrix", ComponentInspectionReportEntity.Relations.TurbineMatrixEntityUsingTurbineMatrixId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnTurbineMatrixPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _turbineRunStatus_</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncTurbineRunStatus_(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _turbineRunStatus_, new PropertyChangedEventHandler( OnTurbineRunStatus_PropertyChanged ), "TurbineRunStatus_", ComponentInspectionReportEntity.Relations.TurbineRunStatusEntityUsingAfterInspectionTurbineRunStatusId, true, signalRelatedEntity, "ComponentInspectionReport_", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.AfterInspectionTurbineRunStatusId } );		
			_turbineRunStatus_ = null;
		}

		/// <summary> setups the sync logic for member _turbineRunStatus_</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncTurbineRunStatus_(IEntity2 relatedEntity)
		{
			DesetupSyncTurbineRunStatus_(true, true);
			_turbineRunStatus_ = (TurbineRunStatusEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _turbineRunStatus_, new PropertyChangedEventHandler( OnTurbineRunStatus_PropertyChanged ), "TurbineRunStatus_", ComponentInspectionReportEntity.Relations.TurbineRunStatusEntityUsingAfterInspectionTurbineRunStatusId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnTurbineRunStatus_PropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _turbineRunStatus</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncTurbineRunStatus(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _turbineRunStatus, new PropertyChangedEventHandler( OnTurbineRunStatusPropertyChanged ), "TurbineRunStatus", ComponentInspectionReportEntity.Relations.TurbineRunStatusEntityUsingBeforeInspectionTurbineRunStatusId, true, signalRelatedEntity, "ComponentInspectionReport", resetFKFields, new int[] { (int)ComponentInspectionReportFieldIndex.BeforeInspectionTurbineRunStatusId } );		
			_turbineRunStatus = null;
		}

		/// <summary> setups the sync logic for member _turbineRunStatus</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncTurbineRunStatus(IEntity2 relatedEntity)
		{
			DesetupSyncTurbineRunStatus(true, true);
			_turbineRunStatus = (TurbineRunStatusEntity)relatedEntity;
			base.PerformSetupSyncRelatedEntity( _turbineRunStatus, new PropertyChangedEventHandler( OnTurbineRunStatusPropertyChanged ), "TurbineRunStatus", ComponentInspectionReportEntity.Relations.TurbineRunStatusEntityUsingBeforeInspectionTurbineRunStatusId, true, new string[] {  } );
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnTurbineRunStatusPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}


		/// <summary> Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ComponentInspectionReportEntity</param>
		/// <param name="fields">Fields of this entity</param>
		protected virtual void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			base.Fields = fields;
			base.IsNew=true;
			base.Validator = validator;
			InitClassMembers();

			
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		#region Class Property Declarations
		/// <summary> The relations object holding all relations of this entity with other entity classes.</summary>
		public  static ComponentInspectionReportRelations Relations
		{
			get	{ return new ComponentInspectionReportRelations(); }
		}
		
		/// <summary> The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties
		{
			get { return _customProperties;}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportBlade' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportBlade
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportBladeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportBladeEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportBladeEntity, 0, null, null, null, null, "ComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportGearbox' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportGearbox
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportGearboxEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGearboxEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportGearboxEntity, 0, null, null, null, null, "ComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportGeneral' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportGeneral
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportGeneralEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGeneralEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportGeneralEntity, 0, null, null, null, null, "ComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportGenerator' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportGenerator
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportGeneratorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGeneratorEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportGeneratorEntity, 0, null, null, null, null, "ComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportMainBearing' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportMainBearing
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportMainBearingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportMainBearingEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportMainBearingEntity, 0, null, null, null, null, "ComponentInspectionReportMainBearing", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportSkiiP' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportSkiiP
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportSkiiPEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportSkiiPEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportSkiiPEntity, 0, null, null, null, null, "ComponentInspectionReportSkiiP", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportTransformer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportTransformer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ComponentInspectionReportTransformerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportTransformerEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportTransformerEntity, 0, null, null, null, null, "ComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActionOnTransformer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActionOnTransformerCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.ActionOnTransformerEntityUsingActionOnTransformerId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ActionOnTransformerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActionOnTransformerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ActionOnTransformerEntity, 0, null, null, relations, null, "ActionOnTransformerCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActionToBeTakenOnGenerator' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.ActionToBeTakenOnGeneratorEntityUsingActionToBeTakenOnGeneratorId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ActionToBeTakenOnGeneratorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActionToBeTakenOnGeneratorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ActionToBeTakenOnGeneratorEntity, 0, null, null, relations, null, "ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ArcDetection' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathArcDetectionCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.ArcDetectionEntityUsingTransformerArcDetectionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ArcDetectionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ArcDetectionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ArcDetectionEntity, 0, null, null, relations, null, "ArcDetectionCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingErrorCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage5BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingErrorEntity, 0, null, null, relations, null, "BearingErrorCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage1BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingErrorEntity, 0, null, null, relations, null, "BearingErrorCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage4BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingErrorEntity, 0, null, null, relations, null, "BearingErrorCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage2BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingErrorEntity, 0, null, null, relations, null, "BearingErrorCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingErrorCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage6BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingErrorEntity, 0, null, null, relations, null, "BearingErrorCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingErrorEntityUsingGearboxBearingsDamage3BearingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingErrorEntity, 0, null, null, relations, null, "BearingErrorCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingPosCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition5BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingPosEntity, 0, null, null, relations, null, "BearingPosCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingPosCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition2BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingPosEntity, 0, null, null, relations, null, "BearingPosCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingPosCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition3BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingPosEntity, 0, null, null, relations, null, "BearingPosCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingPosCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition4BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingPosEntity, 0, null, null, relations, null, "BearingPosCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingPosCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition1BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingPosEntity, 0, null, null, relations, null, "BearingPosCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingPosCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingPosEntityUsingGearboxBearingsPosition6BearingPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingPosEntity, 0, null, null, relations, null, "BearingPosCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingTypeCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation2BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingTypeEntity, 0, null, null, relations, null, "BearingTypeCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingTypeCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation3BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingTypeEntity, 0, null, null, relations, null, "BearingTypeCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingTypeCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation4BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingTypeEntity, 0, null, null, relations, null, "BearingTypeCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation1BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingTypeEntity, 0, null, null, relations, null, "BearingTypeCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingTypeCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation5BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingTypeEntity, 0, null, null, relations, null, "BearingTypeCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BearingType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBearingTypeCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BearingTypeEntityUsingGearboxBearingsLocation6BearingTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BearingTypeEntity, 0, null, null, relations, null, "BearingTypeCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BladeColor' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBladeColorCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.BladeColorEntityUsingBladeColorId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BladeColorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BladeColorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BladeColorEntity, 0, null, null, relations, null, "BladeColorCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BladeLength' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBladeLengthCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.BladeLengthEntityUsingBladeLengthId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BladeLengthEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BladeLengthEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BladeLengthEntity, 0, null, null, relations, null, "BladeLengthCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv520BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv524BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv525yBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv526yBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv523BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP__________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv524BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv525BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP850Kwv526BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv521BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportGeneral_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.BooleanAnswerEntityUsingGeneralPicturesIncludedBooleanAnswerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportGeneral_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportBlade_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.BooleanAnswerEntityUsingBladeClaimRelevantBooleanAnswerId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportBlade_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.BooleanAnswerEntityUsingBladePicturesIncludedBooleanAnswerId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.BooleanAnswerEntityUsingGeneralClaimRelevantBooleanAnswerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv521BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiPclaimRelevantBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.BooleanAnswerEntityUsingGeneratorClaimRelevantBooleanAnswerId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportMainBearing_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
				relations.Add(ComponentInspectionReportMainBearingEntity.Relations.BooleanAnswerEntityUsingMainBearingClaimRelevantBooleanAnswerId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportMainBearing", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP___________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv525BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.BooleanAnswerEntityUsingTransformerClaimRelevantBooleanAnswerId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv526xBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv525xBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv524yBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BooleanAnswerEntityUsingGearboxOffLineFilterId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.BooleanAnswerEntityUsingGearboxClaimRelevantBooleanAnswerId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv523BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP______________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv522BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv526BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP2Mwv522BooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswerCollectionViaComponentInspectionReportSkiiP________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.BooleanAnswerEntityUsingSkiiP3Mwv524xBooleanAnswerId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, relations, null, "BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Brackets' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBracketsCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.BracketsEntityUsingBracketsId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<BracketsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BracketsEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BracketsEntity, 0, null, null, relations, null, "BracketsCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CableCondition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCableConditionCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.CableConditionEntityUsingHvcableConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<CableConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CableConditionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CableConditionEntity, 0, null, null, relations, null, "CableConditionCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CableCondition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCableConditionCollectionViaComponentInspectionReportTransformer_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.CableConditionEntityUsingLvcableConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<CableConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CableConditionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CableConditionEntity, 0, null, null, relations, null, "CableConditionCollectionViaComponentInspectionReportTransformer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Climate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathClimateCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.ClimateEntityUsingClimateId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ClimateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClimateEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ClimateEntity, 0, null, null, relations, null, "ClimateCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CoilCondition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCoilConditionCollectionViaComponentInspectionReportTransformer_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.CoilConditionEntityUsingLvcoilConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<CoilConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CoilConditionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CoilConditionEntity, 0, null, null, relations, null, "CoilConditionCollectionViaComponentInspectionReportTransformer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CoilCondition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCoilConditionCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.CoilConditionEntityUsingHvcoilConditionId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<CoilConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CoilConditionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CoilConditionEntity, 0, null, null, relations, null, "CoilConditionCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentGroup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentGroupCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.ComponentGroupEntityUsingGeneralComponentGroupId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ComponentGroupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentGroupEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentGroupEntity, 0, null, null, relations, null, "ComponentGroupCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ConnectionBars' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathConnectionBarsCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.ConnectionBarsEntityUsingConnectionBarsId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ConnectionBarsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ConnectionBarsEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ConnectionBarsEntity, 0, null, null, relations, null, "ConnectionBarsCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ControllerType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathControllerTypeCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.ControllerTypeEntityUsingGeneralControllerTypeId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ControllerTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ControllerTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ControllerTypeEntity, 0, null, null, relations, null, "ControllerTypeCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Coupling' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCouplingCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.CouplingEntityUsingCouplingId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<CouplingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouplingEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CouplingEntity, 0, null, null, relations, null, "CouplingCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Coupling' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCouplingCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.CouplingEntityUsingGearboxCouplingId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<CouplingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouplingEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CouplingEntity, 0, null, null, relations, null, "CouplingCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision12DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision13DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox__________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision14DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox__________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision7DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox__________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision10DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision11DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox___________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision15DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision6DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision5DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox____________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision9DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox____________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox___________________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision8DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox___________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision2DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision1DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_______________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision4DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox______________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxGearDecision3DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision4DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision2DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision3DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision6DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision5DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DamageDecision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDamageDecisionCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DamageDecisionEntityUsingGearboxBearingDecision1DamageDecisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DamageDecisionEntity, 0, null, null, relations, null, "DamageDecisionCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DebrisGearbox' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDebrisGearboxCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DebrisGearboxEntityUsingGearboxDebrisGearBoxId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DebrisGearboxEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DebrisGearboxEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DebrisGearboxEntity, 0, null, null, relations, null, "DebrisGearboxCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DebrisOnMagnet' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDebrisOnMagnetCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.DebrisOnMagnetEntityUsingGearboxDebrisOnMagnetId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<DebrisOnMagnetEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DebrisOnMagnetEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.DebrisOnMagnetEntity, 0, null, null, relations, null, "DebrisOnMagnetCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ElectricalPump' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathElectricalPumpCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ElectricalPumpEntityUsingGearboxElectricalPumpId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ElectricalPumpEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ElectricalPumpEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ElectricalPumpEntity, 0, null, null, relations, null, "ElectricalPumpCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FaultCodeArea' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFaultCodeAreaCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeAreaEntityUsingBladeFaultCodeAreaId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<FaultCodeAreaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeAreaEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.FaultCodeAreaEntity, 0, null, null, relations, null, "FaultCodeAreaCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FaultCodeCause' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFaultCodeCauseCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeCauseEntityUsingBladeFaultCodeCauseId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<FaultCodeCauseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeCauseEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.FaultCodeCauseEntity, 0, null, null, relations, null, "FaultCodeCauseCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FaultCodeClassification' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFaultCodeClassificationCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeClassificationEntityUsingBladeFaultCodeClassificationId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<FaultCodeClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeClassificationEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.FaultCodeClassificationEntity, 0, null, null, relations, null, "FaultCodeClassificationCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FaultCodeType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFaultCodeTypeCollectionViaComponentInspectionReportBlade
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportBlade_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportBladeEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportBlade_", JoinHint.None);
				relations.Add(ComponentInspectionReportBladeEntity.Relations.FaultCodeTypeEntityUsingBladeFaultCodeTypeId, "ComponentInspectionReportBlade_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<FaultCodeTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.FaultCodeTypeEntity, 0, null, null, relations, null, "FaultCodeTypeCollectionViaComponentInspectionReportBlade", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FilterBlockType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFilterBlockTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.FilterBlockTypeEntityUsingGearboxFilterBlockTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<FilterBlockTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FilterBlockTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.FilterBlockTypeEntity, 0, null, null, relations, null, "FilterBlockTypeCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearboxManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearboxManufacturerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.GearboxManufacturerEntityUsingGeneralGearboxManufacturerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearboxManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearboxManufacturerEntity, 0, null, null, relations, null, "GearboxManufacturerCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearboxManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearboxManufacturerCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearboxManufacturerEntityUsingGearboxManufacturerId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearboxManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearboxManufacturerEntity, 0, null, null, relations, null, "GearboxManufacturerCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearboxRevision' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearboxRevisionCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearboxRevisionEntityUsingGearboxRevisionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearboxRevisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxRevisionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearboxRevisionEntity, 0, null, null, relations, null, "GearboxRevisionCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearboxType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearboxTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearboxTypeEntityUsingGearboxTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearboxTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearboxTypeEntity, 0, null, null, relations, null, "GearboxTypeCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage7GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox_________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage14GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox__________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage15GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox___________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage6GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox_____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage8GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage2GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage11GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox______________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage9GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage1GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage13GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage4GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage5GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage10GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage3GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearErrorCollectionViaComponentInspectionReportGearbox_______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearErrorEntityUsingGearboxTypeofDamage12GearErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearErrorEntity, 0, null, null, relations, null, "GearErrorCollectionViaComponentInspectionReportGearbox_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation1GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation4GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation2GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation6GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation5GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation3GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox_________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation13GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox__________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation14GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox_______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation11GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation12GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox___________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation15GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox______________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation9GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation10GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation7GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GearType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGearTypeCollectionViaComponentInspectionReportGearbox_____________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GearTypeEntityUsingGearboxExactLocation8GearTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GearTypeEntity, 0, null, null, relations, null, "GearTypeCollectionViaComponentInspectionReportGearbox_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorCover' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorCoverCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorCoverEntityUsingGeneratorCoverId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorCoverEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorCoverEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorCoverEntity, 0, null, null, relations, null, "GeneratorCoverCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorDriveEnd' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorDriveEndCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorDriveEndEntityUsingGeneratorDriveEndId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorDriveEndEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorDriveEndEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorDriveEndEntity, 0, null, null, relations, null, "GeneratorDriveEndCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorManufacturerCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GeneratorManufacturerEntityUsingGearboxGeneratorManufacturerId2, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorManufacturerEntity, 0, null, null, relations, null, "GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorManufacturerCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.GeneratorManufacturerEntityUsingGearboxGeneratorManufacturerId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorManufacturerEntity, 0, null, null, relations, null, "GeneratorManufacturerCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorManufacturerCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorManufacturerEntityUsingGeneratorManufacturerId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorManufacturerEntity, 0, null, null, relations, null, "GeneratorManufacturerCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorManufacturerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.GeneratorManufacturerEntityUsingGeneralGeneratorManufacturerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorManufacturerEntity, 0, null, null, relations, null, "GeneratorManufacturerCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorNonDriveEnd' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorNonDriveEndEntityUsingGeneratorNonDriveEndId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorNonDriveEndEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorNonDriveEndEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorNonDriveEndEntity, 0, null, null, relations, null, "GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GeneratorRotor' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGeneratorRotorCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.GeneratorRotorEntityUsingGeneratorRotorId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<GeneratorRotorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorRotorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.GeneratorRotorEntity, 0, null, null, relations, null, "GeneratorRotorCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HousingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHousingErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxPlanetStage2HousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.HousingErrorEntity, 0, null, null, relations, null, "HousingErrorCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HousingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHousingErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxHelicalStageHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.HousingErrorEntity, 0, null, null, relations, null, "HousingErrorCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HousingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHousingErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxFrontPlateHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.HousingErrorEntity, 0, null, null, relations, null, "HousingErrorCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HousingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHousingErrorCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxAuxStageHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.HousingErrorEntity, 0, null, null, relations, null, "HousingErrorCollectionViaComponentInspectionReportGearbox____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HousingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHousingErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxPlanetStage1HousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.HousingErrorEntity, 0, null, null, relations, null, "HousingErrorCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HousingError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHousingErrorCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.HousingErrorEntityUsingGearboxHsstageHousingErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.HousingErrorEntity, 0, null, null, relations, null, "HousingErrorCollectionViaComponentInspectionReportGearbox_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'InlineFilter' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathInlineFilterCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.InlineFilterEntityUsingGearboxInLineFilterId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<InlineFilterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(InlineFilterEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.InlineFilterEntity, 0, null, null, relations, null, "InlineFilterCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MagnetPos' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMagnetPosCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.MagnetPosEntityUsingGearboxDebrisStagesMagnetPosId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<MagnetPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MagnetPosEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.MagnetPosEntity, 0, null, null, relations, null, "MagnetPosCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MainBearingErrorLocation' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportMainBearing_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
				relations.Add(ComponentInspectionReportMainBearingEntity.Relations.MainBearingErrorLocationEntityUsingMainBearingErrorLocationId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<MainBearingErrorLocationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingErrorLocationEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.MainBearingErrorLocationEntity, 0, null, null, relations, null, "MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MainBearingManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMainBearingManufacturerCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportMainBearing_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
				relations.Add(ComponentInspectionReportMainBearingEntity.Relations.MainBearingManufacturerEntityUsingMainBearingManufacturerId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<MainBearingManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.MainBearingManufacturerEntity, 0, null, null, relations, null, "MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MainBearingManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportMainBearing_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
				relations.Add(ComponentInspectionReportMainBearingEntity.Relations.MainBearingManufacturerEntityUsingMainBearingTypeId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<MainBearingManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.MainBearingManufacturerEntity, 0, null, null, relations, null, "MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MechanicalOilPump' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMechanicalOilPumpCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.MechanicalOilPumpEntityUsingGearboxMechanicalOilPumpId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<MechanicalOilPumpEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MechanicalOilPumpEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.MechanicalOilPumpEntity, 0, null, null, relations, null, "MechanicalOilPumpCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Noise' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNoiseCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.NoiseEntityUsingGearboxNoiseId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<NoiseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NoiseEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.NoiseEntity, 0, null, null, relations, null, "NoiseCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingVgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingUgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingUvohmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingUwohmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingWgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingKgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator_____
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingVwohmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator________
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingMgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OhmUnit' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOhmUnitCollectionViaComponentInspectionReportGenerator_______
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGenerator_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneratorEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGenerator_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneratorEntity.Relations.OhmUnitEntityUsingLgroundOhmUnitId, "ComponentInspectionReportGenerator_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OhmUnitEntity, 0, null, null, relations, null, "OhmUnitCollectionViaComponentInspectionReportGenerator_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OilLevel' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOilLevelCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.OilLevelEntityUsingGearboxOilLevelId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OilLevelEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilLevelEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OilLevelEntity, 0, null, null, relations, null, "OilLevelCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OilType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOilTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.OilTypeEntityUsingGearboxOilTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OilTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OilTypeEntity, 0, null, null, relations, null, "OilTypeCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OilType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOilTypeCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportMainBearing_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportMainBearingEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportMainBearing_", JoinHint.None);
				relations.Add(ComponentInspectionReportMainBearingEntity.Relations.OilTypeEntityUsingMainBearingLubricationOilTypeId, "ComponentInspectionReportMainBearing_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OilTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OilTypeEntity, 0, null, null, relations, null, "OilTypeCollectionViaComponentInspectionReportMainBearing", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OverallGearboxCondition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOverallGearboxConditionCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.OverallGearboxConditionEntityUsingGearboxOverallGearboxConditionId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<OverallGearboxConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OverallGearboxConditionEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.OverallGearboxConditionEntity, 0, null, null, relations, null, "OverallGearboxConditionCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage4ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftErrorEntity, 0, null, null, relations, null, "ShaftErrorCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage2ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftErrorEntity, 0, null, null, relations, null, "ShaftErrorCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage1ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftErrorEntity, 0, null, null, relations, null, "ShaftErrorCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftError' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftErrorEntityUsingGearboxShaftsTypeofDamage3ShaftErrorId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftErrorEntity, 0, null, null, relations, null, "ShaftErrorCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftTypeCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation2ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftTypeEntity, 0, null, null, relations, null, "ShaftTypeCollectionViaComponentInspectionReportGearbox_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation1ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftTypeEntity, 0, null, null, relations, null, "ShaftTypeCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftTypeCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation3ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftTypeEntity, 0, null, null, relations, null, "ShaftTypeCollectionViaComponentInspectionReportGearbox__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShaftType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShaftTypeCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShaftTypeEntityUsingGearboxShaftsExactLocation4ShaftTypeId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShaftTypeEntity, 0, null, null, relations, null, "ShaftTypeCollectionViaComponentInspectionReportGearbox___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShrinkElement' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShrinkElementCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.ShrinkElementEntityUsingGearboxShrinkElementId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<ShrinkElementEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShrinkElementEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ShrinkElementEntity, 0, null, null, relations, null, "ShrinkElementCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SkiipackFailureCause' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportSkiiP_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportSkiiPEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportSkiiP_", JoinHint.None);
				relations.Add(ComponentInspectionReportSkiiPEntity.Relations.SkiipackFailureCauseEntityUsingSkiiPcauseId, "ComponentInspectionReportSkiiP_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<SkiipackFailureCauseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SkiipackFailureCauseEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.SkiipackFailureCauseEntity, 0, null, null, relations, null, "SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurgeArrestor' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurgeArrestorCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.SurgeArrestorEntityUsingSurgeArrestorId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<SurgeArrestorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurgeArrestorEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.SurgeArrestorEntity, 0, null, null, relations, null, "SurgeArrestorCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TowerHeight' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTowerHeightCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.TowerHeightEntityUsingGeneralTowerHeightId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<TowerHeightEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TowerHeightEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TowerHeightEntity, 0, null, null, relations, null, "TowerHeightCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TowerType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTowerTypeCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.TowerTypeEntityUsingGeneralTowerTypeId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<TowerTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TowerTypeEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TowerTypeEntity, 0, null, null, relations, null, "TowerTypeCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TransformerManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTransformerManufacturerCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportTransformer_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportTransformerEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportTransformer_", JoinHint.None);
				relations.Add(ComponentInspectionReportTransformerEntity.Relations.TransformerManufacturerEntityUsingTransformerManufacturerId, "ComponentInspectionReportTransformer_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<TransformerManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TransformerManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TransformerManufacturerEntity, 0, null, null, relations, null, "TransformerManufacturerCollectionViaComponentInspectionReportTransformer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TransformerManufacturer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTransformerManufacturerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGeneral_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGeneralEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGeneral_", JoinHint.None);
				relations.Add(ComponentInspectionReportGeneralEntity.Relations.TransformerManufacturerEntityUsingGeneralTransformerManufacturerId, "ComponentInspectionReportGeneral_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<TransformerManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TransformerManufacturerEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TransformerManufacturerEntity, 0, null, null, relations, null, "TransformerManufacturerCollectionViaComponentInspectionReportGeneral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Vibrations' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathVibrationsCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				IRelationCollection relations = new RelationCollection();
				IEntityRelation intermediateRelation = ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId;
				intermediateRelation.SetAliases(string.Empty, "ComponentInspectionReportGearbox_");
				relations.Add(ComponentInspectionReportEntity.Relations.ComponentInspectionReportGearboxEntityUsingComponentInspectionReportId, "ComponentInspectionReportEntity__", "ComponentInspectionReportGearbox_", JoinHint.None);
				relations.Add(ComponentInspectionReportGearboxEntity.Relations.VibrationsEntityUsingGearboxVibrationsId, "ComponentInspectionReportGearbox_", string.Empty, JoinHint.None);
				return new PrefetchPathElement2(new EntityCollection<VibrationsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(VibrationsEntityFactory))),	intermediateRelation,
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.VibrationsEntity, 0, null, null, relations, null, "VibrationsCollectionViaComponentInspectionReportGearbox", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswer__
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),
					ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingMountedOnMainComponentBooleanAnswerId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, null, null, "BooleanAnswer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswer_
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),
					ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingSecondGeneratorBooleanAnswerId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, null, null, "BooleanAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BooleanAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBooleanAnswer
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory))),
					ComponentInspectionReportEntity.Relations.BooleanAnswerEntityUsingReconstructionBooleanAnswerId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.BooleanAnswerEntity, 0, null, null, null, null, "BooleanAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ComponentInspectionReportType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathComponentInspectionReportType
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportTypeEntityFactory))),
					ComponentInspectionReportEntity.Relations.ComponentInspectionReportTypeEntityUsingComponentInspectionReportTypeId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportTypeEntity, 0, null, null, null, null, "ComponentInspectionReportType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CountryIso' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCountryIso
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(CountryIsoEntityFactory))),
					ComponentInspectionReportEntity.Relations.CountryIsoEntityUsingCountryIsoid, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.CountryIsoEntity, 0, null, null, null, null, "CountryIso", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LocationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLocationType
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(LocationTypeEntityFactory))),
					ComponentInspectionReportEntity.Relations.LocationTypeEntityUsingLocationTypeId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.LocationTypeEntity, 0, null, null, null, null, "LocationType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ReportType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathReportType
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(ReportTypeEntityFactory))),
					ComponentInspectionReportEntity.Relations.ReportTypeEntityUsingReportTypeId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ReportTypeEntity, 0, null, null, null, null, "ReportType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Sbu' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSbu
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(SbuEntityFactory))),
					ComponentInspectionReportEntity.Relations.SbuEntityUsingSbuid, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.SbuEntity, 0, null, null, null, null, "Sbu", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ServiceReportNumberType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathServiceReportNumberType
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(ServiceReportNumberTypeEntityFactory))),
					ComponentInspectionReportEntity.Relations.ServiceReportNumberTypeEntityUsingServiceReportNumberTypeId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.ServiceReportNumberTypeEntity, 0, null, null, null, null, "ServiceReportNumberType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TurbineMatrix' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTurbineMatrix
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(TurbineMatrixEntityFactory))),
					ComponentInspectionReportEntity.Relations.TurbineMatrixEntityUsingTurbineMatrixId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TurbineMatrixEntity, 0, null, null, null, null, "TurbineMatrix", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TurbineRunStatus' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTurbineRunStatus_
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(TurbineRunStatusEntityFactory))),
					ComponentInspectionReportEntity.Relations.TurbineRunStatusEntityUsingAfterInspectionTurbineRunStatusId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TurbineRunStatusEntity, 0, null, null, null, null, "TurbineRunStatus_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TurbineRunStatus' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTurbineRunStatus
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(TurbineRunStatusEntityFactory))),
					ComponentInspectionReportEntity.Relations.TurbineRunStatusEntityUsingBeforeInspectionTurbineRunStatusId, 
					(int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity, (int)Cir.Data.LLBLGen.EntityType.TurbineRunStatusEntity, 0, null, null, null, null, "TurbineRunStatus", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}


		/// <summary> The custom properties for the type of this entity instance.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		[Browsable(false), XmlIgnore]
		public override Dictionary<string, string> CustomPropertiesOfType
		{
			get { return ComponentInspectionReportEntity.CustomProperties;}
		}

		/// <summary> The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value
		/// pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties
		{
			get { return _fieldsCustomProperties;}
		}

		/// <summary> The custom properties for the fields of the type of this entity instance. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		[Browsable(false), XmlIgnore]
		public override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType
		{
			get { return ComponentInspectionReportEntity.FieldsCustomProperties;}
		}

		/// <summary> The ComponentInspectionReportId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ComponentInspectionReportId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int64 ComponentInspectionReportId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.ComponentInspectionReportId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ComponentInspectionReportId, value); }
		}

		/// <summary> The ComponentInspectionReportTypeId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ComponentInspectionReportTypeId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 ComponentInspectionReportTypeId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.ComponentInspectionReportTypeId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ComponentInspectionReportTypeId, value); }
		}

		/// <summary> The ComponentInspectionReportStateId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ComponentInspectionReportStateId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 ComponentInspectionReportStateId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.ComponentInspectionReportStateId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ComponentInspectionReportStateId, value); }
		}

		/// <summary> The Cirtemplate property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."CIRTemplate"<br/>
		/// Table field type characteristics (type, precision, scale, length): Image, 0, 0, 2147483647<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.Byte[] Cirtemplate
		{
			get { return (System.Byte[])GetValue((int)ComponentInspectionReportFieldIndex.Cirtemplate, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Cirtemplate, value); }
		}

		/// <summary> The ReportTypeId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ReportTypeId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 ReportTypeId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.ReportTypeId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ReportTypeId, value); }
		}

		/// <summary> The ReconstructionBooleanAnswerId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ReconstructionBooleanAnswerId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 ReconstructionBooleanAnswerId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.ReconstructionBooleanAnswerId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ReconstructionBooleanAnswerId, value); }
		}

		/// <summary> The CimcaseNumber property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."CIMCaseNumber"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 CimcaseNumber
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.CimcaseNumber, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.CimcaseNumber, value); }
		}

		/// <summary> The ReasonForService property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ReasonForService"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ReasonForService
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.ReasonForService, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ReasonForService, value); }
		}

		/// <summary> The TurbineNumber property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."TurbineNumber"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 TurbineNumber
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.TurbineNumber, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.TurbineNumber, value); }
		}
        /// <summary> The Brand property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."Brand"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Brand
        {
            get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.Brand, true); }
            set { SetValue((int)ComponentInspectionReportFieldIndex.Brand, value); }
        }
        /// <summary> The CountryIsoid property of the Entity ComponentInspectionReport<br/><br/>
        /// </summary>
        /// <remarks>Mapped on  table field: "ComponentInspectionReport"."CountryISOId"<br/>
        /// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
        /// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
        public virtual System.Int64 CountryIsoid
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.CountryIsoid, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.CountryIsoid, value); }
		}

		/// <summary> The SiteName property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."SiteName"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String SiteName
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.SiteName, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.SiteName, value); }
		}

		/// <summary> The TurbineMatrixId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."TurbineMatrixId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 TurbineMatrixId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.TurbineMatrixId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.TurbineMatrixId, value); }
		}

		/// <summary> The LocationTypeId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."LocationTypeId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 LocationTypeId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.LocationTypeId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.LocationTypeId, value); }
		}

		/// <summary> The LocalTurbineId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."LocalTurbineId"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String LocalTurbineId
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.LocalTurbineId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.LocalTurbineId, value); }
		}

		/// <summary> The SecondGeneratorBooleanAnswerId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."SecondGeneratorBooleanAnswerId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int64> SecondGeneratorBooleanAnswerId
		{
			get { return (Nullable<System.Int64>)GetValue((int)ComponentInspectionReportFieldIndex.SecondGeneratorBooleanAnswerId, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.SecondGeneratorBooleanAnswerId, value); }
		}

		/// <summary> The BeforeInspectionTurbineRunStatusId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."BeforeInspectionTurbineRunStatusId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 BeforeInspectionTurbineRunStatusId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.BeforeInspectionTurbineRunStatusId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.BeforeInspectionTurbineRunStatusId, value); }
		}

		/// <summary> The CommisioningDate property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."CommisioningDate"<br/>
		/// Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime CommisioningDate
		{
			get { return (System.DateTime)GetValue((int)ComponentInspectionReportFieldIndex.CommisioningDate, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.CommisioningDate, value); }
		}

		/// <summary> The InstallationDate property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."InstallationDate"<br/>
		/// Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> InstallationDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)ComponentInspectionReportFieldIndex.InstallationDate, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.InstallationDate, value); }
		}

		/// <summary> The FailureDate property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."FailureDate"<br/>
		/// Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> FailureDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)ComponentInspectionReportFieldIndex.FailureDate, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.FailureDate, value); }
		}

		/// <summary> The InspectionDate property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."InspectionDate"<br/>
		/// Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime InspectionDate
		{
			get { return (System.DateTime)GetValue((int)ComponentInspectionReportFieldIndex.InspectionDate, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.InspectionDate, value); }
		}

		/// <summary> The ServiceReportNumber property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ServiceReportNumber"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String ServiceReportNumber
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.ServiceReportNumber, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ServiceReportNumber, value); }
		}

		/// <summary> The ServiceReportNumberTypeId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ServiceReportNumberTypeId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 ServiceReportNumberTypeId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.ServiceReportNumberTypeId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ServiceReportNumberTypeId, value); }
		}

		/// <summary> The ServiceEngineer property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ServiceEngineer"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String ServiceEngineer
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.ServiceEngineer, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ServiceEngineer, value); }
		}

		/// <summary> The RunHours property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."RunHours"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 RunHours
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.RunHours, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.RunHours, value); }
		}

		/// <summary> The Generator1Hrs property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."Generator1Hrs"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 Generator1Hrs
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.Generator1Hrs, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Generator1Hrs, value); }
		}

		/// <summary> The Generator2Hrs property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."Generator2Hrs"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int64> Generator2Hrs
		{
			get { return (Nullable<System.Int64>)GetValue((int)ComponentInspectionReportFieldIndex.Generator2Hrs, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Generator2Hrs, value); }
		}

		/// <summary> The TotalProduction property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."TotalProduction"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 TotalProduction
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.TotalProduction, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.TotalProduction, value); }
		}

		/// <summary> The AfterInspectionTurbineRunStatusId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."AfterInspectionTurbineRunStatusId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 AfterInspectionTurbineRunStatusId
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.AfterInspectionTurbineRunStatusId, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.AfterInspectionTurbineRunStatusId, value); }
		}

		/// <summary> The Quantity property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."Quantity"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 Quantity
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.Quantity, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Quantity, value); }
		}

		/// <summary> The AlarmLogNumber property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."AlarmLogNumber"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String AlarmLogNumber
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.AlarmLogNumber, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.AlarmLogNumber, value); }
		}

		/// <summary> The Description property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."Description"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2000<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Description
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.Description, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Description, value); }
		}

		/// <summary> The DescriptionConsquential property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."DescriptionConsquential"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2000<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String DescriptionConsquential
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.DescriptionConsquential, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.DescriptionConsquential, value); }
		}

		/// <summary> The ConductedBy property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ConductedBy"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ConductedBy
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.ConductedBy, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ConductedBy, value); }
		}

		/// <summary> The Sbuid property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."SBUId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 Sbuid
		{
			get { return (System.Int64)GetValue((int)ComponentInspectionReportFieldIndex.Sbuid, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Sbuid, value); }
		}

		/// <summary> The CirtemplateGuid property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."CIRTemplateGUID"<br/>
		/// Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 36<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String CirtemplateGuid
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.CirtemplateGuid, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.CirtemplateGuid, value); }
		}

		/// <summary> The VestasItemNumber property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."VestasItemNumber"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String VestasItemNumber
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.VestasItemNumber, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.VestasItemNumber, value); }
		}

		/// <summary> The Deleted property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."Deleted"<br/>
		/// Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> Deleted
		{
			get { return (Nullable<System.DateTime>)GetValue((int)ComponentInspectionReportFieldIndex.Deleted, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.Deleted, value); }
		}

		/// <summary> The DeletedBy property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."DeletedBy"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String DeletedBy
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.DeletedBy, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.DeletedBy, value); }
		}

		/// <summary> The NotificationNumber property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."NotificationNumber"<br/>
		/// Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String NotificationNumber
		{
			get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.NotificationNumber, true); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.NotificationNumber, value); }
		}

		/// <summary> The MountedOnMainComponentBooleanAnswerId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."MountedOnMainComponentBooleanAnswerId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int64> MountedOnMainComponentBooleanAnswerId
		{
			get { return (Nullable<System.Int64>)GetValue((int)ComponentInspectionReportFieldIndex.MountedOnMainComponentBooleanAnswerId, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.MountedOnMainComponentBooleanAnswerId, value); }
		}

		/// <summary> The ComponentUpTowerSolutionId property of the Entity ComponentInspectionReport<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "ComponentInspectionReport"."ComponentUpTowerSolutionID"<br/>
		/// Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ComponentUpTowerSolutionId
		{
			get { return (Nullable<System.Int32>)GetValue((int)ComponentInspectionReportFieldIndex.ComponentUpTowerSolutionId, false); }
			set	{ SetValue((int)ComponentInspectionReportFieldIndex.ComponentUpTowerSolutionId, value); }
		}

        //New Added Fields

        public virtual System.String AdditionalInformation
        {
            get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.AdditionalInfo, true); }
            set { SetValue((int)ComponentInspectionReportFieldIndex.AdditionalInfo, value); }
        }

        public virtual System.String InternalComments
        {
            get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.InternalComments, true); }
            set { SetValue((int)ComponentInspectionReportFieldIndex.InternalComments, value); }
        }
        public virtual System.String SBURecommendation
        {
            get { return (System.String)GetValue((int)ComponentInspectionReportFieldIndex.SBURecommendation, true); }
            set { SetValue((int)ComponentInspectionReportFieldIndex.SBURecommendation, value); }
        }
        /// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportBladeEntity' which are related to this entity via a relation of type '1:n'.
        /// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
        [TypeContainedAttribute(typeof(ComponentInspectionReportBladeEntity))]
		public virtual EntityCollection<ComponentInspectionReportBladeEntity> ComponentInspectionReportBlade
		{
			get
			{
				if(_componentInspectionReportBlade==null)
				{
					_componentInspectionReportBlade = new EntityCollection<ComponentInspectionReportBladeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportBladeEntityFactory)));
					_componentInspectionReportBlade.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportGearboxEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentInspectionReportGearboxEntity))]
		public virtual EntityCollection<ComponentInspectionReportGearboxEntity> ComponentInspectionReportGearbox
		{
			get
			{
				if(_componentInspectionReportGearbox==null)
				{
					_componentInspectionReportGearbox = new EntityCollection<ComponentInspectionReportGearboxEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGearboxEntityFactory)));
					_componentInspectionReportGearbox.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportGeneralEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentInspectionReportGeneralEntity))]
		public virtual EntityCollection<ComponentInspectionReportGeneralEntity> ComponentInspectionReportGeneral
		{
			get
			{
				if(_componentInspectionReportGeneral==null)
				{
					_componentInspectionReportGeneral = new EntityCollection<ComponentInspectionReportGeneralEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGeneralEntityFactory)));
					_componentInspectionReportGeneral.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportGeneratorEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentInspectionReportGeneratorEntity))]
		public virtual EntityCollection<ComponentInspectionReportGeneratorEntity> ComponentInspectionReportGenerator
		{
			get
			{
				if(_componentInspectionReportGenerator==null)
				{
					_componentInspectionReportGenerator = new EntityCollection<ComponentInspectionReportGeneratorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportGeneratorEntityFactory)));
					_componentInspectionReportGenerator.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportMainBearingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentInspectionReportMainBearingEntity))]
		public virtual EntityCollection<ComponentInspectionReportMainBearingEntity> ComponentInspectionReportMainBearing
		{
			get
			{
				if(_componentInspectionReportMainBearing==null)
				{
					_componentInspectionReportMainBearing = new EntityCollection<ComponentInspectionReportMainBearingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportMainBearingEntityFactory)));
					_componentInspectionReportMainBearing.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportMainBearing;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportSkiiPEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentInspectionReportSkiiPEntity))]
		public virtual EntityCollection<ComponentInspectionReportSkiiPEntity> ComponentInspectionReportSkiiP
		{
			get
			{
				if(_componentInspectionReportSkiiP==null)
				{
					_componentInspectionReportSkiiP = new EntityCollection<ComponentInspectionReportSkiiPEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportSkiiPEntityFactory)));
					_componentInspectionReportSkiiP.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportSkiiP;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentInspectionReportTransformerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentInspectionReportTransformerEntity))]
		public virtual EntityCollection<ComponentInspectionReportTransformerEntity> ComponentInspectionReportTransformer
		{
			get
			{
				if(_componentInspectionReportTransformer==null)
				{
					_componentInspectionReportTransformer = new EntityCollection<ComponentInspectionReportTransformerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentInspectionReportTransformerEntityFactory)));
					_componentInspectionReportTransformer.SetContainingEntityInfo(this, "ComponentInspectionReport");
				}
				return _componentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActionOnTransformerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActionOnTransformerEntity))]
		public virtual EntityCollection<ActionOnTransformerEntity> ActionOnTransformerCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_actionOnTransformerCollectionViaComponentInspectionReportTransformer==null)
				{
					_actionOnTransformerCollectionViaComponentInspectionReportTransformer = new EntityCollection<ActionOnTransformerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActionOnTransformerEntityFactory)));
					_actionOnTransformerCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _actionOnTransformerCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActionToBeTakenOnGeneratorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActionToBeTakenOnGeneratorEntity))]
		public virtual EntityCollection<ActionToBeTakenOnGeneratorEntity> ActionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator==null)
				{
					_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator = new EntityCollection<ActionToBeTakenOnGeneratorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActionToBeTakenOnGeneratorEntityFactory)));
					_actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _actionToBeTakenOnGeneratorCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ArcDetectionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ArcDetectionEntity))]
		public virtual EntityCollection<ArcDetectionEntity> ArcDetectionCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_arcDetectionCollectionViaComponentInspectionReportTransformer==null)
				{
					_arcDetectionCollectionViaComponentInspectionReportTransformer = new EntityCollection<ArcDetectionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ArcDetectionEntityFactory)));
					_arcDetectionCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _arcDetectionCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingErrorEntity))]
		public virtual EntityCollection<BearingErrorEntity> BearingErrorCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_bearingErrorCollectionViaComponentInspectionReportGearbox____==null)
				{
					_bearingErrorCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory)));
					_bearingErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _bearingErrorCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingErrorEntity))]
		public virtual EntityCollection<BearingErrorEntity> BearingErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_bearingErrorCollectionViaComponentInspectionReportGearbox==null)
				{
					_bearingErrorCollectionViaComponentInspectionReportGearbox = new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory)));
					_bearingErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _bearingErrorCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingErrorEntity))]
		public virtual EntityCollection<BearingErrorEntity> BearingErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_bearingErrorCollectionViaComponentInspectionReportGearbox___==null)
				{
					_bearingErrorCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory)));
					_bearingErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _bearingErrorCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingErrorEntity))]
		public virtual EntityCollection<BearingErrorEntity> BearingErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_bearingErrorCollectionViaComponentInspectionReportGearbox_==null)
				{
					_bearingErrorCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory)));
					_bearingErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _bearingErrorCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingErrorEntity))]
		public virtual EntityCollection<BearingErrorEntity> BearingErrorCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_bearingErrorCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_bearingErrorCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory)));
					_bearingErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _bearingErrorCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingErrorEntity))]
		public virtual EntityCollection<BearingErrorEntity> BearingErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_bearingErrorCollectionViaComponentInspectionReportGearbox__==null)
				{
					_bearingErrorCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<BearingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingErrorEntityFactory)));
					_bearingErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _bearingErrorCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingPosEntity))]
		public virtual EntityCollection<BearingPosEntity> BearingPosCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_bearingPosCollectionViaComponentInspectionReportGearbox____==null)
				{
					_bearingPosCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory)));
					_bearingPosCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _bearingPosCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingPosEntity))]
		public virtual EntityCollection<BearingPosEntity> BearingPosCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_bearingPosCollectionViaComponentInspectionReportGearbox_==null)
				{
					_bearingPosCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory)));
					_bearingPosCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _bearingPosCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingPosEntity))]
		public virtual EntityCollection<BearingPosEntity> BearingPosCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_bearingPosCollectionViaComponentInspectionReportGearbox__==null)
				{
					_bearingPosCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory)));
					_bearingPosCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _bearingPosCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingPosEntity))]
		public virtual EntityCollection<BearingPosEntity> BearingPosCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_bearingPosCollectionViaComponentInspectionReportGearbox___==null)
				{
					_bearingPosCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory)));
					_bearingPosCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _bearingPosCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingPosEntity))]
		public virtual EntityCollection<BearingPosEntity> BearingPosCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_bearingPosCollectionViaComponentInspectionReportGearbox==null)
				{
					_bearingPosCollectionViaComponentInspectionReportGearbox = new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory)));
					_bearingPosCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _bearingPosCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingPosEntity))]
		public virtual EntityCollection<BearingPosEntity> BearingPosCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_bearingPosCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_bearingPosCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<BearingPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingPosEntityFactory)));
					_bearingPosCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _bearingPosCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingTypeEntity))]
		public virtual EntityCollection<BearingTypeEntity> BearingTypeCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_bearingTypeCollectionViaComponentInspectionReportGearbox_==null)
				{
					_bearingTypeCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory)));
					_bearingTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _bearingTypeCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingTypeEntity))]
		public virtual EntityCollection<BearingTypeEntity> BearingTypeCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_bearingTypeCollectionViaComponentInspectionReportGearbox__==null)
				{
					_bearingTypeCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory)));
					_bearingTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _bearingTypeCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingTypeEntity))]
		public virtual EntityCollection<BearingTypeEntity> BearingTypeCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_bearingTypeCollectionViaComponentInspectionReportGearbox___==null)
				{
					_bearingTypeCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory)));
					_bearingTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _bearingTypeCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingTypeEntity))]
		public virtual EntityCollection<BearingTypeEntity> BearingTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_bearingTypeCollectionViaComponentInspectionReportGearbox==null)
				{
					_bearingTypeCollectionViaComponentInspectionReportGearbox = new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory)));
					_bearingTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _bearingTypeCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingTypeEntity))]
		public virtual EntityCollection<BearingTypeEntity> BearingTypeCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_bearingTypeCollectionViaComponentInspectionReportGearbox____==null)
				{
					_bearingTypeCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory)));
					_bearingTypeCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _bearingTypeCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BearingTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BearingTypeEntity))]
		public virtual EntityCollection<BearingTypeEntity> BearingTypeCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_bearingTypeCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_bearingTypeCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<BearingTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BearingTypeEntityFactory)));
					_bearingTypeCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _bearingTypeCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BladeColorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BladeColorEntity))]
		public virtual EntityCollection<BladeColorEntity> BladeColorCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_bladeColorCollectionViaComponentInspectionReportBlade==null)
				{
					_bladeColorCollectionViaComponentInspectionReportBlade = new EntityCollection<BladeColorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BladeColorEntityFactory)));
					_bladeColorCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _bladeColorCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BladeLengthEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BladeLengthEntity))]
		public virtual EntityCollection<BladeLengthEntity> BladeLengthCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_bladeLengthCollectionViaComponentInspectionReportBlade==null)
				{
					_bladeLengthCollectionViaComponentInspectionReportBlade = new EntityCollection<BladeLengthEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BladeLengthEntityFactory)));
					_bladeLengthCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _bladeLengthCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP______
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP______==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP______ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP______.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP___
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP___==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP___ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP___.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP____
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP____==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP____ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP____.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_____________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportGeneral_
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportGeneral_==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportGeneral_ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportGeneral_.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportGeneral_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportBlade_
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportBlade_==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportBlade_ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportBlade_.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportBlade_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportBlade==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportBlade = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportGeneral==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportGeneral = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportGenerator==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportGenerator = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportMainBearing==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportMainBearing = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportMainBearing.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportMainBearing;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportTransformer==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportTransformer = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP___________________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP___________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP__________________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP__________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP__
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP__==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP__ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP__.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportGearbox==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportGearbox = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportGearbox_==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_______________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP______________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP______________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP____________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP____________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP_________________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP_________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BooleanAnswerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BooleanAnswerEntity))]
		public virtual EntityCollection<BooleanAnswerEntity> BooleanAnswerCollectionViaComponentInspectionReportSkiiP________________
		{
			get
			{
				if(_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________==null)
				{
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________ = new EntityCollection<BooleanAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BooleanAnswerEntityFactory)));
					_booleanAnswerCollectionViaComponentInspectionReportSkiiP________________.IsReadOnly=true;
				}
				return _booleanAnswerCollectionViaComponentInspectionReportSkiiP________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BracketsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BracketsEntity))]
		public virtual EntityCollection<BracketsEntity> BracketsCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_bracketsCollectionViaComponentInspectionReportTransformer==null)
				{
					_bracketsCollectionViaComponentInspectionReportTransformer = new EntityCollection<BracketsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BracketsEntityFactory)));
					_bracketsCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _bracketsCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CableConditionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CableConditionEntity))]
		public virtual EntityCollection<CableConditionEntity> CableConditionCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_cableConditionCollectionViaComponentInspectionReportTransformer==null)
				{
					_cableConditionCollectionViaComponentInspectionReportTransformer = new EntityCollection<CableConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CableConditionEntityFactory)));
					_cableConditionCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _cableConditionCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CableConditionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CableConditionEntity))]
		public virtual EntityCollection<CableConditionEntity> CableConditionCollectionViaComponentInspectionReportTransformer_
		{
			get
			{
				if(_cableConditionCollectionViaComponentInspectionReportTransformer_==null)
				{
					_cableConditionCollectionViaComponentInspectionReportTransformer_ = new EntityCollection<CableConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CableConditionEntityFactory)));
					_cableConditionCollectionViaComponentInspectionReportTransformer_.IsReadOnly=true;
				}
				return _cableConditionCollectionViaComponentInspectionReportTransformer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ClimateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ClimateEntity))]
		public virtual EntityCollection<ClimateEntity> ClimateCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_climateCollectionViaComponentInspectionReportTransformer==null)
				{
					_climateCollectionViaComponentInspectionReportTransformer = new EntityCollection<ClimateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClimateEntityFactory)));
					_climateCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _climateCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CoilConditionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CoilConditionEntity))]
		public virtual EntityCollection<CoilConditionEntity> CoilConditionCollectionViaComponentInspectionReportTransformer_
		{
			get
			{
				if(_coilConditionCollectionViaComponentInspectionReportTransformer_==null)
				{
					_coilConditionCollectionViaComponentInspectionReportTransformer_ = new EntityCollection<CoilConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CoilConditionEntityFactory)));
					_coilConditionCollectionViaComponentInspectionReportTransformer_.IsReadOnly=true;
				}
				return _coilConditionCollectionViaComponentInspectionReportTransformer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CoilConditionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CoilConditionEntity))]
		public virtual EntityCollection<CoilConditionEntity> CoilConditionCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_coilConditionCollectionViaComponentInspectionReportTransformer==null)
				{
					_coilConditionCollectionViaComponentInspectionReportTransformer = new EntityCollection<CoilConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CoilConditionEntityFactory)));
					_coilConditionCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _coilConditionCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ComponentGroupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ComponentGroupEntity))]
		public virtual EntityCollection<ComponentGroupEntity> ComponentGroupCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_componentGroupCollectionViaComponentInspectionReportGeneral==null)
				{
					_componentGroupCollectionViaComponentInspectionReportGeneral = new EntityCollection<ComponentGroupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ComponentGroupEntityFactory)));
					_componentGroupCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _componentGroupCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ConnectionBarsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ConnectionBarsEntity))]
		public virtual EntityCollection<ConnectionBarsEntity> ConnectionBarsCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_connectionBarsCollectionViaComponentInspectionReportTransformer==null)
				{
					_connectionBarsCollectionViaComponentInspectionReportTransformer = new EntityCollection<ConnectionBarsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ConnectionBarsEntityFactory)));
					_connectionBarsCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _connectionBarsCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ControllerTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ControllerTypeEntity))]
		public virtual EntityCollection<ControllerTypeEntity> ControllerTypeCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_controllerTypeCollectionViaComponentInspectionReportGeneral==null)
				{
					_controllerTypeCollectionViaComponentInspectionReportGeneral = new EntityCollection<ControllerTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ControllerTypeEntityFactory)));
					_controllerTypeCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _controllerTypeCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CouplingEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CouplingEntity))]
		public virtual EntityCollection<CouplingEntity> CouplingCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_couplingCollectionViaComponentInspectionReportGenerator==null)
				{
					_couplingCollectionViaComponentInspectionReportGenerator = new EntityCollection<CouplingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouplingEntityFactory)));
					_couplingCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _couplingCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CouplingEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CouplingEntity))]
		public virtual EntityCollection<CouplingEntity> CouplingCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_couplingCollectionViaComponentInspectionReportGearbox==null)
				{
					_couplingCollectionViaComponentInspectionReportGearbox = new EntityCollection<CouplingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouplingEntityFactory)));
					_couplingCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _couplingCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox__________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox__________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox__________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox__________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox__________________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox__________________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox__________________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox__________________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox__________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox______
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox______==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox______ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox______.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_______
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_______==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_______ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_______.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox___________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox___________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox___________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox___________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_________________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_________________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_________________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_________________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox________________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox________________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox________________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox________________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox____________________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox____________________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox____________________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox____________________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox____________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox___________________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox___________________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox___________________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox___________________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox___________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_____________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_____________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_____________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox____________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox____________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox____________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox____________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_______________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_______________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_______________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_______________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox______________
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox______________==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox______________ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox______________.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox___==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox__==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox____==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DamageDecisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DamageDecisionEntity))]
		public virtual EntityCollection<DamageDecisionEntity> DamageDecisionCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_damageDecisionCollectionViaComponentInspectionReportGearbox_==null)
				{
					_damageDecisionCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<DamageDecisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DamageDecisionEntityFactory)));
					_damageDecisionCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _damageDecisionCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DebrisGearboxEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DebrisGearboxEntity))]
		public virtual EntityCollection<DebrisGearboxEntity> DebrisGearboxCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_debrisGearboxCollectionViaComponentInspectionReportGearbox==null)
				{
					_debrisGearboxCollectionViaComponentInspectionReportGearbox = new EntityCollection<DebrisGearboxEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DebrisGearboxEntityFactory)));
					_debrisGearboxCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _debrisGearboxCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DebrisOnMagnetEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DebrisOnMagnetEntity))]
		public virtual EntityCollection<DebrisOnMagnetEntity> DebrisOnMagnetCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_debrisOnMagnetCollectionViaComponentInspectionReportGearbox==null)
				{
					_debrisOnMagnetCollectionViaComponentInspectionReportGearbox = new EntityCollection<DebrisOnMagnetEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DebrisOnMagnetEntityFactory)));
					_debrisOnMagnetCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _debrisOnMagnetCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ElectricalPumpEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ElectricalPumpEntity))]
		public virtual EntityCollection<ElectricalPumpEntity> ElectricalPumpCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_electricalPumpCollectionViaComponentInspectionReportGearbox==null)
				{
					_electricalPumpCollectionViaComponentInspectionReportGearbox = new EntityCollection<ElectricalPumpEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ElectricalPumpEntityFactory)));
					_electricalPumpCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _electricalPumpCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FaultCodeAreaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FaultCodeAreaEntity))]
		public virtual EntityCollection<FaultCodeAreaEntity> FaultCodeAreaCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_faultCodeAreaCollectionViaComponentInspectionReportBlade==null)
				{
					_faultCodeAreaCollectionViaComponentInspectionReportBlade = new EntityCollection<FaultCodeAreaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeAreaEntityFactory)));
					_faultCodeAreaCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _faultCodeAreaCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FaultCodeCauseEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FaultCodeCauseEntity))]
		public virtual EntityCollection<FaultCodeCauseEntity> FaultCodeCauseCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_faultCodeCauseCollectionViaComponentInspectionReportBlade==null)
				{
					_faultCodeCauseCollectionViaComponentInspectionReportBlade = new EntityCollection<FaultCodeCauseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeCauseEntityFactory)));
					_faultCodeCauseCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _faultCodeCauseCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FaultCodeClassificationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FaultCodeClassificationEntity))]
		public virtual EntityCollection<FaultCodeClassificationEntity> FaultCodeClassificationCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_faultCodeClassificationCollectionViaComponentInspectionReportBlade==null)
				{
					_faultCodeClassificationCollectionViaComponentInspectionReportBlade = new EntityCollection<FaultCodeClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeClassificationEntityFactory)));
					_faultCodeClassificationCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _faultCodeClassificationCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FaultCodeTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FaultCodeTypeEntity))]
		public virtual EntityCollection<FaultCodeTypeEntity> FaultCodeTypeCollectionViaComponentInspectionReportBlade
		{
			get
			{
				if(_faultCodeTypeCollectionViaComponentInspectionReportBlade==null)
				{
					_faultCodeTypeCollectionViaComponentInspectionReportBlade = new EntityCollection<FaultCodeTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FaultCodeTypeEntityFactory)));
					_faultCodeTypeCollectionViaComponentInspectionReportBlade.IsReadOnly=true;
				}
				return _faultCodeTypeCollectionViaComponentInspectionReportBlade;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FilterBlockTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FilterBlockTypeEntity))]
		public virtual EntityCollection<FilterBlockTypeEntity> FilterBlockTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_filterBlockTypeCollectionViaComponentInspectionReportGearbox==null)
				{
					_filterBlockTypeCollectionViaComponentInspectionReportGearbox = new EntityCollection<FilterBlockTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FilterBlockTypeEntityFactory)));
					_filterBlockTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _filterBlockTypeCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearboxManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearboxManufacturerEntity))]
		public virtual EntityCollection<GearboxManufacturerEntity> GearboxManufacturerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_gearboxManufacturerCollectionViaComponentInspectionReportGeneral==null)
				{
					_gearboxManufacturerCollectionViaComponentInspectionReportGeneral = new EntityCollection<GearboxManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxManufacturerEntityFactory)));
					_gearboxManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _gearboxManufacturerCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearboxManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearboxManufacturerEntity))]
		public virtual EntityCollection<GearboxManufacturerEntity> GearboxManufacturerCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_gearboxManufacturerCollectionViaComponentInspectionReportGearbox==null)
				{
					_gearboxManufacturerCollectionViaComponentInspectionReportGearbox = new EntityCollection<GearboxManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxManufacturerEntityFactory)));
					_gearboxManufacturerCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _gearboxManufacturerCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearboxRevisionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearboxRevisionEntity))]
		public virtual EntityCollection<GearboxRevisionEntity> GearboxRevisionCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_gearboxRevisionCollectionViaComponentInspectionReportGearbox==null)
				{
					_gearboxRevisionCollectionViaComponentInspectionReportGearbox = new EntityCollection<GearboxRevisionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxRevisionEntityFactory)));
					_gearboxRevisionCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _gearboxRevisionCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearboxTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearboxTypeEntity))]
		public virtual EntityCollection<GearboxTypeEntity> GearboxTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_gearboxTypeCollectionViaComponentInspectionReportGearbox==null)
				{
					_gearboxTypeCollectionViaComponentInspectionReportGearbox = new EntityCollection<GearboxTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearboxTypeEntityFactory)));
					_gearboxTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _gearboxTypeCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox____________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox____________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox____________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox____________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox_________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox_________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox_________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox_________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox__________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox__________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox__________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox__________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox___________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox___________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox___________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox___________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox_____________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox_____________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox_____________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox_==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox______
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox______==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox______ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox______.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox______________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox______________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox______________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox______________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox________
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox________==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox________ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox________.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox___==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox____==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox__==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearErrorEntity))]
		public virtual EntityCollection<GearErrorEntity> GearErrorCollectionViaComponentInspectionReportGearbox_______
		{
			get
			{
				if(_gearErrorCollectionViaComponentInspectionReportGearbox_______==null)
				{
					_gearErrorCollectionViaComponentInspectionReportGearbox_______ = new EntityCollection<GearErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearErrorEntityFactory)));
					_gearErrorCollectionViaComponentInspectionReportGearbox_______.IsReadOnly=true;
				}
				return _gearErrorCollectionViaComponentInspectionReportGearbox_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox___==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox_==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox____==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox__==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox_________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox_________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox_________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox_________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox__________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox__________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox__________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox__________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox_______
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox_______==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox_______ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox_______.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox___________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox___________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox___________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox___________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox______________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox______________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox______________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox______________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox______
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox______==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox______ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox______.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox____________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox____________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox____________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox____________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GearTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GearTypeEntity))]
		public virtual EntityCollection<GearTypeEntity> GearTypeCollectionViaComponentInspectionReportGearbox_____________
		{
			get
			{
				if(_gearTypeCollectionViaComponentInspectionReportGearbox_____________==null)
				{
					_gearTypeCollectionViaComponentInspectionReportGearbox_____________ = new EntityCollection<GearTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GearTypeEntityFactory)));
					_gearTypeCollectionViaComponentInspectionReportGearbox_____________.IsReadOnly=true;
				}
				return _gearTypeCollectionViaComponentInspectionReportGearbox_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorCoverEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorCoverEntity))]
		public virtual EntityCollection<GeneratorCoverEntity> GeneratorCoverCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_generatorCoverCollectionViaComponentInspectionReportGenerator==null)
				{
					_generatorCoverCollectionViaComponentInspectionReportGenerator = new EntityCollection<GeneratorCoverEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorCoverEntityFactory)));
					_generatorCoverCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _generatorCoverCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorDriveEndEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorDriveEndEntity))]
		public virtual EntityCollection<GeneratorDriveEndEntity> GeneratorDriveEndCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_generatorDriveEndCollectionViaComponentInspectionReportGenerator==null)
				{
					_generatorDriveEndCollectionViaComponentInspectionReportGenerator = new EntityCollection<GeneratorDriveEndEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorDriveEndEntityFactory)));
					_generatorDriveEndCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _generatorDriveEndCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorManufacturerEntity))]
		public virtual EntityCollection<GeneratorManufacturerEntity> GeneratorManufacturerCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_generatorManufacturerCollectionViaComponentInspectionReportGearbox_==null)
				{
					_generatorManufacturerCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory)));
					_generatorManufacturerCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _generatorManufacturerCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorManufacturerEntity))]
		public virtual EntityCollection<GeneratorManufacturerEntity> GeneratorManufacturerCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_generatorManufacturerCollectionViaComponentInspectionReportGearbox==null)
				{
					_generatorManufacturerCollectionViaComponentInspectionReportGearbox = new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory)));
					_generatorManufacturerCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _generatorManufacturerCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorManufacturerEntity))]
		public virtual EntityCollection<GeneratorManufacturerEntity> GeneratorManufacturerCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_generatorManufacturerCollectionViaComponentInspectionReportGenerator==null)
				{
					_generatorManufacturerCollectionViaComponentInspectionReportGenerator = new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory)));
					_generatorManufacturerCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _generatorManufacturerCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorManufacturerEntity))]
		public virtual EntityCollection<GeneratorManufacturerEntity> GeneratorManufacturerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_generatorManufacturerCollectionViaComponentInspectionReportGeneral==null)
				{
					_generatorManufacturerCollectionViaComponentInspectionReportGeneral = new EntityCollection<GeneratorManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorManufacturerEntityFactory)));
					_generatorManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _generatorManufacturerCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorNonDriveEndEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorNonDriveEndEntity))]
		public virtual EntityCollection<GeneratorNonDriveEndEntity> GeneratorNonDriveEndCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator==null)
				{
					_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator = new EntityCollection<GeneratorNonDriveEndEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorNonDriveEndEntityFactory)));
					_generatorNonDriveEndCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _generatorNonDriveEndCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GeneratorRotorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GeneratorRotorEntity))]
		public virtual EntityCollection<GeneratorRotorEntity> GeneratorRotorCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_generatorRotorCollectionViaComponentInspectionReportGenerator==null)
				{
					_generatorRotorCollectionViaComponentInspectionReportGenerator = new EntityCollection<GeneratorRotorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GeneratorRotorEntityFactory)));
					_generatorRotorCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _generatorRotorCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HousingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HousingErrorEntity))]
		public virtual EntityCollection<HousingErrorEntity> HousingErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_housingErrorCollectionViaComponentInspectionReportGearbox_==null)
				{
					_housingErrorCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory)));
					_housingErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _housingErrorCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HousingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HousingErrorEntity))]
		public virtual EntityCollection<HousingErrorEntity> HousingErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_housingErrorCollectionViaComponentInspectionReportGearbox__==null)
				{
					_housingErrorCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory)));
					_housingErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _housingErrorCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HousingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HousingErrorEntity))]
		public virtual EntityCollection<HousingErrorEntity> HousingErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_housingErrorCollectionViaComponentInspectionReportGearbox___==null)
				{
					_housingErrorCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory)));
					_housingErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _housingErrorCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HousingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HousingErrorEntity))]
		public virtual EntityCollection<HousingErrorEntity> HousingErrorCollectionViaComponentInspectionReportGearbox____
		{
			get
			{
				if(_housingErrorCollectionViaComponentInspectionReportGearbox____==null)
				{
					_housingErrorCollectionViaComponentInspectionReportGearbox____ = new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory)));
					_housingErrorCollectionViaComponentInspectionReportGearbox____.IsReadOnly=true;
				}
				return _housingErrorCollectionViaComponentInspectionReportGearbox____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HousingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HousingErrorEntity))]
		public virtual EntityCollection<HousingErrorEntity> HousingErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_housingErrorCollectionViaComponentInspectionReportGearbox==null)
				{
					_housingErrorCollectionViaComponentInspectionReportGearbox = new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory)));
					_housingErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _housingErrorCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HousingErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HousingErrorEntity))]
		public virtual EntityCollection<HousingErrorEntity> HousingErrorCollectionViaComponentInspectionReportGearbox_____
		{
			get
			{
				if(_housingErrorCollectionViaComponentInspectionReportGearbox_____==null)
				{
					_housingErrorCollectionViaComponentInspectionReportGearbox_____ = new EntityCollection<HousingErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HousingErrorEntityFactory)));
					_housingErrorCollectionViaComponentInspectionReportGearbox_____.IsReadOnly=true;
				}
				return _housingErrorCollectionViaComponentInspectionReportGearbox_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'InlineFilterEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(InlineFilterEntity))]
		public virtual EntityCollection<InlineFilterEntity> InlineFilterCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_inlineFilterCollectionViaComponentInspectionReportGearbox==null)
				{
					_inlineFilterCollectionViaComponentInspectionReportGearbox = new EntityCollection<InlineFilterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(InlineFilterEntityFactory)));
					_inlineFilterCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _inlineFilterCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MagnetPosEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MagnetPosEntity))]
		public virtual EntityCollection<MagnetPosEntity> MagnetPosCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_magnetPosCollectionViaComponentInspectionReportGearbox==null)
				{
					_magnetPosCollectionViaComponentInspectionReportGearbox = new EntityCollection<MagnetPosEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MagnetPosEntityFactory)));
					_magnetPosCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _magnetPosCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MainBearingErrorLocationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MainBearingErrorLocationEntity))]
		public virtual EntityCollection<MainBearingErrorLocationEntity> MainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				if(_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing==null)
				{
					_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing = new EntityCollection<MainBearingErrorLocationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingErrorLocationEntityFactory)));
					_mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing.IsReadOnly=true;
				}
				return _mainBearingErrorLocationCollectionViaComponentInspectionReportMainBearing;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MainBearingManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MainBearingManufacturerEntity))]
		public virtual EntityCollection<MainBearingManufacturerEntity> MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				if(_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing==null)
				{
					_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing = new EntityCollection<MainBearingManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingManufacturerEntityFactory)));
					_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing.IsReadOnly=true;
				}
				return _mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MainBearingManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MainBearingManufacturerEntity))]
		public virtual EntityCollection<MainBearingManufacturerEntity> MainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_
		{
			get
			{
				if(_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_==null)
				{
					_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_ = new EntityCollection<MainBearingManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MainBearingManufacturerEntityFactory)));
					_mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_.IsReadOnly=true;
				}
				return _mainBearingManufacturerCollectionViaComponentInspectionReportMainBearing_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MechanicalOilPumpEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MechanicalOilPumpEntity))]
		public virtual EntityCollection<MechanicalOilPumpEntity> MechanicalOilPumpCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox==null)
				{
					_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox = new EntityCollection<MechanicalOilPumpEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MechanicalOilPumpEntityFactory)));
					_mechanicalOilPumpCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _mechanicalOilPumpCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NoiseEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NoiseEntity))]
		public virtual EntityCollection<NoiseEntity> NoiseCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_noiseCollectionViaComponentInspectionReportGearbox==null)
				{
					_noiseCollectionViaComponentInspectionReportGearbox = new EntityCollection<NoiseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NoiseEntityFactory)));
					_noiseCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _noiseCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator_
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator_==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator_ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator_.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator___
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator___==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator___ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator___.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator____
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator____==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator____ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator____.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator__
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator__==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator__ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator__.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator______
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator______==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator______ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator______.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator_____
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator_____==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator_____ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator_____.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator________
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator________==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator________ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator________.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OhmUnitEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OhmUnitEntity))]
		public virtual EntityCollection<OhmUnitEntity> OhmUnitCollectionViaComponentInspectionReportGenerator_______
		{
			get
			{
				if(_ohmUnitCollectionViaComponentInspectionReportGenerator_______==null)
				{
					_ohmUnitCollectionViaComponentInspectionReportGenerator_______ = new EntityCollection<OhmUnitEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OhmUnitEntityFactory)));
					_ohmUnitCollectionViaComponentInspectionReportGenerator_______.IsReadOnly=true;
				}
				return _ohmUnitCollectionViaComponentInspectionReportGenerator_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OilLevelEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OilLevelEntity))]
		public virtual EntityCollection<OilLevelEntity> OilLevelCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_oilLevelCollectionViaComponentInspectionReportGearbox==null)
				{
					_oilLevelCollectionViaComponentInspectionReportGearbox = new EntityCollection<OilLevelEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilLevelEntityFactory)));
					_oilLevelCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _oilLevelCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OilTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OilTypeEntity))]
		public virtual EntityCollection<OilTypeEntity> OilTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_oilTypeCollectionViaComponentInspectionReportGearbox==null)
				{
					_oilTypeCollectionViaComponentInspectionReportGearbox = new EntityCollection<OilTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilTypeEntityFactory)));
					_oilTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _oilTypeCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OilTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OilTypeEntity))]
		public virtual EntityCollection<OilTypeEntity> OilTypeCollectionViaComponentInspectionReportMainBearing
		{
			get
			{
				if(_oilTypeCollectionViaComponentInspectionReportMainBearing==null)
				{
					_oilTypeCollectionViaComponentInspectionReportMainBearing = new EntityCollection<OilTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OilTypeEntityFactory)));
					_oilTypeCollectionViaComponentInspectionReportMainBearing.IsReadOnly=true;
				}
				return _oilTypeCollectionViaComponentInspectionReportMainBearing;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OverallGearboxConditionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OverallGearboxConditionEntity))]
		public virtual EntityCollection<OverallGearboxConditionEntity> OverallGearboxConditionCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_overallGearboxConditionCollectionViaComponentInspectionReportGearbox==null)
				{
					_overallGearboxConditionCollectionViaComponentInspectionReportGearbox = new EntityCollection<OverallGearboxConditionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OverallGearboxConditionEntityFactory)));
					_overallGearboxConditionCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _overallGearboxConditionCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftErrorEntity))]
		public virtual EntityCollection<ShaftErrorEntity> ShaftErrorCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_shaftErrorCollectionViaComponentInspectionReportGearbox___==null)
				{
					_shaftErrorCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory)));
					_shaftErrorCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _shaftErrorCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftErrorEntity))]
		public virtual EntityCollection<ShaftErrorEntity> ShaftErrorCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_shaftErrorCollectionViaComponentInspectionReportGearbox_==null)
				{
					_shaftErrorCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory)));
					_shaftErrorCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _shaftErrorCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftErrorEntity))]
		public virtual EntityCollection<ShaftErrorEntity> ShaftErrorCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_shaftErrorCollectionViaComponentInspectionReportGearbox==null)
				{
					_shaftErrorCollectionViaComponentInspectionReportGearbox = new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory)));
					_shaftErrorCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _shaftErrorCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftErrorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftErrorEntity))]
		public virtual EntityCollection<ShaftErrorEntity> ShaftErrorCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_shaftErrorCollectionViaComponentInspectionReportGearbox__==null)
				{
					_shaftErrorCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<ShaftErrorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftErrorEntityFactory)));
					_shaftErrorCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _shaftErrorCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftTypeEntity))]
		public virtual EntityCollection<ShaftTypeEntity> ShaftTypeCollectionViaComponentInspectionReportGearbox_
		{
			get
			{
				if(_shaftTypeCollectionViaComponentInspectionReportGearbox_==null)
				{
					_shaftTypeCollectionViaComponentInspectionReportGearbox_ = new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory)));
					_shaftTypeCollectionViaComponentInspectionReportGearbox_.IsReadOnly=true;
				}
				return _shaftTypeCollectionViaComponentInspectionReportGearbox_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftTypeEntity))]
		public virtual EntityCollection<ShaftTypeEntity> ShaftTypeCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_shaftTypeCollectionViaComponentInspectionReportGearbox==null)
				{
					_shaftTypeCollectionViaComponentInspectionReportGearbox = new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory)));
					_shaftTypeCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _shaftTypeCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftTypeEntity))]
		public virtual EntityCollection<ShaftTypeEntity> ShaftTypeCollectionViaComponentInspectionReportGearbox__
		{
			get
			{
				if(_shaftTypeCollectionViaComponentInspectionReportGearbox__==null)
				{
					_shaftTypeCollectionViaComponentInspectionReportGearbox__ = new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory)));
					_shaftTypeCollectionViaComponentInspectionReportGearbox__.IsReadOnly=true;
				}
				return _shaftTypeCollectionViaComponentInspectionReportGearbox__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShaftTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShaftTypeEntity))]
		public virtual EntityCollection<ShaftTypeEntity> ShaftTypeCollectionViaComponentInspectionReportGearbox___
		{
			get
			{
				if(_shaftTypeCollectionViaComponentInspectionReportGearbox___==null)
				{
					_shaftTypeCollectionViaComponentInspectionReportGearbox___ = new EntityCollection<ShaftTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShaftTypeEntityFactory)));
					_shaftTypeCollectionViaComponentInspectionReportGearbox___.IsReadOnly=true;
				}
				return _shaftTypeCollectionViaComponentInspectionReportGearbox___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShrinkElementEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShrinkElementEntity))]
		public virtual EntityCollection<ShrinkElementEntity> ShrinkElementCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_shrinkElementCollectionViaComponentInspectionReportGearbox==null)
				{
					_shrinkElementCollectionViaComponentInspectionReportGearbox = new EntityCollection<ShrinkElementEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShrinkElementEntityFactory)));
					_shrinkElementCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _shrinkElementCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SkiipackFailureCauseEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SkiipackFailureCauseEntity))]
		public virtual EntityCollection<SkiipackFailureCauseEntity> SkiipackFailureCauseCollectionViaComponentInspectionReportSkiiP
		{
			get
			{
				if(_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP==null)
				{
					_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP = new EntityCollection<SkiipackFailureCauseEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SkiipackFailureCauseEntityFactory)));
					_skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP.IsReadOnly=true;
				}
				return _skiipackFailureCauseCollectionViaComponentInspectionReportSkiiP;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurgeArrestorEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurgeArrestorEntity))]
		public virtual EntityCollection<SurgeArrestorEntity> SurgeArrestorCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_surgeArrestorCollectionViaComponentInspectionReportTransformer==null)
				{
					_surgeArrestorCollectionViaComponentInspectionReportTransformer = new EntityCollection<SurgeArrestorEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurgeArrestorEntityFactory)));
					_surgeArrestorCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _surgeArrestorCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TowerHeightEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TowerHeightEntity))]
		public virtual EntityCollection<TowerHeightEntity> TowerHeightCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_towerHeightCollectionViaComponentInspectionReportGeneral==null)
				{
					_towerHeightCollectionViaComponentInspectionReportGeneral = new EntityCollection<TowerHeightEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TowerHeightEntityFactory)));
					_towerHeightCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _towerHeightCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TowerTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TowerTypeEntity))]
		public virtual EntityCollection<TowerTypeEntity> TowerTypeCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_towerTypeCollectionViaComponentInspectionReportGeneral==null)
				{
					_towerTypeCollectionViaComponentInspectionReportGeneral = new EntityCollection<TowerTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TowerTypeEntityFactory)));
					_towerTypeCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _towerTypeCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TransformerManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TransformerManufacturerEntity))]
		public virtual EntityCollection<TransformerManufacturerEntity> TransformerManufacturerCollectionViaComponentInspectionReportTransformer
		{
			get
			{
				if(_transformerManufacturerCollectionViaComponentInspectionReportTransformer==null)
				{
					_transformerManufacturerCollectionViaComponentInspectionReportTransformer = new EntityCollection<TransformerManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TransformerManufacturerEntityFactory)));
					_transformerManufacturerCollectionViaComponentInspectionReportTransformer.IsReadOnly=true;
				}
				return _transformerManufacturerCollectionViaComponentInspectionReportTransformer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TransformerManufacturerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TransformerManufacturerEntity))]
		public virtual EntityCollection<TransformerManufacturerEntity> TransformerManufacturerCollectionViaComponentInspectionReportGeneral
		{
			get
			{
				if(_transformerManufacturerCollectionViaComponentInspectionReportGeneral==null)
				{
					_transformerManufacturerCollectionViaComponentInspectionReportGeneral = new EntityCollection<TransformerManufacturerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TransformerManufacturerEntityFactory)));
					_transformerManufacturerCollectionViaComponentInspectionReportGeneral.IsReadOnly=true;
				}
				return _transformerManufacturerCollectionViaComponentInspectionReportGeneral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'VibrationsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(VibrationsEntity))]
		public virtual EntityCollection<VibrationsEntity> VibrationsCollectionViaComponentInspectionReportGearbox
		{
			get
			{
				if(_vibrationsCollectionViaComponentInspectionReportGearbox==null)
				{
					_vibrationsCollectionViaComponentInspectionReportGearbox = new EntityCollection<VibrationsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(VibrationsEntityFactory)));
					_vibrationsCollectionViaComponentInspectionReportGearbox.IsReadOnly=true;
				}
				return _vibrationsCollectionViaComponentInspectionReportGearbox;
			}
		}

		/// <summary> Gets / sets related entity of type 'BooleanAnswerEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual BooleanAnswerEntity BooleanAnswer__
		{
			get
			{
				return _booleanAnswer__;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncBooleanAnswer__(value);
				}
				else
				{
					if(value==null)
					{
						if(_booleanAnswer__ != null)
						{
							_booleanAnswer__.UnsetRelatedEntity(this, "ComponentInspectionReport__");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport__");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'BooleanAnswerEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual BooleanAnswerEntity BooleanAnswer_
		{
			get
			{
				return _booleanAnswer_;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncBooleanAnswer_(value);
				}
				else
				{
					if(value==null)
					{
						if(_booleanAnswer_ != null)
						{
							_booleanAnswer_.UnsetRelatedEntity(this, "ComponentInspectionReport_");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport_");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'BooleanAnswerEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual BooleanAnswerEntity BooleanAnswer
		{
			get
			{
				return _booleanAnswer;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncBooleanAnswer(value);
				}
				else
				{
					if(value==null)
					{
						if(_booleanAnswer != null)
						{
							_booleanAnswer.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'ComponentInspectionReportTypeEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual ComponentInspectionReportTypeEntity ComponentInspectionReportType
		{
			get
			{
				return _componentInspectionReportType;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncComponentInspectionReportType(value);
				}
				else
				{
					if(value==null)
					{
						if(_componentInspectionReportType != null)
						{
							_componentInspectionReportType.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'CountryIsoEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual CountryIsoEntity CountryIso
		{
			get
			{
				return _countryIso;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncCountryIso(value);
				}
				else
				{
					if(value==null)
					{
						if(_countryIso != null)
						{
							_countryIso.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'LocationTypeEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual LocationTypeEntity LocationType
		{
			get
			{
				return _locationType;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncLocationType(value);
				}
				else
				{
					if(value==null)
					{
						if(_locationType != null)
						{
							_locationType.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'ReportTypeEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual ReportTypeEntity ReportType
		{
			get
			{
				return _reportType;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncReportType(value);
				}
				else
				{
					if(value==null)
					{
						if(_reportType != null)
						{
							_reportType.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'SbuEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual SbuEntity Sbu
		{
			get
			{
				return _sbu;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncSbu(value);
				}
				else
				{
					if(value==null)
					{
						if(_sbu != null)
						{
							_sbu.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'ServiceReportNumberTypeEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual ServiceReportNumberTypeEntity ServiceReportNumberType
		{
			get
			{
				return _serviceReportNumberType;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncServiceReportNumberType(value);
				}
				else
				{
					if(value==null)
					{
						if(_serviceReportNumberType != null)
						{
							_serviceReportNumberType.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'TurbineMatrixEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual TurbineMatrixEntity TurbineMatrix
		{
			get
			{
				return _turbineMatrix;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncTurbineMatrix(value);
				}
				else
				{
					if(value==null)
					{
						if(_turbineMatrix != null)
						{
							_turbineMatrix.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'TurbineRunStatusEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual TurbineRunStatusEntity TurbineRunStatus_
		{
			get
			{
				return _turbineRunStatus_;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncTurbineRunStatus_(value);
				}
				else
				{
					if(value==null)
					{
						if(_turbineRunStatus_ != null)
						{
							_turbineRunStatus_.UnsetRelatedEntity(this, "ComponentInspectionReport_");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport_");
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'TurbineRunStatusEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual TurbineRunStatusEntity TurbineRunStatus
		{
			get
			{
				return _turbineRunStatus;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncTurbineRunStatus(value);
				}
				else
				{
					if(value==null)
					{
						if(_turbineRunStatus != null)
						{
							_turbineRunStatus.UnsetRelatedEntity(this, "ComponentInspectionReport");
						}
					}
					else
					{
						((IEntity2)value).SetRelatedEntity(this, "ComponentInspectionReport");
					}
				}
			}
		}

	
		
		/// <summary> Gets the type of the hierarchy this entity is in. </summary>
		protected override InheritanceHierarchyType LLBLGenProIsInHierarchyOfType
		{
			get { return InheritanceHierarchyType.None;}
		}
		
		/// <summary> Gets or sets a value indicating whether this entity is a subtype</summary>
		protected override bool LLBLGenProIsSubType
		{
			get { return false;}
		}
		
		/// <summary>Returns the EntityType enum value for this entity.</summary>
		[Browsable(false), XmlIgnore]
		public override int LLBLGenProEntityTypeValue 
		{ 
			get { return (int)Cir.Data.LLBLGen.EntityType.ComponentInspectionReportEntity; }
		}
		#endregion


		#region Custom Entity code
		
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END
		#endregion

		#region Included code

		#endregion
	}
}
